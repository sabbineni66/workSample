<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
 <Token>
  <TokenIdentifier>
   <Name>gdk_init</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-init</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Initializes the GDK library and connects to the X server.
If initialization fails, a warning message is output and the application
terminates with a call to &lt;code class=&quot;literal&quot;&gt;exit(1)&lt;/code&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_init (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; *argc,
    &lt;a href= &gt;gchar&lt;/a&gt; ***argv);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_init_check</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-init-check</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Initializes the GDK library and connects to the X server, returning &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; on
success.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gboolean&lt;/a&gt; gdk_init_check (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; *argc,
    &lt;a href= &gt;gchar&lt;/a&gt; ***argv);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_parse_args</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-parse-args</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Parse command line arguments, and store for future
use by calls to &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-open&quot; title=&quot;gdk_display_open ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_open()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_parse_args (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; *argc,
    &lt;a href= &gt;gchar&lt;/a&gt; ***argv);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_get_display_arg_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-get-display-arg-name</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Gets the display name specified in the command line arguments passed
to &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-init&quot; title=&quot;gdk_init ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_init()&lt;/code&gt;&lt;/a&gt; or &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-parse-args&quot; title=&quot;gdk_parse_args ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_parse_args()&lt;/code&gt;&lt;/a&gt;, if any.</Abstract>
  <Declaration type="html">&lt;pre&gt;const &lt;a href= &gt;gchar&lt;/a&gt;* gdk_get_display_arg_name (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_set_locale</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-set-locale</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Initializes the support for internationalization by calling the &lt;code class=&quot;function&quot;&gt;&lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-running.html#setlocale&quot;
&gt;&lt;code class=&quot;function&quot;&gt;setlocale()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;
system call. This function is called by &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/gtk-General.html#gtk-set-locale&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_set_locale()&lt;/code&gt;&lt;/a&gt; and so GTK+
applications should use that instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gchar&lt;/a&gt;* gdk_set_locale (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_set_sm_client_id</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-set-sm-client-id</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Sets the &lt;code class=&quot;literal&quot;&gt;SM_CLIENT_ID&lt;/code&gt; property on the application's leader window so that
the window manager can save the application's state using the X11R6 ICCCM
session management protocol.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_set_sm_client_id (
    const &lt;a href= &gt;gchar&lt;/a&gt; *sm_client_id);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_exit</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-exit</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Exits the application using the &lt;code class=&quot;function&quot;&gt;&lt;code class=&quot;function&quot;&gt;exit()&lt;/code&gt;&lt;/code&gt; system call.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_exit (
    &lt;a href= &gt;gint&lt;/a&gt; error_code);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_exit&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_notify_startup_complete</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-notify-startup-complete</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Indicates to the GUI environment that the application has finished
loading. If the applications opens windows, this function is
normally called after opening the application's initial set of
windows.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_notify_startup_complete (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_notify_startup_complete_with_id</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-notify-startup-complete-with-id</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Indicates to the GUI environment that the application has finished
loading, using a given identifier.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_notify_startup_complete_with_id (
    const &lt;a href= &gt;gchar&lt;/a&gt; *startup_id);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_get_program_class</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-get-program-class</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Gets the program class. Unless the program class has explicitly
been set with &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-set-program-class&quot; title=&quot;gdk_set_program_class ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_set_program_class()&lt;/code&gt;&lt;/a&gt; or with the &lt;code class=&quot;option&quot;&gt;--class&lt;/code&gt; 
commandline option, the default value is the program name (determined 
with &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Miscellaneous-Utility-Functions.html#g-get-prgname&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_get_prgname()&lt;/code&gt;&lt;/a&gt;) with the first character converted to uppercase. </Abstract>
  <Declaration type="html">&lt;pre&gt;const char* gdk_get_program_class (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_set_program_class</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-set-program-class</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Sets the program class. The X11 backend uses the program class to set
the class name part of the &lt;code class=&quot;literal&quot;&gt;WM_CLASS&lt;/code&gt; property on
toplevel windows; see the ICCCM.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_set_program_class (
    const char *program_class);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_get_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-get-display</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Gets the name of the display, which usually comes from the &lt;code class=&quot;envar&quot;&gt;DISPLAY&lt;/code&gt;
environment variable or the &lt;code class=&quot;option&quot;&gt;--display&lt;/code&gt; command line option.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gchar&lt;/a&gt;* gdk_get_display (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_flush</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-flush</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Flushes the X output buffer and waits until all requests have been processed
by the server. This is rarely needed by applications. It's main use is for
trapping X errors with &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-error-trap-push&quot; title=&quot;gdk_error_trap_push ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_error_trap_push()&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-error-trap-pop&quot; title=&quot;gdk_error_trap_pop ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_error_trap_pop()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_flush (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_width</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-screen-width</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Returns the width of the default screen in pixels.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gint&lt;/a&gt; gdk_screen_width (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_height</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-screen-height</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Returns the height of the default screen in pixels.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gint&lt;/a&gt; gdk_screen_height (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_width_mm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-screen-width-mm</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Returns the width of the default screen in millimeters.
Note that on many X servers this value will not be correct.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gint&lt;/a&gt; gdk_screen_width_mm (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_height_mm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-screen-height-mm</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Returns the height of the default screen in millimeters.
Note that on many X servers this value will not be correct.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gint&lt;/a&gt; gdk_screen_height_mm (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pointer_grab</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-pointer-grab</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Grabs the pointer (usually a mouse) so that all events are passed to this
application until the pointer is ungrabbed with &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-pointer-ungrab&quot; title=&quot;gdk_pointer_ungrab ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pointer_ungrab()&lt;/code&gt;&lt;/a&gt;, or
the grab window becomes unviewable.
This overrides any previous pointer grab by this client.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-General.html#GdkGrabStatus&quot; href=&quot;enum GdkGrabStatus&quot; title=&quot;link&quot;&gt;GdkGrabStatus&lt;/a&gt; gdk_pointer_grab (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; owner_events,
    &lt;a class=&quot;gdk-Events.html#GdkEventMask&quot; href=&quot;enum GdkEventMask&quot; title=&quot;link&quot;&gt;GdkEventMask&lt;/a&gt; event_mask,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *confine_to,
    &lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&gt;GdkCursor&lt;/a&gt; *cursor,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAB_SUCCESS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>GdkGrabStatus</Anchor>
  <NodeRef refid="60"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAB_SUCCESS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGrabStatus</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAB_ALREADY_GRABBED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>GdkGrabStatus</Anchor>
  <NodeRef refid="60"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAB_ALREADY_GRABBED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGrabStatus</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAB_INVALID_TIME</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>GdkGrabStatus</Anchor>
  <NodeRef refid="60"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAB_INVALID_TIME&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGrabStatus</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAB_NOT_VIEWABLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>GdkGrabStatus</Anchor>
  <NodeRef refid="60"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAB_NOT_VIEWABLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGrabStatus</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAB_FROZEN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>GdkGrabStatus</Anchor>
  <NodeRef refid="60"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAB_FROZEN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGrabStatus</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkGrabStatus</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>GdkGrabStatus</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Returned by &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-pointer-grab&quot; title=&quot;gdk_pointer_grab ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pointer_grab()&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-keyboard-grab&quot; title=&quot;gdk_keyboard_grab ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_keyboard_grab()&lt;/code&gt;&lt;/a&gt; to indicate 
success or the reason for the failure of the grab attempt.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_GRAB_SUCCESS = 0,
    GDK_GRAB_ALREADY_GRABBED = 1,
    GDK_GRAB_INVALID_TIME = 2,
    GDK_GRAB_NOT_VIEWABLE = 3,
    GDK_GRAB_FROZEN = 4 
} GdkGrabStatus;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pointer_ungrab</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-pointer-ungrab</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Ungrabs the pointer on the default display, if it is grabbed by this 
application.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pointer_ungrab (
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pointer_is_grabbed</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-pointer-is-grabbed</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if the pointer on the default display is currently 
grabbed by this application.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gboolean&lt;/a&gt; gdk_pointer_is_grabbed (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_set_double_click_time</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-set-double-click-time</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Set the double click time for the default display. See
&lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-set-double-click-time&quot; title=&quot;gdk_display_set_double_click_time ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_set_double_click_time()&lt;/code&gt;&lt;/a&gt;. 
See also &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-set-double-click-distance&quot; title=&quot;gdk_display_set_double_click_distance ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_set_double_click_distance()&lt;/code&gt;&lt;/a&gt;.
Applications should &lt;span class=&quot;emphasis&quot;&gt;&lt;em&gt;not&lt;/em&gt;&lt;/span&gt; set this, it is a 
global user-configured setting.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_set_double_click_time (
    &lt;a href= &gt;guint&lt;/a&gt; msec);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyboard_grab</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-keyboard-grab</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Grabs the keyboard so that all events are passed to this
application until the keyboard is ungrabbed with &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-keyboard-ungrab&quot; title=&quot;gdk_keyboard_ungrab ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_keyboard_ungrab()&lt;/code&gt;&lt;/a&gt;.
This overrides any previous keyboard grab by this client.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-General.html#GdkGrabStatus&quot; href=&quot;enum GdkGrabStatus&quot; title=&quot;link&quot;&gt;GdkGrabStatus&lt;/a&gt; gdk_keyboard_grab (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; owner_events,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyboard_ungrab</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-keyboard-ungrab</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Ungrabs the keyboard on the default display, if it is grabbed by this 
application.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_keyboard_ungrab (
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_beep</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-beep</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Emits a short beep on the default display.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_beep (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_get_use_xshm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-get-use-xshm</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if GDK will attempt to use the MIT-SHM shared memory extension.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gboolean&lt;/a&gt; gdk_get_use_xshm (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_get_use_xshm&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_set_use_xshm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-set-use-xshm</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Sets whether the use of the MIT shared memory extension should be attempted.
This function is mainly for internal use. It is only safe for an application
to set this to &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#FALSE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;FALSE&lt;/code&gt;&lt;/a&gt;, since if it is set to &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; and the server does not
support the extension it may cause warning messages to be output.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_set_use_xshm (
    &lt;a href= &gt;gboolean&lt;/a&gt; use_xshm);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_set_use_xshm&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_error_trap_push</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-error-trap-push</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">This function allows X errors to be trapped instead of the normal behavior
of exiting the application. It should only be used if it is not possible to
avoid the X error in any other way.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_error_trap_push (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_error_trap_pop</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>gdk-error-trap-pop</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">Removes the X error trap installed with &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-error-trap-push&quot; title=&quot;gdk_error_trap_push ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_error_trap_push()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gint&lt;/a&gt; gdk_error_trap_pop (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOWING_X11</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>GDK-WINDOWING-X11:CAPS</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">This macro is defined if GDK is configured to use the X backend.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_WINDOWING_X11&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOWING_WIN32</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-General.html</Path>
  <Anchor>GDK-WINDOWING-WIN32:CAPS</Anchor>
  <NodeRef refid="2"/>
  <Abstract type="html">This macro is defined if GDK is configured to use the Win32 backend.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_WINDOWING_WIN32&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDisplay</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>GdkDisplay-struct</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">The &lt;span class=&quot;structname&quot;&gt;GdkDisplay&lt;/span&gt; struct is the GDK representation
of an X display. All its fields are private and should not be accessed directly. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkDisplay GdkDisplay;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_open</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-open</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Opens a display.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDisplay&lt;/a&gt;* gdk_display_open (
    const &lt;a href= &gt;gchar&lt;/a&gt; *display_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_default</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-default</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Gets the default &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt;. This is a convenience
function for
&lt;code class=&quot;literal&quot;&gt;gdk_display_manager_get_default_display (&lt;a class=&quot;link&quot; href=&quot;GdkDisplayManager.html#gdk-display-manager-get&quot; title=&quot;gdk_display_manager_get ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_manager_get()&lt;/code&gt;&lt;/a&gt;)&lt;/code&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt;* gdk_display_get_default (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-name</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Gets the name of the display.</Abstract>
  <Declaration type="html">&lt;pre&gt;const &lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt;* gdk_display_get_name (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_n_screens</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-n-screens</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Gets the number of screen managed by the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_display_get_n_screens (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-screen</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns a screen object for one of the screens of the display.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt;* gdk_display_get_screen (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a href= &gt;gint&lt;/a&gt; screen_num);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_default_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-default-screen</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Get the default &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt; for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt;* gdk_display_get_default_screen (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_pointer_ungrab</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-pointer-ungrab</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Release any pointer grab.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_pointer_ungrab (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_keyboard_ungrab</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-keyboard-ungrab</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Release any keyboard grab</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_keyboard_ungrab (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_pointer_is_grabbed</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-pointer-is-grabbed</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Test if the pointer is grabbed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_display_pointer_is_grabbed (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_beep</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-beep</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Emits a short beep on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_beep (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_sync</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-sync</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Flushes any requests queued for the windowing system and waits until all
requests have been handled. This is often used for making sure that the
display is synchronized with the current state of the program. Calling
&lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-sync&quot; title=&quot;gdk_display_sync ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_sync()&lt;/code&gt;&lt;/a&gt; before &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-error-trap-pop&quot; title=&quot;gdk_error_trap_pop ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_error_trap_pop()&lt;/code&gt;&lt;/a&gt; makes sure that any errors
generated from earlier requests are handled before the error trap is 
removed.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_sync (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_flush</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-flush</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Flushes any requests queued for the windowing system; this happens automatically
when the main loop blocks waiting for new events, but if your application
is drawing without returning control to the main loop, you may need
to call this function explicitely. A common case where this function
needs to be called is when an application is executing drawing commands
from a thread other than the thread where the main loop is running.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_flush (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_close</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-close</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Closes the connection to the windowing system for the given display,
and cleans up associated resources.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_close (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_list_devices</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-list-devices</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns the list of available input devices attached to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.
The list is statically allocated and should not be freed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;GList&lt;/a&gt;* gdk_display_list_devices (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_event</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-event</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Gets the next &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEvent&quot; title=&quot;union GdkEvent&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEvent&lt;/span&gt;&lt;/a&gt; to be processed for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;, fetching events from the
windowing system if necessary.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt;* gdk_display_get_event (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_peek_event</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-peek-event</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Gets a copy of the first &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEvent&quot; title=&quot;union GdkEvent&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEvent&lt;/span&gt;&lt;/a&gt; in the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;'s event queue, without
removing the event from the queue.  (Note that this function will
not get more events from the windowing system.  It only checks the events
that have already been moved to the GDK event queue.)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt;* gdk_display_peek_event (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_put_event</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-put-event</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Appends a copy of the given event onto the front of the event
queue for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_put_event (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt; *event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_add_client_message_filter</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-add-client-message-filter</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Adds a filter to be called when X ClientMessage events are received.
See &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-add-filter&quot; title=&quot;gdk_window_add_filter ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_add_filter()&lt;/code&gt;&lt;/a&gt; if you are interested in filtering other
types of events.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_add_client_message_filter (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; message_type,
    &lt;a class=&quot;gdk-Windows.html#GdkFilterFunc&quot; href=&quot;GdkFilterFunc ()&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkFilterFunc&lt;/a&gt; func,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_set_double_click_time</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-set-double-click-time</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Sets the double click time (two clicks within this time interval
count as a double click and result in a &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-2BUTTON-PRESS:CAPS&quot;&gt;&lt;span class=&quot;type&quot;&gt;GDK_2BUTTON_PRESS&lt;/span&gt;&lt;/a&gt; event).
Applications should &lt;span class=&quot;emphasis&quot;&gt;&lt;em&gt;not&lt;/em&gt;&lt;/span&gt; set this, it is a global 
user-configured setting.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_set_double_click_time (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a href= &gt;guint&lt;/a&gt; msec);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_set_double_click_distance</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-set-double-click-distance</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Sets the double click distance (two clicks within this distance
count as a double click and result in a &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-2BUTTON-PRESS:CAPS&quot;&gt;&lt;span class=&quot;type&quot;&gt;GDK_2BUTTON_PRESS&lt;/span&gt;&lt;/a&gt; event).
See also &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-set-double-click-time&quot; title=&quot;gdk_display_set_double_click_time ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_set_double_click_time()&lt;/code&gt;&lt;/a&gt;.
Applications should &lt;span class=&quot;emphasis&quot;&gt;&lt;em&gt;not&lt;/em&gt;&lt;/span&gt; set this, it is a global 
user-configured setting.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_set_double_click_distance (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a href= &gt;guint&lt;/a&gt; distance);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_pointer</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-pointer</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Gets the current location of the pointer and the current modifier
mask for a given display.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_get_pointer (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkScreen&lt;/a&gt; **screen,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *x,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; *y,
    &lt;a class=&quot;gdk-Windows.html#GdkModifierType&quot; href=&quot;enum GdkModifierType&quot; title=&gt;GdkModifierType&lt;/a&gt; *mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_window_at_pointer</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-window-at-pointer</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Obtains the window underneath the mouse pointer, returning the location
of that window in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;win_x&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;win_y&lt;/code&gt;&lt;/em&gt; for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;. Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; if the window 
under the mouse pointer is not known to GDK (for example, belongs to
another application).</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_display_get_window_at_pointer (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *win_x,
    &lt;a href= &gt;gint&lt;/a&gt; *win_y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDisplayPointerHooks</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>GdkDisplayPointerHooks</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">A table of pointers to functions for getting quantities related to 
the current pointer position. Each &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; has a table of this type,
which can be set using &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-set-pointer-hooks&quot; title=&quot;gdk_display_set_pointer_hooks ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_set_pointer_hooks()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    void (*get_pointer) (GdkDisplay *display, GdkScreen **screen, gint *x, gint *y, GdkModifierType *mask);
    GdkWindow* (*window_get_pointer) (GdkDisplay *display, GdkWindow *window, gint *x, gint *y, GdkModifierType *mask);
    GdkWindow* (*window_at_pointer) (GdkDisplay *display, gint *win_x, gint *win_y);
} GdkDisplayPointerHooks;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_set_pointer_hooks</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-set-pointer-hooks</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">This function allows for hooking into the operation
of getting the current location of the pointer on a particular
display. This is only useful for such low-level tools as an
event recorder. Applications should never have any
reason to use this facility.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplay.html#GdkDisplayPointerHooks&quot; href=&quot;GdkDisplayPointerHooks&quot; title=&quot;link&quot;&gt;GdkDisplayPointerHooks&lt;/a&gt;* gdk_display_set_pointer_hooks (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    const &lt;a class=&quot;GdkDisplay.html#GdkDisplayPointerHooks&quot; href=&quot;GdkDisplayPointerHooks&quot; title=&gt;GdkDisplayPointerHooks&lt;/a&gt; *new_hooks);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_warp_pointer</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-warp-pointer</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Warps the pointer of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt; to the point &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/em&gt;,&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/em&gt; on 
the screen &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;, unless the pointer is confined
to a window by a grab, in which case it will be moved
as far as allowed by the grab. Warping the pointer 
creates events as if the user had moved the mouse 
instantaneously to the destination.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_warp_pointer (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_supports_cursor_color</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-supports-cursor-color</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if multicolored cursors are supported
on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;. Otherwise, cursors have only a forground
and a background color.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_display_supports_cursor_color (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_supports_cursor_alpha</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-supports-cursor-alpha</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if cursors can use an 8bit alpha channel
on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;. Otherwise, cursors are restricted to bilevel
alpha (i.e. a mask).</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_display_supports_cursor_alpha (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_default_cursor_size</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-default-cursor-size</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns the default size to use for cursors on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; gdk_display_get_default_cursor_size (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_maximal_cursor_size</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-maximal-cursor-size</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Gets the maximal size to use for cursors on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_get_maximal_cursor_size (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;guint&lt;/a&gt; *width,
    &lt;a href= &gt;guint&lt;/a&gt; *height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_default_group</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-get-default-group</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns the default group leader window for all toplevel windows
on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;. This window is implicitly created by GDK. 
See &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-group&quot; title=&quot;gdk_window_set_group ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_group()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_display_get_default_group (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_supports_selection_notification</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-supports-selection-notification</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns whether &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventOwnerChange&quot; title=&quot;GdkEventOwnerChange&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventOwnerChange&lt;/span&gt;&lt;/a&gt; events will be 
sent when the owner of a selection changes.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_display_supports_selection_notification (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_request_selection_notification</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-request-selection-notification</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Request &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventOwnerChange&quot; title=&quot;GdkEventOwnerChange&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventOwnerChange&lt;/span&gt;&lt;/a&gt; events for ownership changes
of the selection named by the given atom.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_display_request_selection_notification (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; selection);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_supports_clipboard_persistence</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-supports-clipboard-persistence</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns whether the speicifed display supports clipboard
persistance; i.e. if it's possible to store the clipboard data after an
application has quit. On X11 this checks if a clipboard daemon is
running.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_display_supports_clipboard_persistence (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_store_clipboard</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-store-clipboard</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Issues a request to the clipboard manager to store the
clipboard data. On X11, this is a special program that works
according to the freedesktop clipboard specification, available at
&lt;a class=&quot;ulink&quot; href=&quot;http://www.freedesktop.org/Standards/clipboard-manager-spec&quot; target=&quot;_top&quot;&gt;
http://www.freedesktop.org/Standards/clipboard-manager-spec&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_store_clipboard (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *clipboard_window,
    guint32 time_,
    const &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; *targets,
    &lt;a href= &gt;gint&lt;/a&gt; n_targets);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_supports_shapes</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-supports-shapes</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-shape-combine-mask&quot; title=&quot;gdk_window_shape_combine_mask ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_shape_combine_mask()&lt;/code&gt;&lt;/a&gt; can
be used to create shaped windows on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_display_supports_shapes (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_supports_input_shapes</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-supports-input-shapes</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-input-shape-combine-mask&quot; title=&quot;gdk_window_input_shape_combine_mask ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_input_shape_combine_mask()&lt;/code&gt;&lt;/a&gt; can
be used to modify the input shape of windows on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_display_supports_input_shapes (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_supports_composite</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplay.html</Path>
  <Anchor>gdk-display-supports-composite</Anchor>
  <NodeRef refid="4"/>
  <Abstract type="html">Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-composited&quot; title=&quot;gdk_window_set_composited ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_composited()&lt;/code&gt;&lt;/a&gt; can be used
to redirect drawing on the window using compositing.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_display_supports_composite (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDisplayManager</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplayManager.html</Path>
  <Anchor>GdkDisplayManager-struct</Anchor>
  <NodeRef refid="5"/>
  <Abstract type="html">The &lt;span class=&quot;structname&quot;&gt;GdkDisplayManager&lt;/span&gt; struct has no interesting 
fields.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkDisplayManager GdkDisplayManager;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_manager_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplayManager.html</Path>
  <Anchor>gdk-display-manager-get</Anchor>
  <NodeRef refid="5"/>
  <Abstract type="html">Returns the global &lt;a class=&quot;link&quot; href=&quot;GdkDisplayManager.html&quot; title=&quot;GdkDisplayManager&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplayManager&lt;/span&gt;&lt;/a&gt; singleton; &lt;code class=&quot;function&quot;&gt;gdk_parse_pargs()&lt;/code&gt;,
&lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-init&quot; title=&quot;gdk_init ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_init()&lt;/code&gt;&lt;/a&gt;, or &lt;a class=&quot;link&quot; href=&quot;gdk-General.html#gdk-init-check&quot; title=&quot;gdk_init_check ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_init_check()&lt;/code&gt;&lt;/a&gt; must have been called first.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplayManager.html&quot; href=&quot;GdkDisplayManager&quot; title=&gt;GdkDisplayManager&lt;/a&gt;* gdk_display_manager_get (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_manager_get_default_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplayManager.html</Path>
  <Anchor>gdk-display-manager-get-default-display</Anchor>
  <NodeRef refid="5"/>
  <Abstract type="html">Gets the default &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt;* gdk_display_manager_get_default_display (
    &lt;a class=&quot;GdkDisplayManager.html&quot; href=&quot;GdkDisplayManager&quot; title=&gt;GdkDisplayManager&lt;/a&gt; *display_manager);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_manager_set_default_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplayManager.html</Path>
  <Anchor>gdk-display-manager-set-default-display</Anchor>
  <NodeRef refid="5"/>
  <Abstract type="html">Sets &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt; as the default display.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_display_manager_set_default_display (
    &lt;a class=&quot;GdkDisplayManager.html&quot; href=&quot;GdkDisplayManager&quot; title=&quot;link&quot;&gt;GdkDisplayManager&lt;/a&gt; *display_manager,
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_manager_list_displays</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplayManager.html</Path>
  <Anchor>gdk-display-manager-list-displays</Anchor>
  <NodeRef refid="5"/>
  <Abstract type="html">List all currently open displays.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;GSList&lt;/a&gt;* gdk_display_manager_list_displays (
    &lt;a class=&quot;GdkDisplayManager.html&quot; href=&quot;GdkDisplayManager&quot; title=&gt;GdkDisplayManager&lt;/a&gt; *display_manager);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_display_get_core_pointer</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkDisplayManager.html</Path>
  <Anchor>gdk-display-get-core-pointer</Anchor>
  <NodeRef refid="5"/>
  <Abstract type="html">Returns the core pointer device for the given display</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Input-Devices.html#GdkDevice&quot; href=&quot;GdkDevice&quot; title=&quot;link&quot;&gt;GdkDevice&lt;/a&gt;* gdk_display_get_core_pointer (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkScreen</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>GdkScreen-struct</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">This is a currently just a placeholder typedef for the first argument of 
the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window_at_pointer&lt;/code&gt;&lt;/em&gt; function in &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkPointerHooks&quot; title=&quot;GdkPointerHooks&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPointerHooks&lt;/span&gt;&lt;/a&gt;. It will be used
when GDK gets multihead support. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkScreen GdkScreen;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_default</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-default</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the default screen for the default display. (See
&lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-get-default&quot; title=&quot;gdk_display_get_default ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_get_default()&lt;/code&gt;&lt;/a&gt;).</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt;* gdk_screen_get_default (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_default_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-default-colormap</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the default colormap for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_screen_get_default_colormap (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_set_default_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-set-default-colormap</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Sets the default &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;colormap&lt;/code&gt;&lt;/em&gt; for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_screen_set_default_colormap (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *colormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_system_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-system-colormap</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the system's default colormap for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_screen_get_system_colormap (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_system_visual</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-system-visual</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Get the system's default visual for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;.
This is the visual for the root window of the display.
The return value should not be freed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;link&quot;&gt;GdkVisual&lt;/a&gt;* gdk_screen_get_system_visual (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_rgb_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-rgb-colormap</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the preferred colormap for rendering image data on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;.
Not a very useful function; historically, GDK could only render RGB
image data to one colormap and visual, but in the current version
it can render to any colormap and visual. So there's no need to
call this function.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_screen_get_rgb_colormap (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_rgb_visual</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-rgb-visual</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets a &quot;preferred visual&quot; chosen by GdkRGB for rendering image data
on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;. In previous versions of
GDK, this was the only visual GdkRGB could use for rendering. In
current versions, it's simply the visual GdkRGB would have chosen as 
the optimal one in those previous versions. GdkRGB can now render to 
drawables with any visual.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;link&quot;&gt;GdkVisual&lt;/a&gt;* gdk_screen_get_rgb_visual (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_rgba_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-rgba-colormap</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets a colormap to use for creating windows or pixmaps with an
alpha channel. The windowing system on which GTK+ is running
may not support this capability, in which case &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; will
be returned. Even if a non-&lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; value is returned, its
possible that the window's alpha channel won't be honored
when displaying the window on the screen: in particular, for
X an appropriate windowing manager and compositing manager
must be running to provide appropriate display.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_screen_get_rgba_colormap (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_rgba_visual</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-rgba-visual</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets a visual to use for creating windows or pixmaps with an
alpha channel. See the docs for &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html#gdk-screen-get-rgba-colormap&quot; title=&quot;gdk_screen_get_rgba_colormap ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_screen_get_rgba_colormap()&lt;/code&gt;&lt;/a&gt;
for caveats.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;link&quot;&gt;GdkVisual&lt;/a&gt;* gdk_screen_get_rgba_visual (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_is_composited</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-is-composited</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Returns whether windows with an RGBA visual can reasonably
be expected to have their alpha channel drawn correctly on
the screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_screen_is_composited (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_root_window</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-root-window</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the root window of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_screen_get_root_window (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-display</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the display to which the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; belongs.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt;* gdk_screen_get_display (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_number</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-number</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the index of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; among the screens in the display
to which it belongs. (See &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html#gdk-screen-get-display&quot; title=&quot;gdk_screen_get_display ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_screen_get_display()&lt;/code&gt;&lt;/a&gt;)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_number (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_width</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-width</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the width of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; in pixels</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_width (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_height</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-height</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the height of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; in pixels</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_height (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_width_mm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-width-mm</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the width of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; in millimeters. 
Note that on some X servers this value will not be correct.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_width_mm (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_height_mm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-height-mm</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Returns the height of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; in millimeters. 
Note that on some X servers this value will not be correct.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_height_mm (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_list_visuals</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-list-visuals</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Lists the available visuals for the specified &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;.
A visual describes a hardware image data format.
For example, a visual might support 24-bit color, or 8-bit color,
and might expect pixels to be in a certain format.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;GList&lt;/a&gt;* gdk_screen_list_visuals (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_toplevel_windows</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-toplevel-windows</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Obtains a list of all toplevel windows known to GDK on the screen &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;.
A toplevel window is a child of the root window (see
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-get-default-root-window&quot; title=&quot;gdk_get_default_root_window ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_get_default_root_window()&lt;/code&gt;&lt;/a&gt;).</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;GList&lt;/a&gt;* gdk_screen_get_toplevel_windows (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_make_display_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-make-display-name</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Determines the name to pass to &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-open&quot; title=&quot;gdk_display_open ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_open()&lt;/code&gt;&lt;/a&gt; to get
a &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; with this screen as the default screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt;* gdk_screen_make_display_name (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_n_monitors</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-n-monitors</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Returns the number of monitors which &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; consists of.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_n_monitors (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_monitor_geometry</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-monitor-geometry</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Retrieves the &lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; title=&quot;GdkRectangle&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRectangle&lt;/span&gt;&lt;/a&gt; representing the size and position of 
the individual monitor within the entire screen area.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_screen_get_monitor_geometry (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; monitor_num,
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *dest);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_monitor_at_point</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-monitor-at-point</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Returns the monitor number in which the point (&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/em&gt;,&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/em&gt;) is located.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_monitor_at_point (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_monitor_at_window</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-monitor-at-window</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Returns the number of the monitor in which the largest area of the 
bounding rectangle of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; resides.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_monitor_at_window (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_monitor_height_mm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-monitor-height-mm</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the height in millimeters of the specified monitor.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_monitor_height_mm (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a href= &gt;gint&lt;/a&gt; monitor_num);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_monitor_width_mm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-monitor-width-mm</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the width in millimeters of the specified monitor, if available.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_screen_get_monitor_width_mm (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a href= &gt;gint&lt;/a&gt; monitor_num);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_monitor_plug_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-monitor-plug-name</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Returns the output name of the specified monitor. 
Usually something like VGA, DVI, or TV, not the actual
product name of the display device.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt;* gdk_screen_get_monitor_plug_name (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a href= &gt;gint&lt;/a&gt; monitor_num);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_broadcast_client_message</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-broadcast-client-message</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">On X11, sends an X ClientMessage event to all toplevel windows on
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_screen_broadcast_client_message (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt; *event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_setting</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-setting</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Retrieves a desktop-wide setting such as double-click time
for the &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt; &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_screen_get_setting (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/gobject/gobject-Generic-values.html#GValue&quot; &gt;gchar&lt;/a&gt; *name,
    &lt;a href= &gt;GValue&lt;/a&gt; *value);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_font_options</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-font-options</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets any options previously set with &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html#gdk-screen-set-font-options&quot; title=&quot;gdk_screen_set_font_options ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_screen_set_font_options()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;const &lt;a href=&quot;link&quot; &gt;cairo_font_options_t&lt;/a&gt;* gdk_screen_get_font_options (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_set_font_options</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-set-font-options</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Sets the default font options for the screen. These
options will be set on any &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Text-Processing.html#PangoContext&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoContext&lt;/span&gt;&lt;/a&gt;'s newly created
with &lt;a class=&quot;link&quot; href=&quot;gdk-Pango-Interaction.html#gdk-pango-context-get-for-screen&quot; title=&quot;gdk_pango_context_get_for_screen ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pango_context_get_for_screen()&lt;/code&gt;&lt;/a&gt;. Changing the
default set of font options does not affect contexts that
have already been created.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_screen_set_font_options (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/cairo/cairo-font-options.html#cairo-font-options-t&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    const &lt;a href= &gt;cairo_font_options_t&lt;/a&gt; *options);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_resolution</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-resolution</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Gets the resolution for font handling on the screen; see
&lt;a class=&quot;link&quot; href=&quot;GdkScreen.html#gdk-screen-set-resolution&quot; title=&quot;gdk_screen_set_resolution ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_screen_set_resolution()&lt;/code&gt;&lt;/a&gt; for full details.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gdouble&lt;/a&gt; gdk_screen_get_resolution (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_set_resolution</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-set-resolution</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Sets the resolution for font handling on the screen. This is a
scale factor between points specified in a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Fonts.html#PangoFontDescription&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoFontDescription&lt;/span&gt;&lt;/a&gt;
and cairo units. The default value is 96, meaning that a 10 point
font will be 13 units high. (10 * 96. / 72. = 13.3).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_screen_set_resolution (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a href= &gt;gdouble&lt;/a&gt; dpi);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_active_window</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-active-window</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Returns the screen's currently active window.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_screen_get_active_window (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_screen_get_window_stack</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-screen-get-window-stack</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Returns a &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Doubly-Linked-Lists.html#GList&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GList&lt;/span&gt;&lt;/a&gt; of &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;s representing the current
window stack.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;GList&lt;/a&gt;* gdk_screen_get_window_stack (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_spawn_on_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-spawn-on-screen</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Like &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Spawning-Processes.html#g-spawn-async&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_spawn_async()&lt;/code&gt;&lt;/a&gt;, except the child process is spawned in such
an environment that on calling &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-open&quot; title=&quot;gdk_display_open ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_open()&lt;/code&gt;&lt;/a&gt; it would be
returned a &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; with &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; as the default screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_spawn_on_screen (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gchar&lt;/a&gt; *working_directory,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gchar&lt;/a&gt; **argv,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Spawning-Processes.html#GSpawnFlags&quot; &gt;gchar&lt;/a&gt; **envp,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Spawning-Processes.html#GSpawnChildSetupFunc&quot; &gt;GSpawnFlags&lt;/a&gt; flags,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;GSpawnChildSetupFunc&lt;/a&gt; child_setup,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gpointer&lt;/a&gt; user_data,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Error-Reporting.html#GError&quot; &gt;gint&lt;/a&gt; *child_pid,
    &lt;a href= &gt;GError&lt;/a&gt; **error);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_spawn_on_screen_with_pipes</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-spawn-on-screen-with-pipes</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Like &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Spawning-Processes.html#g-spawn-async-with-pipes&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_spawn_async_with_pipes()&lt;/code&gt;&lt;/a&gt;, except the child process is
spawned in such an environment that on calling &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-open&quot; title=&quot;gdk_display_open ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_open()&lt;/code&gt;&lt;/a&gt;
it would be returned a &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; with &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; as the default
screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_spawn_on_screen_with_pipes (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gchar&lt;/a&gt; *working_directory,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gchar&lt;/a&gt; **argv,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Spawning-Processes.html#GSpawnFlags&quot; &gt;gchar&lt;/a&gt; **envp,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Spawning-Processes.html#GSpawnChildSetupFunc&quot; &gt;GSpawnFlags&lt;/a&gt; flags,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;GSpawnChildSetupFunc&lt;/a&gt; child_setup,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gpointer&lt;/a&gt; user_data,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *child_pid,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *standard_input,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *standard_output,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Error-Reporting.html#GError&quot; &gt;gint&lt;/a&gt; *standard_error,
    &lt;a href= &gt;GError&lt;/a&gt; **error);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_spawn_command_line_on_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>GdkScreen.html</Path>
  <Anchor>gdk-spawn-command-line-on-screen</Anchor>
  <NodeRef refid="6"/>
  <Abstract type="html">Like &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Spawning-Processes.html#g-spawn-command-line-async&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_spawn_command_line_async()&lt;/code&gt;&lt;/a&gt;, except the child process is
spawned in such an environment that on calling &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-open&quot; title=&quot;gdk_display_open ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_open()&lt;/code&gt;&lt;/a&gt;
it would be returned a &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; with &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt; as the default
screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_spawn_command_line_on_screen (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Error-Reporting.html#GError&quot; &gt;gchar&lt;/a&gt; *command_line,
    &lt;a href= &gt;GError&lt;/a&gt; **error);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPoint</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkPoint</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Defines the x and y coordinates of a point.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    gint x;
    gint y;
} GdkPoint;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkRectangle</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkRectangle</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Defines the position and size of a rectangle.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    gint x;
    gint y;
    gint width;
    gint height;
} GdkRectangle;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rectangle_intersect</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-rectangle-intersect</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Calculates the intersection of two rectangles. It is allowed for
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;dest&lt;/code&gt;&lt;/em&gt; to be the same as either &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src1&lt;/code&gt;&lt;/em&gt; or &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src2&lt;/code&gt;&lt;/em&gt;. If the rectangles 
do not intersect, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;dest&lt;/code&gt;&lt;/em&gt;'s width and height is set to 0 and its x 
and y values are undefined. If you are only interested in whether
the rectangles intersect, but not in the intersecting area itself,
pass &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;dest&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_rectangle_intersect (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&quot;link&quot;&gt;GdkRectangle&lt;/a&gt; *src1,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&quot;link&quot;&gt;GdkRectangle&lt;/a&gt; *src2,
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *dest);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rectangle_union</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-rectangle-union</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Calculates the union of two rectangles.
The union of rectangles &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src1&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src2&lt;/code&gt;&lt;/em&gt; is the smallest rectangle which
includes both &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src1&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src2&lt;/code&gt;&lt;/em&gt; within it.
It is allowed for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;dest&lt;/code&gt;&lt;/em&gt; to be the same as either &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src1&lt;/code&gt;&lt;/em&gt; or &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src2&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_rectangle_union (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&quot;link&quot;&gt;GdkRectangle&lt;/a&gt; *src1,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&quot;link&quot;&gt;GdkRectangle&lt;/a&gt; *src2,
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *dest);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkRegion</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkRegion</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">A GdkRegion represents a set of pixels on the screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkRegion GdkRegion;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-new</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Creates a new empty &lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; title=&quot;GdkRegion&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRegion&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt;* gdk_region_new (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_polygon</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-polygon</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Creates a new &lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; title=&quot;GdkRegion&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRegion&lt;/span&gt;&lt;/a&gt; using the polygon defined by a 
number of points.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt;* gdk_region_polygon (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkPoint&quot; href=&quot;GdkPoint&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkPoint&lt;/a&gt; *points,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; n_points,
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkFillRule&quot; href=&quot;enum GdkFillRule&quot; title=&gt;GdkFillRule&lt;/a&gt; fill_rule);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_EVEN_ODD_RULE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkFillRule</Anchor>
  <NodeRef refid="171"/>
  <Declaration type="html">&lt;pre&gt;GDK_EVEN_ODD_RULE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFillRule</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDING_RULE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkFillRule</Anchor>
  <NodeRef refid="171"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDING_RULE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFillRule</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkFillRule</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkFillRule</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">The method for determining which pixels are included in a region, when
creating a &lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; title=&quot;GdkRegion&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRegion&lt;/span&gt;&lt;/a&gt; from a polygon.
The fill rule is only relevant for polygons which overlap themselves.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_EVEN_ODD_RULE,
    GDK_WINDING_RULE 
} GdkFillRule;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_copy</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-copy</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Copies &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt;, creating an identical new region.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt;* gdk_region_copy (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *region);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_rectangle</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-rectangle</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Creates a new region containing the area &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;rectangle&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt;* gdk_region_rectangle (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *rectangle);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_destroy</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-destroy</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Destroys a &lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; title=&quot;GdkRegion&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRegion&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_destroy (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *region);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_get_clipbox</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-get-clipbox</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Obtains the smallest rectangle which includes the entire &lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; title=&quot;GdkRegion&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRegion&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_get_clipbox (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *region,
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *rectangle);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_get_rectangles</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-get-rectangles</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Obtains the area covered by the region as a list of rectangles.
The array returned in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;rectangles&lt;/code&gt;&lt;/em&gt; must be freed with &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Memory-Allocation.html#g-free&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_free()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_get_rectangles (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *region,
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkRectangle&lt;/a&gt; **rectangles,
    &lt;a href= &gt;gint&lt;/a&gt; *n_rectangles);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_empty</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-empty</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Finds out if the &lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; title=&quot;GdkRegion&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRegion&lt;/span&gt;&lt;/a&gt; is empty.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_region_empty (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *region);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_equal</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-equal</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Finds out if the two regions are the same.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_region_equal (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *region1,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *region2);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_point_in</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-point-in</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Finds out if a point is in a region.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_region_point_in (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *region,
    int x,
    int y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_rect_in</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-rect-in</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Tests whether a rectangle is within a region.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkOverlapType&quot; href=&quot;enum GdkOverlapType&quot; title=&quot;link&quot;&gt;GdkOverlapType&lt;/a&gt; gdk_region_rect_in (
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *region,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *rectangle);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OVERLAP_RECTANGLE_IN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkOverlapType</Anchor>
  <NodeRef refid="181"/>
  <Declaration type="html">&lt;pre&gt;GDK_OVERLAP_RECTANGLE_IN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkOverlapType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OVERLAP_RECTANGLE_OUT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkOverlapType</Anchor>
  <NodeRef refid="181"/>
  <Declaration type="html">&lt;pre&gt;GDK_OVERLAP_RECTANGLE_OUT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkOverlapType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OVERLAP_RECTANGLE_PART</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkOverlapType</Anchor>
  <NodeRef refid="181"/>
  <Declaration type="html">&lt;pre&gt;GDK_OVERLAP_RECTANGLE_PART&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkOverlapType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkOverlapType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkOverlapType</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Specifies the possible values returned by &lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#gdk-region-rect-in&quot; title=&quot;gdk_region_rect_in ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_region_rect_in()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_OVERLAP_RECTANGLE_IN,
    GDK_OVERLAP_RECTANGLE_OUT,
    GDK_OVERLAP_RECTANGLE_PART 
} GdkOverlapType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_offset</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-offset</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Moves a region the specified distance.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_offset (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkRegion&lt;/a&gt; *region,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dx,
    &lt;a href= &gt;gint&lt;/a&gt; dy);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_shrink</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-shrink</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Resizes a region by the specified amount.
Positive values shrink the region. Negative values expand it.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_shrink (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkRegion&lt;/a&gt; *region,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dx,
    &lt;a href= &gt;gint&lt;/a&gt; dy);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_union_with_rect</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-union-with-rect</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Sets the area of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; to the union of the areas of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; and
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;rect&lt;/code&gt;&lt;/em&gt;. The resulting area is the set of pixels contained in
either &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; or &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;rect&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_union_with_rect (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *region,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *rect);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_intersect</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-intersect</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Sets the area of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt; to the intersection of the areas of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt;
and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source2&lt;/code&gt;&lt;/em&gt;. The resulting area is the set of pixels contained in
both &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source2&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_intersect (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *source1,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *source2);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_union</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-union</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Sets the area of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt; to the union of the areas of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt; and
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source2&lt;/code&gt;&lt;/em&gt;. The resulting area is the set of pixels contained in
either &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt; or &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source2&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_union (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *source1,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *source2);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_subtract</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-subtract</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Subtracts the area of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source2&lt;/code&gt;&lt;/em&gt; from the area &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt;. The resulting
area is the set of pixels contained in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt; but not in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source2&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_subtract (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *source1,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *source2);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_xor</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-xor</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Sets the area of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt; to the exclusive-OR of the areas of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source1&lt;/code&gt;&lt;/em&gt;
and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;source2&lt;/code&gt;&lt;/em&gt;. The resulting area is the set of pixels contained in one
or the other of the two sources but not in both.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_xor (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *source1,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *source2);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkSpan</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkSpan</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">A GdkSpan represents a horizontal line of pixels starting
at the pixel with coordinates &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/em&gt; and ending before &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/em&gt; + &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    gint x;
    gint y;
    gint width;
} GdkSpan;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkSpanFunc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>GdkSpanFunc</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">This defines the type of the function passed to 
&lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#gdk-region-spans-intersect-foreach&quot; title=&quot;gdk_region_spans_intersect_foreach ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_region_spans_intersect_foreach()&lt;/code&gt;&lt;/a&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;void (
    *GdkSpanFunc) (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkSpan&quot; href=&quot;GdkSpan&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkSpan&lt;/a&gt; *span,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_region_spans_intersect_foreach</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Points-Rectangles-and-Regions.html</Path>
  <Anchor>gdk-region-spans-intersect-foreach</Anchor>
  <NodeRef refid="7"/>
  <Abstract type="html">Calls a function on each span in the intersection of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;spans&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_region_spans_intersect_foreach (
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt; *region,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkSpan&quot; href=&quot;GdkSpan&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkSpan&lt;/a&gt; *spans,
    int n_spans,
    &lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; sorted,
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkSpanFunc&quot; href=&quot;GdkSpanFunc ()&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkSpanFunc&lt;/a&gt; function,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkGC</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGC-struct</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt; structure represents a graphics context.
It is an opaque structure with no user-visible
elements.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkGC GdkGC;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkGCValues</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValues</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGCValues&quot; title=&quot;GdkGCValues&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGCValues&lt;/span&gt;&lt;/a&gt; structure holds a set of values used
to create or modify a graphics context.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkColor foreground;
    GdkColor background;
    GdkFont *font;
    GdkFunction function;
    GdkFill fill;
    GdkPixmap *tile;
    GdkPixmap *stipple;
    GdkPixmap *clip_mask;
    GdkSubwindowMode subwindow_mode;
    gint ts_x_origin;
    gint ts_y_origin;
    gint clip_x_origin;
    gint clip_y_origin;
    gint graphics_exposures;
    gint line_width;
    GdkLineStyle line_style;
    GdkCapStyle cap_style;
    GdkJoinStyle join_style;
} GdkGCValues;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_FOREGROUND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_FOREGROUND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_BACKGROUND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_BACKGROUND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_FONT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_FONT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_FUNCTION</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_FUNCTION&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_FILL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_FILL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_TILE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_TILE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_STIPPLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_STIPPLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_CLIP_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_CLIP_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_SUBWINDOW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_SUBWINDOW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_TS_X_ORIGIN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_TS_X_ORIGIN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_TS_Y_ORIGIN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_TS_Y_ORIGIN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_CLIP_X_ORIGIN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_CLIP_X_ORIGIN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_CLIP_Y_ORIGIN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_CLIP_Y_ORIGIN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_EXPOSURES</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_EXPOSURES&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_LINE_WIDTH</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_LINE_WIDTH&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_LINE_STYLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_LINE_STYLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_CAP_STYLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_CAP_STYLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_JOIN_STYLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="194"/>
  <Declaration type="html">&lt;pre&gt;GDK_GC_JOIN_STYLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGCValuesMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkGCValuesMask</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkGCValuesMask</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">A set of bit flags used to indicate which fields
&lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGCValues&quot; title=&quot;GdkGCValues&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGCValues&lt;/span&gt;&lt;/a&gt; structure are set.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_GC_FOREGROUND = 1 &amp;lt;&amp;lt; 0,
    GDK_GC_BACKGROUND = 1 &amp;lt;&amp;lt; 1,
    GDK_GC_FONT = 1 &amp;lt;&amp;lt; 2,
    GDK_GC_FUNCTION = 1 &amp;lt;&amp;lt; 3,
    GDK_GC_FILL = 1 &amp;lt;&amp;lt; 4,
    GDK_GC_TILE = 1 &amp;lt;&amp;lt; 5,
    GDK_GC_STIPPLE = 1 &amp;lt;&amp;lt; 6,
    GDK_GC_CLIP_MASK = 1 &amp;lt;&amp;lt; 7,
    GDK_GC_SUBWINDOW = 1 &amp;lt;&amp;lt; 8,
    GDK_GC_TS_X_ORIGIN = 1 &amp;lt;&amp;lt; 9,
    GDK_GC_TS_Y_ORIGIN = 1 &amp;lt;&amp;lt; 10,
    GDK_GC_CLIP_X_ORIGIN = 1 &amp;lt;&amp;lt; 11,
    GDK_GC_CLIP_Y_ORIGIN = 1 &amp;lt;&amp;lt; 12,
    GDK_GC_EXPOSURES = 1 &amp;lt;&amp;lt; 13,
    GDK_GC_LINE_WIDTH = 1 &amp;lt;&amp;lt; 14,
    GDK_GC_LINE_STYLE = 1 &amp;lt;&amp;lt; 15,
    GDK_GC_CAP_STYLE = 1 &amp;lt;&amp;lt; 16,
    GDK_GC_JOIN_STYLE = 1 &amp;lt;&amp;lt; 17 
} GdkGCValuesMask;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_COPY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_COPY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_INVERT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_INVERT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_XOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_XOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CLEAR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_CLEAR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_AND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AND_REVERSE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_AND_REVERSE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AND_INVERT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_AND_INVERT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NOOP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_NOOP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_OR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_EQUIV</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_EQUIV&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OR_REVERSE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_OR_REVERSE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_COPY_INVERT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_COPY_INVERT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OR_INVERT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_OR_INVERT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NAND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_NAND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_NOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SET</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="195"/>
  <Declaration type="html">&lt;pre&gt;GDK_SET&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkFunction</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFunction</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Determines how the bit values for the source pixels are combined with
the bit values for destination pixels to produce the final result. The
sixteen values here correspond to the 16 different possible 2x2 truth
tables.  Only a couple of these values are usually useful; for colored
images, only &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GDK-COPY:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_COPY&lt;/code&gt;&lt;/a&gt;, &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GDK-XOR:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_XOR&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GDK-INVERT:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_INVERT&lt;/code&gt;&lt;/a&gt; are generally
useful. For bitmaps, &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GDK-AND:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_AND&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GDK-OR:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_OR&lt;/code&gt;&lt;/a&gt; are also useful.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_COPY,
    GDK_INVERT,
    GDK_XOR,
    GDK_CLEAR,
    GDK_AND,
    GDK_AND_REVERSE,
    GDK_AND_INVERT,
    GDK_NOOP,
    GDK_OR,
    GDK_EQUIV,
    GDK_OR_REVERSE,
    GDK_COPY_INVERT,
    GDK_OR_INVERT,
    GDK_NAND,
    GDK_NOR,
    GDK_SET 
} GdkFunction;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-new</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Create a new graphics context with default values.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt;* gdk_gc_new (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_new_with_values</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-new-with-values</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Create a new GC with the given initial values.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt;* gdk_gc_new_with_values (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGCValues&quot; href=&quot;GdkGCValues&quot; title=&quot;link&quot;&gt;GdkGCValues&lt;/a&gt; *values,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGCValuesMask&quot; href=&quot;enum GdkGCValuesMask&quot; title=&gt;GdkGCValuesMask&lt;/a&gt; values_mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_get_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-get-screen</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Gets the &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt; for which &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/em&gt; was created</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt;* gdk_gc_get_screen (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *gc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_ref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-ref</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Deprecated function; use &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt; instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt;* gdk_gc_ref (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *gc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_gc_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_unref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-unref</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Decrement the reference count of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_unref (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *gc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_gc_unref&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-unref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_unref()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_destroy</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-destroy</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">This function is obsolete and should not be used.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_gc_destroy gdk_gc_unref&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_gc_destroy&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-unref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_unref()&lt;/code&gt;&lt;/a&gt; instead</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_values</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-values</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets attributes of a graphics context in bulk. For each flag set in
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;values_mask&lt;/code&gt;&lt;/em&gt;, the corresponding field will be read from &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/em&gt; and
set as the new value for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/em&gt;. If you're only setting a few values
on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/em&gt;, calling individual &quot;setter&quot; functions is likely more
convenient.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_values (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGCValues&quot; href=&quot;GdkGCValues&quot; title=&quot;link&quot;&gt;GdkGCValues&lt;/a&gt; *values,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGCValuesMask&quot; href=&quot;enum GdkGCValuesMask&quot; title=&gt;GdkGCValuesMask&lt;/a&gt; values_mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_get_values</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-get-values</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Retrieves the current values from a graphics context. Note that 
only the pixel values of the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;values-&amp;gt;foreground&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;values-&amp;gt;background&lt;/code&gt;&lt;/em&gt;
are filled, use &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-colormap-query-color&quot; title=&quot;gdk_colormap_query_color ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_colormap_query_color()&lt;/code&gt;&lt;/a&gt; to obtain the rgb values
if you need them.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_get_values (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGCValues&quot; href=&quot;GdkGCValues&quot; title=&gt;GdkGCValues&lt;/a&gt; *values);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_foreground</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-foreground</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets the foreground color for a graphics context.
Note that this function uses &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;color-&amp;gt;pixel&lt;/code&gt;&lt;/em&gt;, use 
&lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#gdk-gc-set-rgb-fg-color&quot; title=&quot;gdk_gc_set_rgb_fg_color ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_gc_set_rgb_fg_color()&lt;/code&gt;&lt;/a&gt; to specify the foreground 
color as red, green, blue components.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_foreground (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_background</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-background</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets the background color for a graphics context.
Note that this function uses &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;color-&amp;gt;pixel&lt;/code&gt;&lt;/em&gt;, use 
&lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#gdk-gc-set-rgb-bg-color&quot; title=&quot;gdk_gc_set_rgb_bg_color ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_gc_set_rgb_bg_color()&lt;/code&gt;&lt;/a&gt; to specify the background 
color as red, green, blue components.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_background (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_rgb_fg_color</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-rgb-fg-color</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Set the foreground color of a GC using an unallocated color. The
pixel value for the color will be determined using GdkRGB. If the
colormap for the GC has not previously been initialized for GdkRGB,
then for pseudo-color colormaps (colormaps with a small modifiable
number of colors), a colorcube will be allocated in the colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_rgb_fg_color (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_rgb_bg_color</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-rgb-bg-color</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Set the background color of a GC using an unallocated color. The
pixel value for the color will be determined using GdkRGB. If the
colormap for the GC has not previously been initialized for GdkRGB,
then for pseudo-color colormaps (colormaps with a small modifiable
number of colors), a colorcube will be allocated in the colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_rgb_bg_color (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_font</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-font</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets the font for a graphics context. (Note that
all text-drawing functions in GDK take a &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/em&gt;
argument; the value set here is used when that
argument is &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;.)</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_font (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&gt;GdkFont&lt;/a&gt; *font);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_gc_set_font&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_function</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-function</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Determines how the current pixel values and the
pixel values being drawn are combined to produce
the final pixel values.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_function (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkFunction&quot; href=&quot;enum GdkFunction&quot; title=&gt;GdkFunction&lt;/a&gt; function);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_fill</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-fill</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Set the fill mode for a graphics context.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_fill (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkFill&quot; href=&quot;enum GdkFill&quot; title=&gt;GdkFill&lt;/a&gt; fill);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SOLID</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFill</Anchor>
  <NodeRef refid="211"/>
  <Declaration type="html">&lt;pre&gt;GDK_SOLID&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFill</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TILED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFill</Anchor>
  <NodeRef refid="211"/>
  <Declaration type="html">&lt;pre&gt;GDK_TILED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFill</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_STIPPLED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFill</Anchor>
  <NodeRef refid="211"/>
  <Declaration type="html">&lt;pre&gt;GDK_STIPPLED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFill</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OPAQUE_STIPPLED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFill</Anchor>
  <NodeRef refid="211"/>
  <Declaration type="html">&lt;pre&gt;GDK_OPAQUE_STIPPLED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFill</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkFill</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkFill</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Determines how primitives are drawn.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_SOLID,
    GDK_TILED,
    GDK_STIPPLED,
    GDK_OPAQUE_STIPPLED 
} GdkFill;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_tile</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-tile</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Set a tile pixmap for a graphics context.
This will only be used if the fill mode
is &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GDK-TILED:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_TILED&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_tile (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&gt;GdkPixmap&lt;/a&gt; *tile);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_stipple</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-stipple</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Set the stipple bitmap for a graphics context. The
stipple will only be used if the fill mode is
&lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GDK-STIPPLED:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_STIPPLED&lt;/code&gt;&lt;/a&gt; or &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GDK-OPAQUE-STIPPLED:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_OPAQUE_STIPPLED&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_stipple (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&gt;GdkPixmap&lt;/a&gt; *stipple);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_ts_origin</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-ts-origin</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Set the origin when using tiles or stipples with
the GC. The tile or stipple will be aligned such
that the upper left corner of the tile or stipple
will coincide with this point.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_ts_origin (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_clip_origin</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-clip-origin</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets the origin of the clip mask. The coordinates are
interpreted relative to the upper-left corner of
the destination drawable of the current operation.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_clip_origin (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_clip_mask</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-clip-mask</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets the clip mask for a graphics context from a bitmap.
The clip mask is interpreted relative to the clip
origin. (See &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#gdk-gc-set-clip-origin&quot; title=&quot;gdk_gc_set_clip_origin ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_gc_set_clip_origin()&lt;/code&gt;&lt;/a&gt;).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_clip_mask (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&gt;GdkBitmap&lt;/a&gt; *mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_clip_rectangle</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-clip-rectangle</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets the clip mask for a graphics context from a
rectangle. The clip mask is interpreted relative to the clip
origin. (See &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#gdk-gc-set-clip-origin&quot; title=&quot;gdk_gc_set_clip_origin ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_gc_set_clip_origin()&lt;/code&gt;&lt;/a&gt;).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_clip_rectangle (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *rectangle);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_clip_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-clip-region</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets the clip mask for a graphics context from a region structure.
The clip mask is interpreted relative to the clip origin. (See
&lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#gdk-gc-set-clip-origin&quot; title=&quot;gdk_gc_set_clip_origin ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_gc_set_clip_origin()&lt;/code&gt;&lt;/a&gt;).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_clip_region (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *region);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_subwindow</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-subwindow</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets how drawing with this GC on a window will affect child
windows of that window.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_subwindow (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkSubwindowMode&quot; href=&quot;enum GdkSubwindowMode&quot; title=&gt;GdkSubwindowMode&lt;/a&gt; mode);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CLIP_BY_CHILDREN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkSubwindowMode</Anchor>
  <NodeRef refid="220"/>
  <Declaration type="html">&lt;pre&gt;GDK_CLIP_BY_CHILDREN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkSubwindowMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_INCLUDE_INFERIORS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkSubwindowMode</Anchor>
  <NodeRef refid="220"/>
  <Declaration type="html">&lt;pre&gt;GDK_INCLUDE_INFERIORS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkSubwindowMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkSubwindowMode</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkSubwindowMode</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Determines how drawing onto a window will affect child
windows of that window. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_CLIP_BY_CHILDREN = 0,
    GDK_INCLUDE_INFERIORS = 1 
} GdkSubwindowMode;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_exposures</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-exposures</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets whether copying non-visible portions of a drawable
using this graphics context generate exposure events
for the corresponding regions of the destination
drawable. (See &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-drawable&quot; title=&quot;gdk_draw_drawable ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_drawable()&lt;/code&gt;&lt;/a&gt;).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_exposures (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href= &gt;gboolean&lt;/a&gt; exposures);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_line_attributes</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-line-attributes</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets various attributes of how lines are drawn. See
the corresponding members of &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGCValues&quot; title=&quot;GdkGCValues&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGCValues&lt;/span&gt;&lt;/a&gt; for full
explanations of the arguments.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_line_attributes (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; line_width,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkLineStyle&quot; href=&quot;enum GdkLineStyle&quot; title=&quot;link&quot;&gt;GdkLineStyle&lt;/a&gt; line_style,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkCapStyle&quot; href=&quot;enum GdkCapStyle&quot; title=&quot;link&quot;&gt;GdkCapStyle&lt;/a&gt; cap_style,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkJoinStyle&quot; href=&quot;enum GdkJoinStyle&quot; title=&gt;GdkJoinStyle&lt;/a&gt; join_style);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LINE_SOLID</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkLineStyle</Anchor>
  <NodeRef refid="223"/>
  <Declaration type="html">&lt;pre&gt;GDK_LINE_SOLID&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkLineStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LINE_ON_OFF_DASH</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkLineStyle</Anchor>
  <NodeRef refid="223"/>
  <Declaration type="html">&lt;pre&gt;GDK_LINE_ON_OFF_DASH&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkLineStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LINE_DOUBLE_DASH</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkLineStyle</Anchor>
  <NodeRef refid="223"/>
  <Declaration type="html">&lt;pre&gt;GDK_LINE_DOUBLE_DASH&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkLineStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkLineStyle</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkLineStyle</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Determines how lines are drawn.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_LINE_SOLID,
    GDK_LINE_ON_OFF_DASH,
    GDK_LINE_DOUBLE_DASH 
} GdkLineStyle;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CAP_NOT_LAST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkCapStyle</Anchor>
  <NodeRef refid="224"/>
  <Declaration type="html">&lt;pre&gt;GDK_CAP_NOT_LAST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCapStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CAP_BUTT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkCapStyle</Anchor>
  <NodeRef refid="224"/>
  <Declaration type="html">&lt;pre&gt;GDK_CAP_BUTT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCapStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CAP_ROUND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkCapStyle</Anchor>
  <NodeRef refid="224"/>
  <Declaration type="html">&lt;pre&gt;GDK_CAP_ROUND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCapStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CAP_PROJECTING</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkCapStyle</Anchor>
  <NodeRef refid="224"/>
  <Declaration type="html">&lt;pre&gt;GDK_CAP_PROJECTING&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCapStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkCapStyle</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkCapStyle</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Determines how the end of lines are drawn.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_CAP_NOT_LAST,
    GDK_CAP_BUTT,
    GDK_CAP_ROUND,
    GDK_CAP_PROJECTING 
} GdkCapStyle;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_JOIN_MITER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkJoinStyle</Anchor>
  <NodeRef refid="225"/>
  <Declaration type="html">&lt;pre&gt;GDK_JOIN_MITER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkJoinStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_JOIN_ROUND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkJoinStyle</Anchor>
  <NodeRef refid="225"/>
  <Declaration type="html">&lt;pre&gt;GDK_JOIN_ROUND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkJoinStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_JOIN_BEVEL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkJoinStyle</Anchor>
  <NodeRef refid="225"/>
  <Declaration type="html">&lt;pre&gt;GDK_JOIN_BEVEL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkJoinStyle</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkJoinStyle</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>GdkJoinStyle</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Determines how the joins between segments of a polygon are drawn.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_JOIN_MITER,
    GDK_JOIN_ROUND,
    GDK_JOIN_BEVEL 
} GdkJoinStyle;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_dashes</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-dashes</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets the way dashed-lines are drawn. Lines will be
drawn with alternating on and off segments of the
lengths specified in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;dash_list&lt;/code&gt;&lt;/em&gt;. The manner in
which the on and off segments are drawn is determined
by the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;line_style&lt;/code&gt;&lt;/em&gt; value of the GC. (This can
be changed with &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#gdk-gc-set-line-attributes&quot; title=&quot;gdk_gc_set_line_attributes ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_gc_set_line_attributes()&lt;/code&gt;&lt;/a&gt;.)</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_dashes (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dash_offset,
    gint8 dash_list[],
    &lt;a href= &gt;gint&lt;/a&gt; n);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_copy</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-copy</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Copy the set of values from one graphics context
onto another graphics context.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_copy (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *dst_gc,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *src_gc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_set_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-set-colormap</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Sets the colormap for the GC to the given colormap. The depth
of the colormap's visual must match the depth of the drawable
for which the GC was created.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_set_colormap (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *colormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_get_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-get-colormap</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Retrieves the colormap for a given GC, if it exists.
A GC will have a colormap if the drawable for which it was created
has a colormap, or if a colormap was set explicitely with
gdk_gc_set_colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_gc_get_colormap (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *gc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_gc_offset</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Graphics-Contexts.html</Path>
  <Anchor>gdk-gc-offset</Anchor>
  <NodeRef refid="8"/>
  <Abstract type="html">Offset attributes such as the clip and tile-stipple origins
of the GC so that drawing at x - x_offset, y - y_offset with
the offset GC  has the same effect as drawing at x, y with the original
GC.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_gc_offset (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x_offset,
    &lt;a href= &gt;gint&lt;/a&gt; y_offset);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDrawable</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>GdkDrawable-struct</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">An opaque structure representing an object that can be
drawn onto. This can be a &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt;, a &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; title=&quot;GdkBitmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkBitmap&lt;/span&gt;&lt;/a&gt;,
or a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkDrawable GdkDrawable;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_ref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-ref</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Deprecated equivalent of calling &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt; on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt;.
(Drawables were not objects in previous versions of GDK.)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt;* gdk_drawable_ref (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_drawable_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_unref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-unref</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Deprecated equivalent of calling &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-unref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_unref()&lt;/code&gt;&lt;/a&gt; on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drawable_unref (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_drawable_unref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_set_data</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-set-data</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">This function is equivalent to &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-set-data&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_set_data()&lt;/code&gt;&lt;/a&gt;,
the &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#GObject&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GObject&lt;/span&gt;&lt;/a&gt; variant should be used instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drawable_set_data (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;gchar&lt;/a&gt; *key,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Datasets.html#GDestroyNotify&quot; &gt;gpointer&lt;/a&gt; data,
    &lt;a href= &gt;GDestroyNotify&lt;/a&gt; destroy_func);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_drawable_set_data&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_data</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-data</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Equivalent to &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-get-data&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_get_data()&lt;/code&gt;&lt;/a&gt;; the &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#GObject&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GObject&lt;/span&gt;&lt;/a&gt; variant should be
used instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gpointer&lt;/a&gt; gdk_drawable_get_data (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    const &lt;a href= &gt;gchar&lt;/a&gt; *key);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_drawable_get_data&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-display</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Gets the &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; associated with a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt;* gdk_drawable_get_display (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-screen</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Gets the &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt; associated with a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt;* gdk_drawable_get_screen (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_visual</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-visual</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Gets the &lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#GdkVisual&quot; title=&quot;GdkVisual&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkVisual&lt;/span&gt;&lt;/a&gt; describing the pixel format of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;link&quot;&gt;GdkVisual&lt;/a&gt;* gdk_drawable_get_visual (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_set_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-set-colormap</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Sets the colormap associated with &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt;. Normally this will
happen automatically when the drawable is created; you only need to
use this function if the drawable-creating function did not have a
way to determine the colormap, and you then use drawable operations
that require a colormap. The colormap for all drawables and
graphics contexts you intend to use together should match. i.e.
when using a &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt; to draw to a drawable, or copying one drawable
to another, the colormaps should match.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drawable_set_colormap (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *colormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-colormap</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Gets the colormap for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt;, if one is set; returns
&lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; otherwise.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_drawable_get_colormap (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_depth</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-depth</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Obtains the bit depth of the drawable, that is, the number of bits
that make up a pixel in the drawable's visual. Examples are 8 bits
per pixel, 24 bits per pixel, etc.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_drawable_get_depth (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_size</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-size</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Fills *&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/em&gt; and *&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/em&gt; with the size of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt;.
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/em&gt; or &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/em&gt; can be &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; if you only want the other one.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drawable_get_size (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *width,
    &lt;a href= &gt;gint&lt;/a&gt; *height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_clip_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-clip-region</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Computes the region of a drawable that potentially can be written
to by drawing primitives. This region will not take into account
the clip region for the GC, and may also not take into account
other factors such as if the window is obscured by other windows,
but no area outside of this region will be affected by drawing
primitives.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt;* gdk_drawable_get_clip_region (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_visible_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-visible-region</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Computes the region of a drawable that is potentially visible.
This does not necessarily take into account if the window is
obscured by other windows, but no area outside of this region
is visible.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt;* gdk_drawable_get_visible_region (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_point</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-point</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a point, using the foreground color and other attributes of 
the &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_point (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_points</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-points</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a number of points, using the foreground color and other 
attributes of the &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_points (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkPoint&quot; href=&quot;GdkPoint&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkPoint&lt;/a&gt; *points,
    &lt;a href= &gt;gint&lt;/a&gt; n_points);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_line</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-line</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a line, using the foreground color and other attributes of 
the &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_line (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x1_,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y1_,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x2_,
    &lt;a href= &gt;gint&lt;/a&gt; y2_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_lines</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-lines</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a series of lines connecting the given points.
The way in which joins between lines are draw is determined by the
&lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkCapStyle&quot; title=&quot;enum GdkCapStyle&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkCapStyle&lt;/span&gt;&lt;/a&gt; value in the &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;. This can be set with
&lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#gdk-gc-set-line-attributes&quot; title=&quot;gdk_gc_set_line_attributes ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_gc_set_line_attributes()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_lines (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkPoint&quot; href=&quot;GdkPoint&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkPoint&lt;/a&gt; *points,
    &lt;a href= &gt;gint&lt;/a&gt; n_points);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_pixbuf</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-pixbuf</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Renders a rectangular portion of a pixbuf to a drawable.  The destination
drawable must have a colormap. All windows have a colormap, however, pixmaps
only have colormap by default if they were created with a non-&lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; window 
argument. Otherwise a colormap must be set on them with 
&lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-drawable-set-colormap&quot; title=&quot;gdk_drawable_set_colormap ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_drawable_set_colormap()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_pixbuf (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbuf&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;GdkPixbuf&lt;/a&gt; *pixbuf,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; src_x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; src_y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dest_x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dest_y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; height,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbDither&quot; href=&quot;enum GdkRgbDither&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkRgbDither&lt;/a&gt; dither,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x_dither,
    &lt;a href= &gt;gint&lt;/a&gt; y_dither);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_segments</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-segments</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a number of unconnected lines.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_segments (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkSegment&quot; href=&quot;GdkSegment&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkSegment&lt;/a&gt; *segs,
    &lt;a href= &gt;gint&lt;/a&gt; n_segs);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkSegment</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>GdkSegment</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Specifies the start and end point of a line for use by the &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-segments&quot; title=&quot;gdk_draw_segments ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_segments()&lt;/code&gt;&lt;/a&gt;
function.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    gint x1;
    gint y1;
    gint x2;
    gint y2;
} GdkSegment;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_rectangle</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-rectangle</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a rectangular outline or filled rectangle, using the foreground color
and other attributes of the &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_rectangle (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gboolean&lt;/a&gt; filled,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_arc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-arc</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws an arc or a filled 'pie slice'. The arc is defined by the bounding
rectangle of the entire ellipse, and the start and end angles of the part 
of the ellipse to be drawn.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_arc (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gboolean&lt;/a&gt; filled,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; height,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; angle1,
    &lt;a href= &gt;gint&lt;/a&gt; angle2);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_polygon</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-polygon</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws an outlined or filled polygon.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_polygon (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; filled,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkPoint&quot; href=&quot;GdkPoint&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkPoint&lt;/a&gt; *points,
    &lt;a href= &gt;gint&lt;/a&gt; n_points);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_trapezoids</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-trapezoids</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a set of anti-aliased trapezoids. The trapezoids are
combined using saturation addition, then drawn over the background
as a set. This is low level functionality used internally to implement
rotated underlines and backgrouds when rendering a PangoLayout and is
likely not useful for applications.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_trapezoids (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkTrapezoid&quot; href=&quot;GdkTrapezoid&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkTrapezoid&lt;/a&gt; *trapezoids,
    &lt;a href= &gt;gint&lt;/a&gt; n_trapezoids);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkTrapezoid</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>GdkTrapezoid</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Specifies a trapezpoid for use by the &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-trapezoids&quot; title=&quot;gdk_draw_trapezoids ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_trapezoids()&lt;/code&gt;&lt;/a&gt;.
The trapezoids used here have parallel, horizontal top and 
bottom edges. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    double y1, x11, x21, y2, x12, x22;
} GdkTrapezoid;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_glyphs</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-glyphs</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">This is a low-level function; 99% of text rendering should be done
using &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-layout&quot; title=&quot;gdk_draw_layout ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_layout()&lt;/code&gt;&lt;/a&gt; instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_glyphs (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/pango/pango-Fonts.html#PangoFont&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;PangoFont&lt;/a&gt; *font,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/pango/pango-Glyph-Storage.html#PangoGlyphString&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href= &gt;PangoGlyphString&lt;/a&gt; *glyphs);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_glyphs_transformed</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-glyphs-transformed</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Renders a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Glyph-Storage.html#PangoGlyphString&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoGlyphString&lt;/span&gt;&lt;/a&gt; onto a drawable, possibly
transforming the layed-out coordinates through a transformation
matrix. Note that the transformation matrix for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/em&gt; is not
changed, so to produce correct rendering results, the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/em&gt;
must have been loaded using a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Text-Processing.html#PangoContext&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoContext&lt;/span&gt;&lt;/a&gt; with an identical
transformation matrix to that passed in to this function.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_glyphs_transformed (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/pango/pango-Glyph-Storage.html#PangoMatrix&quot;&gt;GdkGC&lt;/a&gt; *gc,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/pango/pango-Fonts.html#PangoFont&quot; &gt;PangoMatrix&lt;/a&gt; *matrix,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;PangoFont&lt;/a&gt; *font,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/pango/pango-Glyph-Storage.html#PangoGlyphString&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href= &gt;PangoGlyphString&lt;/a&gt; *glyphs);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_layout_line</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-layout-line</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Render a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayoutLine&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoLayoutLine&lt;/span&gt;&lt;/a&gt; onto an GDK drawable</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_layout_line (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayoutLine&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href= &gt;PangoLayoutLine&lt;/a&gt; *line);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_layout_line_with_colors</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-layout-line-with-colors</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Render a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayoutLine&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoLayoutLine&lt;/span&gt;&lt;/a&gt; onto a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;, overriding the
layout's normal colors with &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;foreground&lt;/code&gt;&lt;/em&gt; and/or &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;background&lt;/code&gt;&lt;/em&gt;.
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;foreground&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;background&lt;/code&gt;&lt;/em&gt; need not be allocated.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_layout_line_with_colors (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayoutLine&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;link&quot; &gt;PangoLayoutLine&lt;/a&gt; *line,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;link&quot;&gt;GdkColor&lt;/a&gt; *foreground,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *background);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_layout</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-layout</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Render a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayout&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoLayout&lt;/span&gt;&lt;/a&gt; onto a GDK drawable</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_layout (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayout&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href= &gt;PangoLayout&lt;/a&gt; *layout);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_layout_with_colors</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-layout-with-colors</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Render a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayout&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoLayout&lt;/span&gt;&lt;/a&gt; onto a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;, overriding the
layout's normal colors with &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;foreground&lt;/code&gt;&lt;/em&gt; and/or &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;background&lt;/code&gt;&lt;/em&gt;.
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;foreground&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;background&lt;/code&gt;&lt;/em&gt; need not be allocated.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_layout_with_colors (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayout&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;link&quot; &gt;PangoLayout&lt;/a&gt; *layout,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;link&quot;&gt;GdkColor&lt;/a&gt; *foreground,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *background);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_string</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-string</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a string of characters in the given font or fontset.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_string (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt; *font,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; y,
    const &lt;a href= &gt;gchar&lt;/a&gt; *string);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_draw_string&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-layout&quot; title=&quot;gdk_draw_layout ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_layout()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_text</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-text</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a number of characters in the given font or fontset.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_text (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt; *font,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; y,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *text,
    &lt;a href= &gt;gint&lt;/a&gt; text_length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_draw_text&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-layout&quot; title=&quot;gdk_draw_layout ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_layout()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_text_wc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-text-wc</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a number of wide characters using the given font of fontset.
If the font is a 1-byte font, the string is converted into 1-byte 
characters (discarding the high bytes) before output.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_text_wc (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt; *font,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; y,
    const &lt;a class=&quot;gdk-Fonts.html#GdkWChar&quot; href=&quot;GdkWChar&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWChar&lt;/a&gt; *text,
    &lt;a href= &gt;gint&lt;/a&gt; text_length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_draw_text_wc&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-layout&quot; title=&quot;gdk_draw_layout ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_layout()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_pixmap</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-pixmap</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a pixmap, or a part of a pixmap, onto another drawable.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_draw_pixmap gdk_draw_drawable&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_draw_pixmap&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-drawable&quot; title=&quot;gdk_draw_drawable ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_drawable()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_drawable</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-drawable</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Copies the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/em&gt; x &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/em&gt; region of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src&lt;/code&gt;&lt;/em&gt; at coordinates (&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;xsrc&lt;/code&gt;&lt;/em&gt;,
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;ysrc&lt;/code&gt;&lt;/em&gt;) to coordinates (&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;xdest&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;ydest&lt;/code&gt;&lt;/em&gt;) in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt;.
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/em&gt; and/or &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/em&gt; may be given as -1, in which case the entire
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src&lt;/code&gt;&lt;/em&gt; drawable will be copied.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_drawable (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDrawable&lt;/a&gt; *src,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; xsrc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; ysrc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; xdest,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; ydest,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_image</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-draw-image</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Draws a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt; onto a drawable.
The depth of the &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt; must match the depth of the &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_image (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkImage&lt;/a&gt; *image,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; xsrc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; ysrc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; xdest,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; ydest,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_get_image</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-get-image</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt; stores client-side image data (pixels). In contrast,
&lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; are server-side
objects. &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-drawable-get-image&quot; title=&quot;gdk_drawable_get_image ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_drawable_get_image()&lt;/code&gt;&lt;/a&gt; obtains the pixels from a
server-side drawable as a client-side &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;.  The format of a
&lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt; depends on the &lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#GdkVisual&quot; title=&quot;GdkVisual&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkVisual&lt;/span&gt;&lt;/a&gt; of the current display, which
makes manipulating &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt; extremely difficult; therefore, in
most cases you should use &lt;a class=&quot;link&quot; href=&quot;gdk-Pixbufs.html#gdk-pixbuf-get-from-drawable&quot; title=&quot;gdk_pixbuf_get_from_drawable ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pixbuf_get_from_drawable()&lt;/code&gt;&lt;/a&gt; instead of
this lower-level function. A &lt;a
href=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbuf&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GdkPixbuf&lt;/span&gt;&lt;/a&gt; contains image data in a
canonicalized RGB format, rather than a display-dependent format.
Of course, there's a convenience vs. speed tradeoff here, so you'll
want to think about what makes sense for your application.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;link&quot;&gt;GdkImage&lt;/a&gt;* gdk_drawable_get_image (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drawable_copy_to_image</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drawing-Primitives.html</Path>
  <Anchor>gdk-drawable-copy-to-image</Anchor>
  <NodeRef refid="9"/>
  <Abstract type="html">Copies a portion of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt; into the client side image structure
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/em&gt;. If &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/em&gt; is &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;, creates a new image of size &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/em&gt; x &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/em&gt;
and copies into that. See &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-drawable-get-image&quot; title=&quot;gdk_drawable_get_image ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_drawable_get_image()&lt;/code&gt;&lt;/a&gt; for further details.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;link&quot;&gt;GdkImage&lt;/a&gt;* gdk_drawable_copy_to_image (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkImage&lt;/a&gt; *image,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; src_x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; src_y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dest_x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dest_y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPixmap</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>GdkPixmap-struct</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">An opaque structure representing an offscreen drawable.
Pointers to structures of type &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt;, &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; title=&quot;GdkBitmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkBitmap&lt;/span&gt;&lt;/a&gt;,
and &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;, can often be used interchangeably. 
The type &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt; refers generically to any of
these types.</Abstract>
  <Declaration type="html">&lt;pre&gt;struct GdkPixmap;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-pixmap-new</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Create a new pixmap with a given size and depth.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_new (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; height,
    &lt;a href= &gt;gint&lt;/a&gt; depth);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_bitmap_create_from_data</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-bitmap-create-from-data</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Creates a new bitmap from data in XBM format.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&quot;link&quot;&gt;GdkBitmap&lt;/a&gt;* gdk_bitmap_create_from_data (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *data,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_create_from_data</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-pixmap-create-from-data</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Create a two-color pixmap from data in XBM data.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_create_from_data (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *data,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; height,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; depth,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;link&quot;&gt;GdkColor&lt;/a&gt; *fg,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *bg);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_create_from_xpm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-pixmap-create-from-xpm</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Create a pixmap from a XPM file.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_create_from_xpm (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&quot;link&quot;&gt;GdkBitmap&lt;/a&gt; **mask,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkColor&lt;/a&gt; *transparent_color,
    const &lt;a href= &gt;gchar&lt;/a&gt; *filename);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_colormap_create_from_xpm</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-pixmap-colormap-create-from-xpm</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Create a pixmap from a XPM file using a particular colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_colormap_create_from_xpm (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&quot;link&quot;&gt;GdkBitmap&lt;/a&gt; **mask,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkColor&lt;/a&gt; *transparent_color,
    const &lt;a href= &gt;gchar&lt;/a&gt; *filename);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_create_from_xpm_d</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-pixmap-create-from-xpm-d</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Create a pixmap from data in XPM format.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_create_from_xpm_d (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&quot;link&quot;&gt;GdkBitmap&lt;/a&gt; **mask,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkColor&lt;/a&gt; *transparent_color,
    &lt;a href= &gt;gchar&lt;/a&gt; **data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_colormap_create_from_xpm_d</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-pixmap-colormap-create-from-xpm-d</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Create a pixmap from data in XPM format using a particular
colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_colormap_create_from_xpm_d (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&quot;link&quot;&gt;GdkBitmap&lt;/a&gt; **mask,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkColor&lt;/a&gt; *transparent_color,
    &lt;a href= &gt;gchar&lt;/a&gt; **data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_ref</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-pixmap-ref</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Deprecated equivalent of &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_pixmap_ref gdk_drawable_ref&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_pixmap_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_unref</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-pixmap-unref</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Deprecated equivalent of &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-unref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_unref()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_pixmap_unref gdk_drawable_unref&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_pixmap_unref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkBitmap</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>GdkBitmap</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">An opaque structure representing an offscreen drawable of depth
1. Pointers to structures of type &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt;, &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; title=&quot;GdkBitmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkBitmap&lt;/span&gt;&lt;/a&gt;, and
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;, can often be used interchangeably.  The type &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;
refers generically to any of these types.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkDrawable GdkBitmap;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_bitmap_ref</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-bitmap-ref</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Deprecated equivalent of &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_bitmap_ref gdk_drawable_ref&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_bitmap_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_bitmap_unref</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Bitmaps-and-Pixmaps.html</Path>
  <Anchor>gdk-bitmap-unref</Anchor>
  <NodeRef refid="10"/>
  <Abstract type="html">Deprecated equivalent of &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-unref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_unref()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_bitmap_unref gdk_drawable_unref&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_bitmap_unref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_init</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-init</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">This function no longer does anything at all. It's completely useless
(and harmless).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_rgb_init (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_rgb_init&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_rgb_image</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-draw-rgb-image</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Draws an RGB image in the drawable. This is the core GdkRGB
function, and likely the only one you will need to use.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_rgb_image (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; height,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbDither&quot; href=&quot;enum GdkRgbDither&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot;&gt;GdkRgbDither&lt;/a&gt; dith,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *rgb_buf,
    &lt;a href= &gt;gint&lt;/a&gt; rowstride);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_rgb_image_dithalign</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-draw-rgb-image-dithalign</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Draws an RGB image in the drawable, with an adjustment for dither alignment.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_rgb_image_dithalign (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; height,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbDither&quot; href=&quot;enum GdkRgbDither&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot;&gt;GdkRgbDither&lt;/a&gt; dith,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *rgb_buf,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; rowstride,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; xdith,
    &lt;a href= &gt;gint&lt;/a&gt; ydith);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_indexed_image</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-draw-indexed-image</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Draws an indexed image in the drawable, using a &lt;a class=&quot;link&quot; href=&quot;gdk-GdkRGB.html#GdkRgbCmap&quot; title=&quot;GdkRgbCmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRgbCmap&lt;/span&gt;&lt;/a&gt; to assign
actual colors to the color indices.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_indexed_image (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; height,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbDither&quot; href=&quot;enum GdkRgbDither&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot;&gt;GdkRgbDither&lt;/a&gt; dith,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *buf,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; rowstride,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbCmap&quot; href=&quot;GdkRgbCmap&quot; title=&gt;GdkRgbCmap&lt;/a&gt; *cmap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_gray_image</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-draw-gray-image</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Draws a grayscale image in the drawable.
</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_gray_image (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; height,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbDither&quot; href=&quot;enum GdkRgbDither&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot;&gt;GdkRgbDither&lt;/a&gt; dith,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *buf,
    &lt;a href= &gt;gint&lt;/a&gt; rowstride);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_rgb_32_image</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-draw-rgb-32-image</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Draws a padded RGB image in the drawable. The image is stored as one
pixel per 32-bit word. It is laid out as a red byte, a green byte, a
blue byte, and a padding byte.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_rgb_32_image (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; height,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbDither&quot; href=&quot;enum GdkRgbDither&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot;&gt;GdkRgbDither&lt;/a&gt; dith,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *buf,
    &lt;a href= &gt;gint&lt;/a&gt; rowstride);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_draw_rgb_32_image_dithalign</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-draw-rgb-32-image-dithalign</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Like &lt;a class=&quot;link&quot; href=&quot;gdk-GdkRGB.html#gdk-draw-rgb-32-image&quot; title=&quot;gdk_draw_rgb_32_image ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_rgb_32_image()&lt;/code&gt;&lt;/a&gt;, but allows you to specify the dither
offsets. See &lt;a class=&quot;link&quot; href=&quot;gdk-GdkRGB.html#gdk-draw-rgb-image-dithalign&quot; title=&quot;gdk_draw_rgb_image_dithalign ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_rgb_image_dithalign()&lt;/code&gt;&lt;/a&gt; for more details.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_draw_rgb_32_image_dithalign (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkGC&lt;/a&gt; *gc,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; height,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbDither&quot; href=&quot;enum GdkRgbDither&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot;&gt;GdkRgbDither&lt;/a&gt; dith,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *buf,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; rowstride,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; xdith,
    &lt;a href= &gt;gint&lt;/a&gt; ydith);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_RGB_DITHER_NONE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>GdkRgbDither</Anchor>
  <NodeRef refid="291"/>
  <Declaration type="html">&lt;pre&gt;GDK_RGB_DITHER_NONE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkRgbDither</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_RGB_DITHER_NORMAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>GdkRgbDither</Anchor>
  <NodeRef refid="291"/>
  <Declaration type="html">&lt;pre&gt;GDK_RGB_DITHER_NORMAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkRgbDither</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_RGB_DITHER_MAX</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>GdkRgbDither</Anchor>
  <NodeRef refid="291"/>
  <Declaration type="html">&lt;pre&gt;GDK_RGB_DITHER_MAX&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkRgbDither</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkRgbDither</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>GdkRgbDither</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Selects whether or not GdkRGB applies dithering
to the image on display. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_RGB_DITHER_NONE,
    GDK_RGB_DITHER_NORMAL,
    GDK_RGB_DITHER_MAX 
} GdkRgbDither;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_cmap_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-cmap-new</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Creates a new &lt;a class=&quot;link&quot; href=&quot;gdk-GdkRGB.html#GdkRgbCmap&quot; title=&quot;GdkRgbCmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRgbCmap&lt;/span&gt;&lt;/a&gt; structure. The cmap maps color indexes to
RGB colors. If &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;n_colors&lt;/code&gt;&lt;/em&gt; is less than 256, then images containing
color values greater than or equal to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;n_colors&lt;/code&gt;&lt;/em&gt; will produce undefined
results, including possibly segfaults.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-GdkRGB.html#GdkRgbCmap&quot; href=&quot;GdkRgbCmap&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkRgbCmap&lt;/a&gt;* gdk_rgb_cmap_new (
    guint32 *colors,
    &lt;a href= &gt;gint&lt;/a&gt; n_colors);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_cmap_free</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-cmap-free</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Frees the memory associated with a &lt;a class=&quot;link&quot; href=&quot;gdk-GdkRGB.html#GdkRgbCmap&quot; title=&quot;GdkRgbCmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkRgbCmap&lt;/span&gt;&lt;/a&gt; created by &lt;a class=&quot;link&quot; href=&quot;gdk-GdkRGB.html#gdk-rgb-cmap-new&quot; title=&quot;gdk_rgb_cmap_new ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_rgb_cmap_new()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_rgb_cmap_free (
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbCmap&quot; href=&quot;GdkRgbCmap&quot; title=&gt;GdkRgbCmap&lt;/a&gt; *cmap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkRgbCmap</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>GdkRgbCmap</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">A private data structure which maps color indices to actual RGB
colors. This is used only for &lt;a class=&quot;link&quot; href=&quot;gdk-GdkRGB.html#gdk-draw-indexed-image&quot; title=&quot;gdk_draw_indexed_image ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_indexed_image()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    guint32 colors[256];
    gint n_colors;
} GdkRgbCmap;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_gc_set_foreground</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-gc-set-foreground</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Sets the foreground color in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/em&gt; to the specified color (or the
closest approximation, in the case of limited visuals).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_rgb_gc_set_foreground (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *gc,
    guint32 rgb);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_rgb_gc_set_foreground&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_gc_set_background</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-gc-set-background</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Sets the background color in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/em&gt; to the specified color (or the
closest approximation, in the case of limited visuals).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_rgb_gc_set_background (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *gc,
    guint32 rgb);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_rgb_gc_set_background&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_xpixel_from_rgb</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-xpixel-from-rgb</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Finds the X pixel closest in color to the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;rgb&lt;/code&gt;&lt;/em&gt; color specified. This
value may be used to set the &lt;em class=&quot;structfield&quot;&gt;&lt;code&gt;pixel&lt;/code&gt;&lt;/em&gt; field of
a &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; title=&quot;GdkColor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColor&lt;/span&gt;&lt;/a&gt; struct.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gulong&lt;/a&gt; gdk_rgb_xpixel_from_rgb (
    guint32 rgb);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_rgb_xpixel_from_rgb&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_find_color</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-find-color</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;colormap&lt;/code&gt;&lt;/em&gt; should be the colormap for the graphics context and
drawable you're using to draw. If you're drawing to a &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWidget.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWidget&lt;/span&gt;&lt;/a&gt;,
call &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWidget.html#gtk-widget-get-colormap&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_widget_get_colormap()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_rgb_find_color (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_set_install</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-set-install</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">If &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;install&lt;/code&gt;&lt;/em&gt; is &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt;, directs GdkRGB to always install a new &quot;private&quot;
colormap rather than trying to find a best fit with the colors already
allocated. Ordinarily, GdkRGB will install a colormap only if a
sufficient cube cannot be allocated.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_rgb_set_install (
    &lt;a href= &gt;gboolean&lt;/a&gt; install);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_set_min_colors</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-set-min-colors</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Sets the minimum number of colors for the color cube. Generally,
GdkRGB tries to allocate the largest color cube it can. If it can't
allocate a color cube at least as large as &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;min_colors&lt;/code&gt;&lt;/em&gt;, it installs a
private colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_rgb_set_min_colors (
    &lt;a href= &gt;gint&lt;/a&gt; min_colors);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_get_visual</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-get-visual</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Gets a &quot;preferred visual&quot; chosen by GdkRGB for rendering image data
on the default screen. In previous versions of GDK, this was the
only visual GdkRGB could use for rendering. In current versions,
it's simply the visual GdkRGB would have chosen as the optimal one
in those previous versions. GdkRGB can now render to drawables with
any visual.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&gt;GdkVisual&lt;/a&gt;* gdk_rgb_get_visual (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_get_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-get-colormap</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Get the preferred colormap for rendering image data.  Not a
very useful function; historically, GDK could only render RGB image
data to one colormap and visual, but in the current version it can
render to any colormap and visual. So there's no need to call this
function.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt;* gdk_rgb_get_colormap (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_get_cmap</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-get-cmap</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Gets the colormap set by GdkRGB. This colormap and the corresponding
visual should be used when creating windows that will be drawn in by GdkRGB.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_rgb_get_cmap gdk_rgb_get_colormap&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_rgb_get_cmap&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_ditherable</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-ditherable</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Determines whether the preferred visual is ditherable. This function may be
useful for presenting a user interface choice to the user about which
dither mode is desired; if the display is not ditherable, it may make
sense to gray out or hide the corresponding UI widget.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gboolean&lt;/a&gt; gdk_rgb_ditherable (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_colormap_ditherable</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-colormap-ditherable</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Determines whether the visual associated with &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;cmap&lt;/code&gt;&lt;/em&gt; is ditherable. This 
function may be useful for presenting a user interface choice to the user 
about which dither mode is desired; if the display is not ditherable, it may 
make sense to gray out or hide the corresponding UI widget.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_rgb_colormap_ditherable (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *cmap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_rgb_set_verbose</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-GdkRGB.html</Path>
  <Anchor>gdk-rgb-set-verbose</Anchor>
  <NodeRef refid="11"/>
  <Abstract type="html">Sets the &quot;verbose&quot; flag. This is generally only useful for debugging.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_rgb_set_verbose (
    &lt;a href= &gt;gboolean&lt;/a&gt; verbose);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkImage</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>GdkImage</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt; struct contains information on the image and the pixel data.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GObject parent_instance;
    GdkImageType type;
    GdkVisual *visual;
    GdkByteOrder byte_order;
    gint width;
    gint height;
    guint16 depth;
    guint16 bpp;
    guint16 bpl;
    guint16 bits_per_pixel;
    gpointer mem;
    GdkColormap *colormap;
} GdkImage;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-new</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Creates a new &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;link&quot;&gt;GdkImage&lt;/a&gt;* gdk_image_new (
    &lt;a class=&quot;gdk-Images.html#GdkImageType&quot; href=&quot;enum GdkImageType&quot; title=&quot;link&quot;&gt;GdkImageType&lt;/a&gt; type,
    &lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkVisual&lt;/a&gt; *visual,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_IMAGE_NORMAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>GdkImageType</Anchor>
  <NodeRef refid="309"/>
  <Declaration type="html">&lt;pre&gt;GDK_IMAGE_NORMAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkImageType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_IMAGE_SHARED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>GdkImageType</Anchor>
  <NodeRef refid="309"/>
  <Declaration type="html">&lt;pre&gt;GDK_IMAGE_SHARED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkImageType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_IMAGE_FASTEST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>GdkImageType</Anchor>
  <NodeRef refid="309"/>
  <Declaration type="html">&lt;pre&gt;GDK_IMAGE_FASTEST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkImageType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkImageType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>GdkImageType</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Specifies the type of a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_IMAGE_NORMAL,
    GDK_IMAGE_SHARED,
    GDK_IMAGE_FASTEST 
} GdkImageType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_new_bitmap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-new-bitmap</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Creates a new &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt; with a depth of 1 from the given data.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;link&quot;&gt;GdkImage&lt;/a&gt;* gdk_image_new_bitmap (
    &lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkVisual&lt;/a&gt; *visual,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gpointer&lt;/a&gt; data,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_image_new_bitmap&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-get</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">This is a deprecated wrapper for &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-drawable-get-image&quot; title=&quot;gdk_drawable_get_image ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_drawable_get_image()&lt;/code&gt;&lt;/a&gt;;
&lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-drawable-get-image&quot; title=&quot;gdk_drawable_get_image ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_drawable_get_image()&lt;/code&gt;&lt;/a&gt; should be used instead. Or even better: in
most cases &lt;a class=&quot;link&quot; href=&quot;gdk-Pixbufs.html#gdk-pixbuf-get-from-drawable&quot; title=&quot;gdk_pixbuf_get_from_drawable ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pixbuf_get_from_drawable()&lt;/code&gt;&lt;/a&gt; is the most convenient
choice.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;link&quot;&gt;GdkImage&lt;/a&gt;* gdk_image_get (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_image_get&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_ref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-ref</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Deprecated function; use &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt; instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;link&quot;&gt;GdkImage&lt;/a&gt;* gdk_image_ref (
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&gt;GdkImage&lt;/a&gt; *image);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_image_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_unref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-unref</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Deprecated function; use &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-unref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_unref()&lt;/code&gt;&lt;/a&gt; instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_image_unref (
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&gt;GdkImage&lt;/a&gt; *image);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_image_unref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_destroy</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-destroy</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Destroys a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;, freeing any resources allocated for it.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_image_destroy gdk_image_unref&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_image_destroy&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_get_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-get-colormap</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Retrieves the colormap for a given image, if it exists.  An image
will have a colormap if the drawable from which it was created has
a colormap, or if a colormap was set explicitely with
&lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#gdk-image-set-colormap&quot; title=&quot;gdk_image_set_colormap ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_image_set_colormap()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_image_get_colormap (
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&gt;GdkImage&lt;/a&gt; *image);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_set_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-set-colormap</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Sets the colormap for the image to the given colormap.  Normally
there's no need to use this function, images are created with the
correct colormap if you get the image from a drawable. If you
create the image from scratch, use the colormap of the drawable you
intend to render the image to.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_image_set_colormap (
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;link&quot;&gt;GdkImage&lt;/a&gt; *image,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *colormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_put_pixel</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-put-pixel</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Sets a pixel in a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt; to a given pixel value.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_image_put_pixel (
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkImage&lt;/a&gt; *image,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y,
    guint32 pixel);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_image_get_pixel</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Images.html</Path>
  <Anchor>gdk-image-get-pixel</Anchor>
  <NodeRef refid="12"/>
  <Abstract type="html">Gets a pixel value at a specified position in a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;guint32 gdk_image_get_pixel (
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkImage&lt;/a&gt; *image,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixbuf_render_threshold_alpha</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pixbufs.html</Path>
  <Anchor>gdk-pixbuf-render-threshold-alpha</Anchor>
  <NodeRef refid="13"/>
  <Abstract type="html">Takes the opacity values in a rectangular portion of a pixbuf and thresholds
them to produce a bi-level alpha mask that can be used as a clipping mask for
a drawable.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pixbuf_render_threshold_alpha (
    &lt;a href=&quot;link&quot; &gt;GdkPixbuf&lt;/a&gt; *pixbuf,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&gt;GdkBitmap&lt;/a&gt; *bitmap,
    int src_x,
    int src_y,
    int dest_x,
    int dest_y,
    int width,
    int height,
    int alpha_threshold);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixbuf_render_to_drawable</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pixbufs.html</Path>
  <Anchor>gdk-pixbuf-render-to-drawable</Anchor>
  <NodeRef refid="13"/>
  <Abstract type="html">Renders a rectangular portion of a pixbuf to a drawable while using the
specified GC.  This is done using GdkRGB, so the specified drawable must have
the GdkRGB visual and colormap.  Note that this function will ignore the
opacity information for images with an alpha channel; the GC must already
have the clipping mask set if you want transparent regions to show through.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pixbuf_render_to_drawable (
    &lt;a href=&quot;link&quot; &gt;GdkPixbuf&lt;/a&gt; *pixbuf,
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&quot;link&quot;&gt;GdkGC&lt;/a&gt; *gc,
    int src_x,
    int src_y,
    int dest_x,
    int dest_y,
    int width,
    int height,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbDither&quot; href=&quot;enum GdkRgbDither&quot; title=&gt;GdkRgbDither&lt;/a&gt; dither,
    int x_dither,
    int y_dither);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecatedInVersion>2.4</DeprecatedInVersion>
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_pixbuf_render_to_drawable&lt;/code&gt; has been deprecated since version 2.4 and should not be used in newly-written code. This function is obsolete. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-pixbuf&quot; title=&quot;gdk_draw_pixbuf ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_pixbuf()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixbuf_render_to_drawable_alpha</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pixbufs.html</Path>
  <Anchor>gdk-pixbuf-render-to-drawable-alpha</Anchor>
  <NodeRef refid="13"/>
  <Abstract type="html">Renders a rectangular portion of a pixbuf to a drawable.  The destination
drawable must have a colormap. All windows have a colormap, however, pixmaps
only have colormap by default if they were created with a non-&lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; window argument.
Otherwise a colormap must be set on them with gdk_drawable_set_colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pixbuf_render_to_drawable_alpha (
    &lt;a href=&quot;link&quot; &gt;GdkPixbuf&lt;/a&gt; *pixbuf,
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbufAlphaMode&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    int src_x,
    int src_y,
    int dest_x,
    int dest_y,
    int width,
    int height,
    &lt;a href=&quot;link&quot; &gt;GdkPixbufAlphaMode&lt;/a&gt; alpha_mode,
    int alpha_threshold,
    &lt;a class=&quot;gdk-GdkRGB.html#GdkRgbDither&quot; href=&quot;enum GdkRgbDither&quot; title=&gt;GdkRgbDither&lt;/a&gt; dither,
    int x_dither,
    int y_dither);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecatedInVersion>2.4</DeprecatedInVersion>
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_pixbuf_render_to_drawable_alpha&lt;/code&gt; has been deprecated since version 2.4 and should not be used in newly-written code. This function is obsolete. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-pixbuf&quot; title=&quot;gdk_draw_pixbuf ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_pixbuf()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixbuf_render_pixmap_and_mask</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pixbufs.html</Path>
  <Anchor>gdk-pixbuf-render-pixmap-and-mask</Anchor>
  <NodeRef refid="13"/>
  <Abstract type="html">Creates a pixmap and a mask bitmap which are returned in the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixmap_return&lt;/code&gt;&lt;/em&gt;
and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;mask_return&lt;/code&gt;&lt;/em&gt; arguments, respectively, and renders a pixbuf and its
corresponding thresholded alpha mask to them.  This is merely a convenience
function; applications that need to render pixbufs with dither offsets or to
given drawables should use &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-pixbuf&quot; title=&quot;gdk_draw_pixbuf ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_pixbuf()&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Pixbufs.html#gdk-pixbuf-render-threshold-alpha&quot; title=&quot;gdk_pixbuf_render_threshold_alpha ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pixbuf_render_threshold_alpha()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pixbuf_render_pixmap_and_mask (
    &lt;a href=&quot;link&quot; &gt;GdkPixbuf&lt;/a&gt; *pixbuf,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt; **pixmap_return,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&gt;GdkBitmap&lt;/a&gt; **mask_return,
    int alpha_threshold);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixbuf_render_pixmap_and_mask_for_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pixbufs.html</Path>
  <Anchor>gdk-pixbuf-render-pixmap-and-mask-for-colormap</Anchor>
  <NodeRef refid="13"/>
  <Abstract type="html">Creates a pixmap and a mask bitmap which are returned in the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixmap_return&lt;/code&gt;&lt;/em&gt;
and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;mask_return&lt;/code&gt;&lt;/em&gt; arguments, respectively, and renders a pixbuf and its
corresponding tresholded alpha mask to them.  This is merely a convenience
function; applications that need to render pixbufs with dither offsets or to
given drawables should use &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-pixbuf&quot; title=&quot;gdk_draw_pixbuf ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_pixbuf()&lt;/code&gt;&lt;/a&gt;, and &lt;a class=&quot;link&quot; href=&quot;gdk-Pixbufs.html#gdk-pixbuf-render-threshold-alpha&quot; title=&quot;gdk_pixbuf_render_threshold_alpha ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pixbuf_render_threshold_alpha()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pixbuf_render_pixmap_and_mask_for_colormap (
    &lt;a href=&quot;link&quot; &gt;GdkPixbuf&lt;/a&gt; *pixbuf,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt; **pixmap_return,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&gt;GdkBitmap&lt;/a&gt; **mask_return,
    int alpha_threshold);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixbuf_get_from_drawable</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pixbufs.html</Path>
  <Anchor>gdk-pixbuf-get-from-drawable</Anchor>
  <NodeRef refid="13"/>
  <Abstract type="html">Transfers image data from a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt; and converts it to an RGB(A)
representation inside a &lt;a
href=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbuf&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GdkPixbuf&lt;/span&gt;&lt;/a&gt;. In other words, copies
image data from a server-side drawable to a client-side RGB(A) buffer.
This allows you to efficiently read individual pixels on the client side.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbuf&quot; &gt;GdkPixbuf&lt;/a&gt;* gdk_pixbuf_get_from_drawable (
    &lt;a href=&quot;link&quot; &gt;GdkPixbuf&lt;/a&gt; *dest,
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;link&quot;&gt;GdkDrawable&lt;/a&gt; *src,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *cmap,
    int src_x,
    int src_y,
    int dest_x,
    int dest_y,
    int width,
    int height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixbuf_get_from_image</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pixbufs.html</Path>
  <Anchor>gdk-pixbuf-get-from-image</Anchor>
  <NodeRef refid="13"/>
  <Abstract type="html">Same as &lt;a class=&quot;link&quot; href=&quot;gdk-Pixbufs.html#gdk-pixbuf-get-from-drawable&quot; title=&quot;gdk_pixbuf_get_from_drawable ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pixbuf_get_from_drawable()&lt;/code&gt;&lt;/a&gt; but gets the pixbuf from
an image.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbuf&quot; &gt;GdkPixbuf&lt;/a&gt;* gdk_pixbuf_get_from_image (
    &lt;a href=&quot;link&quot; &gt;GdkPixbuf&lt;/a&gt; *dest,
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&quot;link&quot;&gt;GdkImage&lt;/a&gt; *src,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *cmap,
    int src_x,
    int src_y,
    int dest_x,
    int dest_y,
    int width,
    int height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkColor</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>GdkColor</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; title=&quot;GdkColor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColor&lt;/span&gt;&lt;/a&gt; structure is used to describe an 
allocated or unallocated color.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    guint32 pixel;
    guint16 red;
    guint16 green;
    guint16 blue;
} GdkColor;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkColormap</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>GdkColormap</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">The colormap structure contains the following public fields.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    gint size;
    GdkColor *colors;
} GdkColormap;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-new</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Creates a new colormap for the given visual.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_colormap_new (
    &lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkVisual&lt;/a&gt; *visual,
    &lt;a href= &gt;gboolean&lt;/a&gt; allocate);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_ref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-ref</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Deprecated function; use &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt; instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_colormap_ref (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *cmap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_colormap_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_unref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-unref</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Deprecated function; use &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt; instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_colormap_unref (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *cmap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_colormap_unref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_get_system</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-get-system</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Gets the system's default colormap for the default screen. (See
&lt;code class=&quot;function&quot;&gt;gdk_colormap_get_system_for_screen()&lt;/code&gt;)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt;* gdk_colormap_get_system (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_get_system_size</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-get-system-size</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Returns the size of the system's default colormap.
(See the description of struct &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; title=&quot;GdkColormap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColormap&lt;/span&gt;&lt;/a&gt; for an
explanation of the size of a colormap.)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gint&lt;/a&gt; gdk_colormap_get_system_size (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_colormap_get_system_size&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_change</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-change</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Changes the value of the first &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;ncolors&lt;/code&gt;&lt;/em&gt; in a private colormap
to match the values in the &lt;em class=&quot;structfield&quot;&gt;&lt;code&gt;colors&lt;/code&gt;&lt;/em&gt;
array in the colormap. This function is obsolete and
should not be used. See &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-color-change&quot; title=&quot;gdk_color_change ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_color_change()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_colormap_change (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a href= &gt;gint&lt;/a&gt; ncolors);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_colormap_change&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_alloc_colors</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-alloc-colors</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Allocates colors from a colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_colormap_alloc_colors (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkColor&lt;/a&gt; *colors,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot; &gt;gint&lt;/a&gt; n_colors,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot; &gt;gboolean&lt;/a&gt; writeable,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot; &gt;gboolean&lt;/a&gt; best_match,
    &lt;a href= &gt;gboolean&lt;/a&gt; *success);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_alloc_color</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-alloc-color</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Allocates a single color from a colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_colormap_alloc_color (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkColor&lt;/a&gt; *color,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot; &gt;gboolean&lt;/a&gt; writeable,
    &lt;a href= &gt;gboolean&lt;/a&gt; best_match);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_free_colors</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-free-colors</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Frees previously allocated colors.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_colormap_free_colors (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkColor&lt;/a&gt; *colors,
    &lt;a href= &gt;gint&lt;/a&gt; n_colors);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_query_color</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-query-color</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Locates the RGB color in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;colormap&lt;/code&gt;&lt;/em&gt; corresponding to the given
hardware pixel &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixel&lt;/code&gt;&lt;/em&gt;. &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixel&lt;/code&gt;&lt;/em&gt; must be a valid pixel in the
colormap; it's a programmer error to call this function with a
pixel which is not in the colormap. Hardware pixels are normally
obtained from &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-colormap-alloc-colors&quot; title=&quot;gdk_colormap_alloc_colors ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_colormap_alloc_colors()&lt;/code&gt;&lt;/a&gt;, or from a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;. (A
&lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt; contains image data in hardware format, a &lt;a
href=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbuf&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GdkPixbuf&lt;/span&gt;&lt;/a&gt;
contains image data in a canonical 24-bit RGB format.)</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_colormap_query_color (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gulong&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a href=&quot;link&quot; &gt;gulong&lt;/a&gt; pixel,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *result);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_get_visual</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-get-visual</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Returns the visual for which a given colormap was created.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;link&quot;&gt;GdkVisual&lt;/a&gt;* gdk_colormap_get_visual (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *colormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colormap_get_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colormap-get-screen</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Gets the screen for which this colormap was created.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt;* gdk_colormap_get_screen (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *cmap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colors_store</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colors-store</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Changes the value of the first &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;ncolors&lt;/code&gt;&lt;/em&gt; colors in
a private colormap. This function is obsolete and
should not be used. See &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-color-change&quot; title=&quot;gdk_color_change ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_color_change()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_colors_store (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkColor&lt;/a&gt; *colors,
    &lt;a href= &gt;gint&lt;/a&gt; ncolors);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_colors_store&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_copy</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-copy</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Makes a copy of a color structure. The result
must be freed using &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-color-free&quot; title=&quot;gdk_color_free ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_color_free()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;link&quot;&gt;GdkColor&lt;/a&gt;* gdk_color_copy (
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_free</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-free</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Frees a color structure created with 
&lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-color-copy&quot; title=&quot;gdk_color_copy ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_color_copy()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_color_free (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colors_alloc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colors-alloc</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Allocates colors from a colormap. This function
is obsolete. See &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-colormap-alloc-colors&quot; title=&quot;gdk_colormap_alloc_colors ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_colormap_alloc_colors()&lt;/code&gt;&lt;/a&gt;.
For full documentation of the fields, see 
the Xlib documentation for &lt;code class=&quot;function&quot;&gt;&lt;code class=&quot;function&quot;&gt;XAllocColorCells()&lt;/code&gt;&lt;/code&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_colors_alloc (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gulong&quot; &gt;gboolean&lt;/a&gt; contiguous,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gulong&lt;/a&gt; *planes,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gulong&quot; &gt;gint&lt;/a&gt; nplanes,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gulong&lt;/a&gt; *pixels,
    &lt;a href= &gt;gint&lt;/a&gt; npixels);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_colors_alloc&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_colors_free</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-colors-free</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Frees colors allocated with &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-colors-alloc&quot; title=&quot;gdk_colors_alloc ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_colors_alloc()&lt;/code&gt;&lt;/a&gt;. This
function is obsolete. See &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-colormap-free-colors&quot; title=&quot;gdk_colormap_free_colors ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_colormap_free_colors()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_colors_free (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gulong&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gulong&lt;/a&gt; *pixels,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gulong&quot; &gt;gint&lt;/a&gt; npixels,
    &lt;a href= &gt;gulong&lt;/a&gt; planes);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_colors_free&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_white</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-white</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Returns the white color for a given colormap. The resulting
value has already allocated been allocated.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_color_white (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_color_white&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_black</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-black</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Returns the black color for a given colormap. The resulting
value has already benn allocated.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_color_black (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_color_black&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_parse</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-parse</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Parses a textual specification of a color and fill in the
&lt;em class=&quot;structfield&quot;&gt;&lt;code&gt;red&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;structfield&quot;&gt;&lt;code&gt;green&lt;/code&gt;&lt;/em&gt;,
and &lt;em class=&quot;structfield&quot;&gt;&lt;code&gt;blue&lt;/code&gt;&lt;/em&gt; fields of a &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; title=&quot;GdkColor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColor&lt;/span&gt;&lt;/a&gt;
structure. The color is &lt;span class=&quot;emphasis&quot;&gt;&lt;em&gt;not&lt;/em&gt;&lt;/span&gt; allocated, you
must call &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-colormap-alloc-color&quot; title=&quot;gdk_colormap_alloc_color ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_colormap_alloc_color()&lt;/code&gt;&lt;/a&gt; yourself. The string can
either one of a large set of standard names. (Taken from the X11
&lt;code class=&quot;filename&quot;&gt;rgb.txt&lt;/code&gt; file), or it can be a hex value in the
form '#rgb' '#rrggbb' '#rrrgggbbb' or
'#rrrrggggbbbb' where 'r', 'g' and 'b' are hex digits of the
red, green, and blue components of the color, respectively. (White
in the four forms is '#fff' '#ffffff' '#fffffffff' and
'#ffffffffffff')</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gboolean&lt;/a&gt; gdk_color_parse (
    const &lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt; *spec,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_alloc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-alloc</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Allocates a single color from a colormap.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_color_alloc (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_color_alloc&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-colormap-alloc-color&quot; title=&quot;gdk_colormap_alloc_color ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_colormap_alloc_color()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_change</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-change</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Changes the value of a color that has already
been allocated. If &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;colormap&lt;/code&gt;&lt;/em&gt; is not a private
colormap, then the color must have been allocated
using &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#gdk-colormap-alloc-colors&quot; title=&quot;gdk_colormap_alloc_colors ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_colormap_alloc_colors()&lt;/code&gt;&lt;/a&gt; with the 
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;writeable&lt;/code&gt;&lt;/em&gt; set to &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_color_change (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt; *colormap,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_color_change&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_equal</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-equal</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Compares two colors.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_color_equal (
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;link&quot;&gt;GdkColor&lt;/a&gt; *colora,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *colorb);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_hash</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-hash</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">A hash function suitable for using for a hash
table that stores &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; title=&quot;GdkColor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColor&lt;/span&gt;&lt;/a&gt;'s.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; gdk_color_hash (
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *colora);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_color_to_string</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Colormaps-and-Colors.html</Path>
  <Anchor>gdk-color-to-string</Anchor>
  <NodeRef refid="14"/>
  <Abstract type="html">Returns a textual specification of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/em&gt; in the hexadecimal form
&lt;code class=&quot;literal&quot;&gt;#rrrrggggbbbb&lt;/code&gt;, where &lt;code class=&quot;literal&quot;&gt;r&lt;/code&gt;,
&lt;code class=&quot;literal&quot;&gt;g&lt;/code&gt; and &lt;code class=&quot;literal&quot;&gt;b&lt;/code&gt; are hex digits
representing the red, green and blue components respectively.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt;* gdk_color_to_string (
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkVisual</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkVisual</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">The &lt;span class=&quot;type&quot;&gt;GdkVisual&lt;/span&gt; structure contains information about
a particular visual.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GObject parent_instance;
    GdkVisualType type;
    gint depth;
    GdkByteOrder byte_order;
    gint colormap_size;
    gint bits_per_rgb;
    guint32 red_mask;
    gint red_shift;
    gint red_prec;
    guint32 green_mask;
    gint green_shift;
    gint green_prec;
    guint32 blue_mask;
    gint blue_shift;
    gint blue_prec;
} GdkVisual;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISUAL_STATIC_GRAY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkVisualType</Anchor>
  <NodeRef refid="354"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISUAL_STATIC_GRAY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkVisualType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISUAL_GRAYSCALE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkVisualType</Anchor>
  <NodeRef refid="354"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISUAL_GRAYSCALE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkVisualType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISUAL_STATIC_COLOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkVisualType</Anchor>
  <NodeRef refid="354"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISUAL_STATIC_COLOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkVisualType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISUAL_PSEUDO_COLOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkVisualType</Anchor>
  <NodeRef refid="354"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISUAL_PSEUDO_COLOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkVisualType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISUAL_TRUE_COLOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkVisualType</Anchor>
  <NodeRef refid="354"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISUAL_TRUE_COLOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkVisualType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISUAL_DIRECT_COLOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkVisualType</Anchor>
  <NodeRef refid="354"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISUAL_DIRECT_COLOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkVisualType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkVisualType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkVisualType</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">A set of values that describe the manner in which the
pixel values for a visual are converted into RGB
values for display.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_VISUAL_STATIC_GRAY,
    GDK_VISUAL_GRAYSCALE,
    GDK_VISUAL_STATIC_COLOR,
    GDK_VISUAL_PSEUDO_COLOR,
    GDK_VISUAL_TRUE_COLOR,
    GDK_VISUAL_DIRECT_COLOR 
} GdkVisualType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LSB_FIRST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkByteOrder</Anchor>
  <NodeRef refid="355"/>
  <Declaration type="html">&lt;pre&gt;GDK_LSB_FIRST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkByteOrder</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MSB_FIRST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkByteOrder</Anchor>
  <NodeRef refid="355"/>
  <Declaration type="html">&lt;pre&gt;GDK_MSB_FIRST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkByteOrder</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkByteOrder</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>GdkByteOrder</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">A set of values describing the possible byte-orders
for storing pixel values in memory.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_LSB_FIRST,
    GDK_MSB_FIRST 
} GdkByteOrder;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_query_depths</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-query-depths</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">This function returns the available bit depths for the default
screen. It's equivalent to listing the visuals
(&lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#gdk-list-visuals&quot; title=&quot;gdk_list_visuals ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_list_visuals()&lt;/code&gt;&lt;/a&gt;) and then looking at the depth field in each
visual, removing duplicates.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_query_depths (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; **depths,
    &lt;a href= &gt;gint&lt;/a&gt; *count);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_query_visual_types</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-query-visual-types</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">This function returns the available visual types for the default
screen. It's equivalent to listing the visuals
(&lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#gdk-list-visuals&quot; title=&quot;gdk_list_visuals ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_list_visuals()&lt;/code&gt;&lt;/a&gt;) and then looking at the type field in each
visual, removing duplicates.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_query_visual_types (
    &lt;a class=&quot;gdk-Visuals.html#GdkVisualType&quot; href=&quot;enum GdkVisualType&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkVisualType&lt;/a&gt; **visual_types,
    &lt;a href= &gt;gint&lt;/a&gt; *count);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_list_visuals</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-list-visuals</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Lists the available visuals for the default screen.
(See &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html#gdk-screen-list-visuals&quot; title=&quot;gdk_screen_list_visuals ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_screen_list_visuals()&lt;/code&gt;&lt;/a&gt;)
A visual describes a hardware image data format.
For example, a visual might support 24-bit color, or 8-bit color,
and might expect pixels to be in a certain format.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;GList&lt;/a&gt;* gdk_list_visuals (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_get_best_depth</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-get-best-depth</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Get the best available depth for the default GDK screen.  &quot;Best&quot;
means &quot;largest,&quot; i.e. 32 preferred over 24 preferred over 8 bits
per pixel.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gint&lt;/a&gt; gdk_visual_get_best_depth (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_get_best_type</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-get-best-type</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Return the best available visual type for the default GDK screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisualType&quot; href=&quot;enum GdkVisualType&quot; title=&gt;GdkVisualType&lt;/a&gt; gdk_visual_get_best_type (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_get_system</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-get-system</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Get the system'sdefault visual for the default GDK screen.
This is the visual for the root window of the display.
The return value should not be freed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&gt;GdkVisual&lt;/a&gt;* gdk_visual_get_system (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_get_best</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-get-best</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Get the visual with the most available colors for the default
GDK screen. The return value should not be freed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&gt;GdkVisual&lt;/a&gt;* gdk_visual_get_best (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_get_best_with_depth</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-get-best-with-depth</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Get the best visual with depth &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;depth&lt;/code&gt;&lt;/em&gt; for the default GDK screen.
Color visuals and visuals with mutable colormaps are preferred
over grayscale or fixed-colormap visuals. The return value should not
be freed. &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; may be returned if no visual supports &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;depth&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkVisual&lt;/a&gt;* gdk_visual_get_best_with_depth (
    &lt;a href= &gt;gint&lt;/a&gt; depth);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_get_best_with_type</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-get-best-with-type</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Get the best visual of the given &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;visual_type&lt;/code&gt;&lt;/em&gt; for the default GDK screen.
Visuals with higher color depths are considered better. The return value
should not be freed. &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; may be returned if no visual has type
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;visual_type&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;link&quot;&gt;GdkVisual&lt;/a&gt;* gdk_visual_get_best_with_type (
    &lt;a class=&quot;gdk-Visuals.html#GdkVisualType&quot; href=&quot;enum GdkVisualType&quot; title=&gt;GdkVisualType&lt;/a&gt; visual_type);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_get_best_with_both</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-get-best-with-both</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Combines &lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#gdk-visual-get-best-with-depth&quot; title=&quot;gdk_visual_get_best_with_depth ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_visual_get_best_with_depth()&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#gdk-visual-get-best-with-type&quot; title=&quot;gdk_visual_get_best_with_type ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_visual_get_best_with_type()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkVisual&lt;/a&gt;* gdk_visual_get_best_with_both (
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; depth,
    &lt;a class=&quot;gdk-Visuals.html#GdkVisualType&quot; href=&quot;enum GdkVisualType&quot; title=&gt;GdkVisualType&lt;/a&gt; visual_type);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_ref</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-ref</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Deprecated equivalent of &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_visual_ref(v) g_object_ref(v)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_visual_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_unref</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-unref</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Deprecated equivalent of &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-unref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_unref()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_visual_unref(v) g_object_unref(v)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_visual_unref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_visual_get_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Visuals.html</Path>
  <Anchor>gdk-visual-get-screen</Anchor>
  <NodeRef refid="15"/>
  <Abstract type="html">Gets the screen to which this visual belongs</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt;* gdk_visual_get_screen (
    &lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&gt;GdkVisual&lt;/a&gt; *visual);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkFont</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>GdkFont</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">The &lt;span class=&quot;structname&quot;&gt;GdkFont&lt;/span&gt; structure represents a font or fontset. It
contains the following public fields. A new &lt;span class=&quot;structname&quot;&gt;GdkFont&lt;/span&gt;
structure is returned by &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-font-load&quot; title=&quot;gdk_font_load ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_font_load()&lt;/code&gt;&lt;/a&gt; or &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-fontset-load&quot; title=&quot;gdk_fontset_load ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_fontset_load()&lt;/code&gt;&lt;/a&gt;,
and is reference counted with &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-font-ref&quot; title=&quot;gdk_font_ref ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_font_ref()&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-font-unref&quot; title=&quot;gdk_font_unref ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_font_unref()&lt;/code&gt;&lt;/a&gt;</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkFontType type;
    gint ascent;
    gint descent;
} GdkFont;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GdkFont&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FONT_FONT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>GdkFontType</Anchor>
  <NodeRef refid="370"/>
  <Declaration type="html">&lt;pre&gt;GDK_FONT_FONT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="GdkFontType">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GdkFontType&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFontType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FONT_FONTSET</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>GdkFontType</Anchor>
  <NodeRef refid="370"/>
  <Declaration type="html">&lt;pre&gt;GDK_FONT_FONTSET&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="GdkFontType">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GdkFontType&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFontType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkFontType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>GdkFontType</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Indicates the type of a font. The possible values
are currently:</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_FONT_FONT,
    GDK_FONT_FONTSET 
} GdkFontType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GdkFontType&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_load</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-font-load</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Loads a font.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt;* gdk_font_load (
    const &lt;a href= &gt;gchar&lt;/a&gt; *font_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_load&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_load_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-font-load-for-display</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Loads a font for use on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt;* gdk_font_load_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    const &lt;a href= &gt;gchar&lt;/a&gt; *font_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_load_for_display&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_fontset_load</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-fontset-load</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Loads a fontset.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt;* gdk_fontset_load (
    const &lt;a href= &gt;gchar&lt;/a&gt; *fontset_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_fontset_load&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_fontset_load_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-fontset-load-for-display</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Loads a fontset for use on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt;* gdk_fontset_load_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    const &lt;a href= &gt;gchar&lt;/a&gt; *fontset_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_fontset_load_for_display&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_from_description</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-font-from-description</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Load a &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt; based on a Pango font description. This font will
only be an approximation of the Pango font, and
internationalization will not be handled correctly. This function
should only be used for legacy code that cannot be easily converted
to use Pango. Using Pango directly will produce better results.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/pango/pango-Fonts.html#PangoFontDescription&quot;&gt;GdkFont&lt;/a&gt;* gdk_font_from_description (
    &lt;a href= &gt;PangoFontDescription&lt;/a&gt; *font_desc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_from_description&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_from_description_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-font-from-description-for-display</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Loads a &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt; based on a Pango font description for use on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;. 
This font will only be an approximation of the Pango font, and
internationalization will not be handled correctly. This function
should only be used for legacy code that cannot be easily converted
to use Pango. Using Pango directly will produce better results.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt;* gdk_font_from_description_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/pango/pango-Fonts.html#PangoFontDescription&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a href= &gt;PangoFontDescription&lt;/a&gt; *font_desc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_from_description_for_display&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_get_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-font-get-display</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Returns the &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt;* gdk_font_get_display (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&gt;GdkFont&lt;/a&gt; *font);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_get_display&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_ref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-font-ref</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Increases the reference count of a font by one.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt;* gdk_font_ref (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&gt;GdkFont&lt;/a&gt; *font);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_unref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-font-unref</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Decreases the reference count of a font by one.
If the result is zero, destroys the font.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_font_unref (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&gt;GdkFont&lt;/a&gt; *font);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_unref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_id</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-font-id</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Returns the X Font ID for the given font.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_font_id (
    const &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&gt;GdkFont&lt;/a&gt; *font);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_id&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_equal</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-font-equal</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Compares two fonts for equality. Single fonts compare equal
if they have the same X font ID. This operation does
not currently work correctly for fontsets.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_font_equal (
    const &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt; *fonta,
    const &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&gt;GdkFont&lt;/a&gt; *fontb);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_equal&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_string_extents</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-string-extents</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Gets the metrics of a nul-terminated string.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_string_extents (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *string,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *lbearing,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *rbearing,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *ascent,
    &lt;a href= &gt;gint&lt;/a&gt; *descent);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_string_extents&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_extents</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-text-extents</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Gets the metrics of a string.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_text_extents (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *text,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; text_length,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *lbearing,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *rbearing,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *ascent,
    &lt;a href= &gt;gint&lt;/a&gt; *descent);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_text_extents&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_extents_wc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-text-extents-wc</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Gets the metrics of a string of wide characters.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_text_extents_wc (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a class=&quot;gdk-Fonts.html#GdkWChar&quot; href=&quot;GdkWChar&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWChar&lt;/a&gt; *text,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; text_length,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *lbearing,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *rbearing,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *ascent,
    &lt;a href= &gt;gint&lt;/a&gt; *descent);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_text_extents_wc&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_string_width</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-string-width</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the width of a nul-terminated string.
(The distance from the origin of the string to the 
point where the next string in a sequence of strings
should be drawn)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_string_width (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a href= &gt;gchar&lt;/a&gt; *string);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_string_width&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_width</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-text-width</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the width of a given string.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_text_width (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *text,
    &lt;a href= &gt;gint&lt;/a&gt; text_length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_text_width&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_width_wc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-text-width-wc</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the width of a given wide-character string.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_text_width_wc (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a class=&quot;gdk-Fonts.html#GdkWChar&quot; href=&quot;GdkWChar&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWChar&lt;/a&gt; *text,
    &lt;a href= &gt;gint&lt;/a&gt; text_length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_text_width_wc&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_char_width</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-char-width</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the width of a given character.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_char_width (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    &lt;a href= &gt;gchar&lt;/a&gt; character);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_char_width&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-text-extents&quot; title=&quot;gdk_text_extents ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_text_extents()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_char_width_wc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-char-width-wc</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the width of a given wide character. (Encoded
in the wide-character encoding of the current locale).</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_char_width_wc (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;link&quot;&gt;GdkFont&lt;/a&gt; *font,
    &lt;a class=&quot;gdk-Fonts.html#GdkWChar&quot; href=&quot;GdkWChar&quot; title=&gt;GdkWChar&lt;/a&gt; character);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_char_width_wc&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_string_measure</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-string-measure</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the distance from the origin to the rightmost
portion of a nul-terminated string when drawn. This is not the
correct value for determining the origin of the next
portion when drawing text in multiple pieces.
See &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-string-width&quot; title=&quot;gdk_string_width ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_string_width()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_string_measure (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a href= &gt;gchar&lt;/a&gt; *string);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_string_measure&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_measure</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-text-measure</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the distance from the origin to the rightmost
portion of a string when drawn. This is not the
correct value for determining the origin of the next
portion when drawing text in multiple pieces. 
See &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-text-width&quot; title=&quot;gdk_text_width ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_text_width()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_text_measure (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *text,
    &lt;a href= &gt;gint&lt;/a&gt; text_length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_text_measure&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_char_measure</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-char-measure</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the distance from the origin to the rightmost
portion of a character when drawn. This is not the
correct value for determining the origin of the next
portion when drawing text in multiple pieces.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_char_measure (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    &lt;a href= &gt;gchar&lt;/a&gt; character);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_char_measure&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_string_height</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-string-height</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the total height of a given nul-terminated
string. This value is not generally useful, because you
cannot determine how this total height will be drawn in
relation to the baseline. See &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-string-extents&quot; title=&quot;gdk_string_extents ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_string_extents()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_string_height (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a href= &gt;gchar&lt;/a&gt; *string);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_string_height&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_height</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-text-height</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the total height of a given string.
This value is not generally useful, because you cannot
determine how this total height will be drawn in
relation to the baseline. See &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-text-extents&quot; title=&quot;gdk_text_extents ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_text_extents()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_text_height (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *text,
    &lt;a href= &gt;gint&lt;/a&gt; text_length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_text_height&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_char_height</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-char-height</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Determines the total height of a given character.
This value is not generally useful, because you cannot
determine how this total height will be drawn in
relation to the baseline. See &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-text-extents&quot; title=&quot;gdk_text_extents ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_text_extents()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_char_height (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkFont&lt;/a&gt; *font,
    &lt;a href= &gt;gchar&lt;/a&gt; character);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_char_height&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#gdk-text-extents&quot; title=&quot;gdk_text_extents ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_text_extents()&lt;/code&gt;&lt;/a&gt; instead.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWChar</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>GdkWChar</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Specifies a wide character type, used to represent character codes.
This is needed since some native languages have character sets which have
more than 256 characters (Japanese and Chinese, for example).</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef guint32 GdkWChar;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_wcstombs</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-wcstombs</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Converts a wide character string to a multi-byte string.
(The function name comes from an acronym of 'Wide Character String TO
Multi-Byte String').</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt;* gdk_wcstombs (
    const &lt;a class=&quot;gdk-Fonts.html#GdkWChar&quot; href=&quot;GdkWChar&quot; title=&gt;GdkWChar&lt;/a&gt; *src);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_wcstombs&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_mbstowcs</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Fonts.html</Path>
  <Anchor>gdk-mbstowcs</Anchor>
  <NodeRef refid="16"/>
  <Abstract type="html">Converts a multi-byte string to a wide character string.
(The function name comes from an acronym of 'Multi-Byte String TO Wide
Character String').</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_mbstowcs (
    &lt;a class=&quot;gdk-Fonts.html#GdkWChar&quot; href=&quot;GdkWChar&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkWChar&lt;/a&gt; *dest,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *src,
    &lt;a href= &gt;gint&lt;/a&gt; dest_max);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_mbstowcs&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkCursor</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursor</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">A &lt;span class=&quot;type&quot;&gt;GdkCursor&lt;/span&gt; structure represents a cursor.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkCursorType type;
} GdkCursor;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_X_CURSOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_X_CURSOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BASED_ARROW_DOWN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_BASED_ARROW_DOWN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BASED_ARROW_UP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_BASED_ARROW_UP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BOAT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_BOAT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BOGOSITY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_BOGOSITY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BOTTOM_LEFT_CORNER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_BOTTOM_LEFT_CORNER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BOTTOM_RIGHT_CORNER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_BOTTOM_RIGHT_CORNER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BOTTOM_SIDE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_BOTTOM_SIDE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BOTTOM_TEE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_BOTTOM_TEE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BOX_SPIRAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_BOX_SPIRAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CENTER_PTR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_CENTER_PTR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CIRCLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_CIRCLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CLOCK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_CLOCK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_COFFEE_MUG</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_COFFEE_MUG&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CROSS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_CROSS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CROSS_REVERSE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_CROSS_REVERSE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CROSSHAIR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_CROSSHAIR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DIAMOND_CROSS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_DIAMOND_CROSS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DOT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_DOT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DOTBOX</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_DOTBOX&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DOUBLE_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_DOUBLE_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAFT_LARGE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAFT_LARGE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAFT_SMALL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAFT_SMALL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAPED_BOX</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAPED_BOX&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_EXCHANGE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_EXCHANGE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FLEUR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_FLEUR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GOBBLER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_GOBBLER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GUMBY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_GUMBY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HAND1</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_HAND1&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HAND2</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_HAND2&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HEART</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_HEART&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ICON</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_ICON&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_IRON_CROSS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_IRON_CROSS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LEFT_PTR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_LEFT_PTR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LEFT_SIDE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_LEFT_SIDE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LEFT_TEE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_LEFT_TEE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LEFTBUTTON</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_LEFTBUTTON&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LL_ANGLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_LL_ANGLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LR_ANGLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_LR_ANGLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MAN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_MAN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MIDDLEBUTTON</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_MIDDLEBUTTON&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MOUSE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_MOUSE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PENCIL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_PENCIL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PIRATE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_PIRATE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PLUS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_PLUS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_QUESTION_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_QUESTION_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_RIGHT_PTR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_RIGHT_PTR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_RIGHT_SIDE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_RIGHT_SIDE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_RIGHT_TEE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_RIGHT_TEE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_RIGHTBUTTON</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_RIGHTBUTTON&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_RTL_LOGO</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_RTL_LOGO&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SAILBOAT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SAILBOAT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SB_DOWN_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SB_DOWN_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SB_H_DOUBLE_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SB_H_DOUBLE_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SB_LEFT_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SB_LEFT_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SB_RIGHT_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SB_RIGHT_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SB_UP_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SB_UP_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SB_V_DOUBLE_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SB_V_DOUBLE_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SHUTTLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SHUTTLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SIZING</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SIZING&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SPIDER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SPIDER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SPRAYCAN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_SPRAYCAN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_STAR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_STAR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TARGET</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_TARGET&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TCROSS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_TCROSS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TOP_LEFT_ARROW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_TOP_LEFT_ARROW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TOP_LEFT_CORNER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_TOP_LEFT_CORNER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TOP_RIGHT_CORNER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_TOP_RIGHT_CORNER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TOP_SIDE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_TOP_SIDE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TOP_TEE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_TOP_TEE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TREK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_TREK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_UL_ANGLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_UL_ANGLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_UMBRELLA</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_UMBRELLA&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_UR_ANGLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_UR_ANGLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WATCH</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_WATCH&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_XTERM</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_XTERM&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LAST_CURSOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_LAST_CURSOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CURSOR_IS_PIXMAP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="400"/>
  <Declaration type="html">&lt;pre&gt;GDK_CURSOR_IS_PIXMAP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCursorType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkCursorType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>GdkCursorType</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">The standard cursors available.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_X_CURSOR = 0,
    GDK_ARROW = 2,
    GDK_BASED_ARROW_DOWN = 4,
    GDK_BASED_ARROW_UP = 6,
    GDK_BOAT = 8,
    GDK_BOGOSITY = 10,
    GDK_BOTTOM_LEFT_CORNER = 12,
    GDK_BOTTOM_RIGHT_CORNER = 14,
    GDK_BOTTOM_SIDE = 16,
    GDK_BOTTOM_TEE = 18,
    GDK_BOX_SPIRAL = 20,
    GDK_CENTER_PTR = 22,
    GDK_CIRCLE = 24,
    GDK_CLOCK = 26,
    GDK_COFFEE_MUG = 28,
    GDK_CROSS = 30,
    GDK_CROSS_REVERSE = 32,
    GDK_CROSSHAIR = 34,
    GDK_DIAMOND_CROSS = 36,
    GDK_DOT = 38,
    GDK_DOTBOX = 40,
    GDK_DOUBLE_ARROW = 42,
    GDK_DRAFT_LARGE = 44,
    GDK_DRAFT_SMALL = 46,
    GDK_DRAPED_BOX = 48,
    GDK_EXCHANGE = 50,
    GDK_FLEUR = 52,
    GDK_GOBBLER = 54,
    GDK_GUMBY = 56,
    GDK_HAND1 = 58,
    GDK_HAND2 = 60,
    GDK_HEART = 62,
    GDK_ICON = 64,
    GDK_IRON_CROSS = 66,
    GDK_LEFT_PTR = 68,
    GDK_LEFT_SIDE = 70,
    GDK_LEFT_TEE = 72,
    GDK_LEFTBUTTON = 74,
    GDK_LL_ANGLE = 76,
    GDK_LR_ANGLE = 78,
    GDK_MAN = 80,
    GDK_MIDDLEBUTTON = 82,
    GDK_MOUSE = 84,
    GDK_PENCIL = 86,
    GDK_PIRATE = 88,
    GDK_PLUS = 90,
    GDK_QUESTION_ARROW = 92,
    GDK_RIGHT_PTR = 94,
    GDK_RIGHT_SIDE = 96,
    GDK_RIGHT_TEE = 98,
    GDK_RIGHTBUTTON = 100,
    GDK_RTL_LOGO = 102,
    GDK_SAILBOAT = 104,
    GDK_SB_DOWN_ARROW = 106,
    GDK_SB_H_DOUBLE_ARROW = 108,
    GDK_SB_LEFT_ARROW = 110,
    GDK_SB_RIGHT_ARROW = 112,
    GDK_SB_UP_ARROW = 114,
    GDK_SB_V_DOUBLE_ARROW = 116,
    GDK_SHUTTLE = 118,
    GDK_SIZING = 120,
    GDK_SPIDER = 122,
    GDK_SPRAYCAN = 124,
    GDK_STAR = 126,
    GDK_TARGET = 128,
    GDK_TCROSS = 130,
    GDK_TOP_LEFT_ARROW = 132,
    GDK_TOP_LEFT_CORNER = 134,
    GDK_TOP_RIGHT_CORNER = 136,
    GDK_TOP_SIDE = 138,
    GDK_TOP_TEE = 140,
    GDK_TREK = 142,
    GDK_UL_ANGLE = 144,
    GDK_UMBRELLA = 146,
    GDK_UR_ANGLE = 148,
    GDK_WATCH = 150,
    GDK_XTERM = 152,
    GDK_LAST_CURSOR,
    GDK_CURSOR_IS_PIXMAP = -1 
} GdkCursorType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-new</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Creates a new cursor from the set of builtin cursors for the default display.
See &lt;a class=&quot;link&quot; href=&quot;gdk-Cursors.html#gdk-cursor-new-for-display&quot; title=&quot;gdk_cursor_new_for_display ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_cursor_new_for_display()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&quot;link&quot;&gt;GdkCursor&lt;/a&gt;* gdk_cursor_new (
    &lt;a class=&quot;gdk-Cursors.html#GdkCursorType&quot; href=&quot;enum GdkCursorType&quot; title=&gt;GdkCursorType&lt;/a&gt; cursor_type);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_new_from_pixmap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-new-from-pixmap</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Creates a new cursor from a given pixmap and mask. Both the pixmap and mask
must have a depth of 1 (i.e. each pixel has only 2 values - on or off).
The standard cursor size is 16 by 16 pixels. You can create a bitmap 
from inline data as in the below example.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&quot;link&quot;&gt;GdkCursor&lt;/a&gt;* gdk_cursor_new_from_pixmap (
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt; *source,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt; *mask,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;link&quot;&gt;GdkColor&lt;/a&gt; *fg,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkColor&lt;/a&gt; *bg,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_new_from_pixbuf</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-new-from-pixbuf</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Creates a new cursor from a pixbuf. </Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&quot;link&quot;&gt;GdkCursor&lt;/a&gt;* gdk_cursor_new_from_pixbuf (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbuf&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;GdkPixbuf&lt;/a&gt; *pixbuf,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_new_from_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-new-from-name</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Creates a new cursor by looking up &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/em&gt; in the current cursor
theme.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&quot;link&quot;&gt;GdkCursor&lt;/a&gt;* gdk_cursor_new_from_name (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    const &lt;a href= &gt;gchar&lt;/a&gt; *name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_new_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-new-for-display</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Creates a new cursor from the set of builtin cursors.
Some useful ones are:</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&quot;link&quot;&gt;GdkCursor&lt;/a&gt;* gdk_cursor_new_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Cursors.html#GdkCursorType&quot; href=&quot;enum GdkCursorType&quot; title=&gt;GdkCursorType&lt;/a&gt; cursor_type);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_get_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-get-display</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Returns the display on which the &lt;a class=&quot;link&quot; href=&quot;gdk-Cursors.html#GdkCursor&quot; title=&quot;GdkCursor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkCursor&lt;/span&gt;&lt;/a&gt; is defined.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt;* gdk_cursor_get_display (
    &lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&gt;GdkCursor&lt;/a&gt; *cursor);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_get_image</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-get-image</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Returns a &lt;a
href=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbuf&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GdkPixbuf&lt;/span&gt;&lt;/a&gt; with the image used to display the cursor.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;GdkPixbuf&lt;/a&gt;* gdk_cursor_get_image (
    &lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&gt;GdkCursor&lt;/a&gt; *cursor);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_ref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-ref</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Adds a reference to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;cursor&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&quot;link&quot;&gt;GdkCursor&lt;/a&gt;* gdk_cursor_ref (
    &lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&gt;GdkCursor&lt;/a&gt; *cursor);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_unref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-unref</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Removes a reference from &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;cursor&lt;/code&gt;&lt;/em&gt;, deallocating the cursor
if no references remain.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_cursor_unref (
    &lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&gt;GdkCursor&lt;/a&gt; *cursor);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cursor_destroy</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cursors.html</Path>
  <Anchor>gdk-cursor-destroy</Anchor>
  <NodeRef refid="17"/>
  <Abstract type="html">Destroys a cursor, freeing any resources allocated for it.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_cursor_destroy gdk_cursor_unref&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_cursor_destroy&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWindow</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindow-struct</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">An opaque structure representing an onscreen drawable.
Pointers to structures of type &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt;, &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; title=&quot;GdkBitmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkBitmap&lt;/span&gt;&lt;/a&gt;,
and &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;, can often be used interchangeably.
The type &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt; refers generically to any of
these types.</Abstract>
  <Declaration type="html">&lt;pre&gt;struct GdkWindow;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_ROOT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowType</Anchor>
  <NodeRef refid="412"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_ROOT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TOPLEVEL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowType</Anchor>
  <NodeRef refid="412"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TOPLEVEL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_CHILD</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowType</Anchor>
  <NodeRef refid="412"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_CHILD&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_DIALOG</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowType</Anchor>
  <NodeRef refid="412"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_DIALOG&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TEMP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowType</Anchor>
  <NodeRef refid="412"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TEMP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_FOREIGN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowType</Anchor>
  <NodeRef refid="412"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_FOREIGN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWindowType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowType</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Describes the kind of window.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_WINDOW_ROOT,
    GDK_WINDOW_TOPLEVEL,
    GDK_WINDOW_CHILD,
    GDK_WINDOW_DIALOG,
    GDK_WINDOW_TEMP,
    GDK_WINDOW_FOREIGN 
} GdkWindowType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_INPUT_OUTPUT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowClass</Anchor>
  <NodeRef refid="413"/>
  <Declaration type="html">&lt;pre&gt;GDK_INPUT_OUTPUT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowClass</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_INPUT_ONLY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowClass</Anchor>
  <NodeRef refid="413"/>
  <Declaration type="html">&lt;pre&gt;GDK_INPUT_ONLY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowClass</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWindowClass</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowClass</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_INPUT_OUTPUT&lt;/code&gt;&lt;/em&gt; windows are the standard kind of window you might expect. 
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_INPUT_ONLY&lt;/code&gt;&lt;/em&gt; windows are invisible; they are used to trap events, but 
you can't draw on them.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_INPUT_OUTPUT,
    GDK_INPUT_ONLY 
} GdkWindowClass;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HINT_POS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="414"/>
  <Declaration type="html">&lt;pre&gt;GDK_HINT_POS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowHints</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HINT_MIN_SIZE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="414"/>
  <Declaration type="html">&lt;pre&gt;GDK_HINT_MIN_SIZE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowHints</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HINT_MAX_SIZE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="414"/>
  <Declaration type="html">&lt;pre&gt;GDK_HINT_MAX_SIZE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowHints</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HINT_BASE_SIZE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="414"/>
  <Declaration type="html">&lt;pre&gt;GDK_HINT_BASE_SIZE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowHints</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HINT_ASPECT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="414"/>
  <Declaration type="html">&lt;pre&gt;GDK_HINT_ASPECT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowHints</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HINT_RESIZE_INC</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="414"/>
  <Declaration type="html">&lt;pre&gt;GDK_HINT_RESIZE_INC&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowHints</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HINT_WIN_GRAVITY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="414"/>
  <Declaration type="html">&lt;pre&gt;GDK_HINT_WIN_GRAVITY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowHints</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HINT_USER_POS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="414"/>
  <Declaration type="html">&lt;pre&gt;GDK_HINT_USER_POS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowHints</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HINT_USER_SIZE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="414"/>
  <Declaration type="html">&lt;pre&gt;GDK_HINT_USER_SIZE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowHints</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWindowHints</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowHints</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Used to indicate which fields of a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkGeometry&quot; title=&quot;GdkGeometry&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGeometry&lt;/span&gt;&lt;/a&gt; struct should be paid attention
to. Also, the presence/absence of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_HINT_POS&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_HINT_USER_POS&lt;/code&gt;&lt;/em&gt;, and
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_HINT_USER_SIZE&lt;/code&gt;&lt;/em&gt; is significant, though they don't directly refer to
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkGeometry&quot; title=&quot;GdkGeometry&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGeometry&lt;/span&gt;&lt;/a&gt; fields.  &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_HINT_USER_POS&lt;/code&gt;&lt;/em&gt; will be set automatically by &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWindow&lt;/span&gt;&lt;/a&gt;
if you call &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-move&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_move()&lt;/code&gt;&lt;/a&gt;. &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_HINT_USER_POS&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_HINT_USER_SIZE&lt;/code&gt;&lt;/em&gt; 
should be set if the user specified a size/position using a --geometry 
command-line argument; &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-parse-geometry&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_parse_geometry()&lt;/code&gt;&lt;/a&gt; automatically sets these
flags.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_HINT_POS = 1 &amp;lt;&amp;lt; 0,
    GDK_HINT_MIN_SIZE = 1 &amp;lt;&amp;lt; 1,
    GDK_HINT_MAX_SIZE = 1 &amp;lt;&amp;lt; 2,
    GDK_HINT_BASE_SIZE = 1 &amp;lt;&amp;lt; 3,
    GDK_HINT_ASPECT = 1 &amp;lt;&amp;lt; 4,
    GDK_HINT_RESIZE_INC = 1 &amp;lt;&amp;lt; 5,
    GDK_HINT_WIN_GRAVITY = 1 &amp;lt;&amp;lt; 6,
    GDK_HINT_USER_POS = 1 &amp;lt;&amp;lt; 7,
    GDK_HINT_USER_SIZE = 1 &amp;lt;&amp;lt; 8 
} GdkWindowHints;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkGeometry</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGeometry</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkGeometry&quot; title=&quot;GdkGeometry&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGeometry&lt;/span&gt;&lt;/a&gt; struct gives the window manager information about 
a window's geometry constraints. Normally you would set these on 
the GTK+ level using &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-set-geometry-hints&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_set_geometry_hints()&lt;/code&gt;&lt;/a&gt;. &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWindow&lt;/span&gt;&lt;/a&gt; 
then sets the hints on the &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; it creates.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    gint min_width;
    gint min_height;
    gint max_width;
    gint max_height;
    gint base_width;
    gint base_height;
    gint width_inc;
    gint height_inc;
    gdouble min_aspect;
    gdouble max_aspect;
    GdkGravity win_gravity;
} GdkGeometry;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_NORTH_WEST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_NORTH_WEST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_NORTH</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_NORTH&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_NORTH_EAST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_NORTH_EAST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_WEST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_WEST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_CENTER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_CENTER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_EAST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_EAST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_SOUTH_WEST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_SOUTH_WEST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_SOUTH</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_SOUTH&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_SOUTH_EAST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_SOUTH_EAST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAVITY_STATIC</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="416"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAVITY_STATIC&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkGravity</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkGravity</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkGravity</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Defines the reference point of a window and the meaning of coordinates
passed to &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-move&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_move()&lt;/code&gt;&lt;/a&gt;. See &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-move&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_move()&lt;/code&gt;&lt;/a&gt; and the &quot;implementation 
notes&quot; section of the 
&lt;a class=&quot;ulink&quot; href=&quot;http://www.freedesktop.org/Standards/wm-spec&quot; target=&quot;_top&quot;&gt;Extended 
Window Manager Hints&lt;/a&gt; specification for more details.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_GRAVITY_NORTH_WEST = 1,
    GDK_GRAVITY_NORTH,
    GDK_GRAVITY_NORTH_EAST,
    GDK_GRAVITY_WEST,
    GDK_GRAVITY_CENTER,
    GDK_GRAVITY_EAST,
    GDK_GRAVITY_SOUTH_WEST,
    GDK_GRAVITY_SOUTH,
    GDK_GRAVITY_SOUTH_EAST,
    GDK_GRAVITY_STATIC 
} GdkGravity;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_EDGE_NORTH_WEST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowEdge</Anchor>
  <NodeRef refid="417"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_EDGE_NORTH_WEST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowEdge</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_EDGE_NORTH</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowEdge</Anchor>
  <NodeRef refid="417"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_EDGE_NORTH&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowEdge</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_EDGE_NORTH_EAST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowEdge</Anchor>
  <NodeRef refid="417"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_EDGE_NORTH_EAST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowEdge</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_EDGE_WEST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowEdge</Anchor>
  <NodeRef refid="417"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_EDGE_WEST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowEdge</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_EDGE_EAST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowEdge</Anchor>
  <NodeRef refid="417"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_EDGE_EAST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowEdge</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_EDGE_SOUTH_WEST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowEdge</Anchor>
  <NodeRef refid="417"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_EDGE_SOUTH_WEST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowEdge</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_EDGE_SOUTH</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowEdge</Anchor>
  <NodeRef refid="417"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_EDGE_SOUTH&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowEdge</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_EDGE_SOUTH_EAST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowEdge</Anchor>
  <NodeRef refid="417"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_EDGE_SOUTH_EAST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowEdge</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWindowEdge</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowEdge</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Determines a window edge or corner. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_WINDOW_EDGE_NORTH_WEST,
    GDK_WINDOW_EDGE_NORTH,
    GDK_WINDOW_EDGE_NORTH_EAST,
    GDK_WINDOW_EDGE_WEST,
    GDK_WINDOW_EDGE_EAST,
    GDK_WINDOW_EDGE_SOUTH_WEST,
    GDK_WINDOW_EDGE_SOUTH,
    GDK_WINDOW_EDGE_SOUTH_EAST 
} GdkWindowEdge;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_NORMAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_NORMAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_DIALOG</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_DIALOG&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_MENU</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_MENU&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_TOOLBAR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_TOOLBAR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_SPLASHSCREEN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_SPLASHSCREEN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_UTILITY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_UTILITY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_DOCK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_DOCK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_DESKTOP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_DESKTOP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_POPUP_MENU</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_POPUP_MENU&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_TOOLTIP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_TOOLTIP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_NOTIFICATION</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_NOTIFICATION&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_COMBO</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_COMBO&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_TYPE_HINT_DND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="418"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_TYPE_HINT_DND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowTypeHint</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWindowTypeHint</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowTypeHint</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">These are hints for the window manager that indicate what type of function 
the window has. The window manager can use this when determining decoration 
and behaviour of the window. The hint must be set before mapping the window.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_WINDOW_TYPE_HINT_NORMAL,
    GDK_WINDOW_TYPE_HINT_DIALOG,
    GDK_WINDOW_TYPE_HINT_MENU,
    GDK_WINDOW_TYPE_HINT_TOOLBAR,
    GDK_WINDOW_TYPE_HINT_SPLASHSCREEN,
    GDK_WINDOW_TYPE_HINT_UTILITY,
    GDK_WINDOW_TYPE_HINT_DOCK,
    GDK_WINDOW_TYPE_HINT_DESKTOP,
    GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU,
    GDK_WINDOW_TYPE_HINT_POPUP_MENU,
    GDK_WINDOW_TYPE_HINT_TOOLTIP,
    GDK_WINDOW_TYPE_HINT_NOTIFICATION,
    GDK_WINDOW_TYPE_HINT_COMBO,
    GDK_WINDOW_TYPE_HINT_DND 
} GdkWindowTypeHint;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWindowAttr</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttr</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Attributes to use for a newly-created window.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    gchar *title;
    gint event_mask;
    gint x, y;
    gint width;
    gint height;
    GdkWindowClass wclass;
    GdkVisual *visual;
    GdkColormap *colormap;
    GdkWindowType window_type;
    GdkCursor *cursor;
    gchar *wmclass_name;
    gchar *wmclass_class;
    gboolean override_redirect;
    GdkWindowTypeHint type_hint;
} GdkWindowAttr;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WA_TITLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="420"/>
  <Declaration type="html">&lt;pre&gt;GDK_WA_TITLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowAttributesType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WA_X</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="420"/>
  <Declaration type="html">&lt;pre&gt;GDK_WA_X&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowAttributesType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WA_Y</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="420"/>
  <Declaration type="html">&lt;pre&gt;GDK_WA_Y&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowAttributesType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WA_CURSOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="420"/>
  <Declaration type="html">&lt;pre&gt;GDK_WA_CURSOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowAttributesType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WA_COLORMAP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="420"/>
  <Declaration type="html">&lt;pre&gt;GDK_WA_COLORMAP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowAttributesType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WA_VISUAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="420"/>
  <Declaration type="html">&lt;pre&gt;GDK_WA_VISUAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowAttributesType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WA_WMCLASS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="420"/>
  <Declaration type="html">&lt;pre&gt;GDK_WA_WMCLASS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowAttributesType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WA_NOREDIR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="420"/>
  <Declaration type="html">&lt;pre&gt;GDK_WA_NOREDIR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowAttributesType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WA_TYPE_HINT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="420"/>
  <Declaration type="html">&lt;pre&gt;GDK_WA_TYPE_HINT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowAttributesType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWindowAttributesType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWindowAttributesType</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Used to indicate which fields in the &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindowAttr&quot; title=&quot;GdkWindowAttr&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindowAttr&lt;/span&gt;&lt;/a&gt; struct should be
honored. For example, if you filled in the &quot;cursor&quot; and &quot;x&quot; fields of
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindowAttr&quot; title=&quot;GdkWindowAttr&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindowAttr&lt;/span&gt;&lt;/a&gt;, pass &quot;&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_WA_X&lt;/code&gt;&lt;/em&gt; | &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;GDK_WA_CURSOR&lt;/code&gt;&lt;/em&gt;&quot; to &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-new&quot; title=&quot;gdk_window_new ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_new()&lt;/code&gt;&lt;/a&gt;.  Fields
in &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindowAttr&quot; title=&quot;GdkWindowAttr&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindowAttr&lt;/span&gt;&lt;/a&gt; not covered by a bit in this enum are required; for example,
the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/em&gt;/&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;wclass&lt;/code&gt;&lt;/em&gt;, and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window_type&lt;/code&gt;&lt;/em&gt; fields are required, they have no
corresponding flag in &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindowAttributesType&quot; title=&quot;enum GdkWindowAttributesType&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindowAttributesType&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_WA_TITLE = 1 &amp;lt;&amp;lt; 1,
    GDK_WA_X = 1 &amp;lt;&amp;lt; 2,
    GDK_WA_Y = 1 &amp;lt;&amp;lt; 3,
    GDK_WA_CURSOR = 1 &amp;lt;&amp;lt; 4,
    GDK_WA_COLORMAP = 1 &amp;lt;&amp;lt; 5,
    GDK_WA_VISUAL = 1 &amp;lt;&amp;lt; 6,
    GDK_WA_WMCLASS = 1 &amp;lt;&amp;lt; 7,
    GDK_WA_NOREDIR = 1 &amp;lt;&amp;lt; 8,
    GDK_WA_TYPE_HINT = 1 &amp;lt;&amp;lt; 9 
} GdkWindowAttributesType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-new</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Creates a new &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; using the attributes from
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;attributes&lt;/code&gt;&lt;/em&gt;. See &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindowAttr&quot; title=&quot;GdkWindowAttr&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindowAttr&lt;/span&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindowAttributesType&quot; title=&quot;enum GdkWindowAttributesType&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindowAttributesType&lt;/span&gt;&lt;/a&gt; for
more details.  Note: to use this on displays other than the default
display, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/em&gt; must be specified.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_new (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *parent,
    &lt;a class=&quot;gdk-Windows.html#GdkWindowAttr&quot; href=&quot;GdkWindowAttr&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindowAttr&lt;/a&gt; *attributes,
    &lt;a href= &gt;gint&lt;/a&gt; attributes_mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_destroy</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-destroy</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Destroys the window system resources associated with &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; and decrements &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;'s
reference count. The window system resources for all children of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; are also
destroyed, but the children's reference counts are not decremented.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_destroy (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_ref</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-ref</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Deprecated equivalent of &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt;</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_window_ref gdk_drawable_ref&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_unref</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-unref</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Deprecated equivalent of &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-unref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_unref()&lt;/code&gt;&lt;/a&gt;</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_window_unref gdk_drawable_unref&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_unref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_window_type</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-window-type</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Gets the type of the window. See &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindowType&quot; title=&quot;enum GdkWindowType&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindowType&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindowType&quot; href=&quot;enum GdkWindowType&quot; title=&quot;link&quot;&gt;GdkWindowType&lt;/a&gt; gdk_window_get_window_type (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_at_pointer</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-at-pointer</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Obtains the window underneath the mouse pointer, returning the
location of that window in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;win_x&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;win_y&lt;/code&gt;&lt;/em&gt;. Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; if the
window under the mouse pointer is not known to GDK (if the window
belongs to another application and a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; hasn't been created
for it with &lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#gdk-window-foreign-new&quot; title=&quot;gdk_window_foreign_new ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_foreign_new()&lt;/code&gt;&lt;/a&gt;)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_at_pointer (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *win_x,
    &lt;a href= &gt;gint&lt;/a&gt; *win_y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_show</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-show</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Like &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-show-unraised&quot; title=&quot;gdk_window_show_unraised ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_show_unraised()&lt;/code&gt;&lt;/a&gt;, but also raises the window to the
top of the window stack (moves the window to the front of the
Z-order).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_show (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_show_unraised</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-show-unraised</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Shows a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; onscreen, but does not modify its stacking
order. In contrast, &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-show&quot; title=&quot;gdk_window_show ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_show()&lt;/code&gt;&lt;/a&gt; will raise the window
to the top of the window stack.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_show_unraised (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_hide</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-hide</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">For toplevel windows, withdraws them, so they will no longer be
known to the window manager; for all windows, unmaps them, so
they won't be displayed. Normally done automatically as
part of &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWidget.html#gtk-widget-hide&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_widget_hide()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_hide (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_is_visible</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-is-visible</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Checks whether the window has been mapped (with &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-show&quot; title=&quot;gdk_window_show ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_show()&lt;/code&gt;&lt;/a&gt; or
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-show-unraised&quot; title=&quot;gdk_window_show_unraised ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_show_unraised()&lt;/code&gt;&lt;/a&gt;).</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_window_is_visible (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_is_viewable</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-is-viewable</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Check if the window and all ancestors of the window are
mapped. (This is not necessarily &quot;viewable&quot; in the X sense, since
we only check as far as we have GDK window parents, not to the root
window.)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_window_is_viewable (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_state</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-state</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Gets the bitwise OR of the currently active window state flags,
from the &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkWindowState&quot; title=&quot;enum GdkWindowState&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindowState&lt;/span&gt;&lt;/a&gt; enumeration.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkWindowState&quot; href=&quot;enum GdkWindowState&quot; title=&quot;link&quot;&gt;GdkWindowState&lt;/a&gt; gdk_window_get_state (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_withdraw</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-withdraw</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Withdraws a window (unmaps it and asks the window manager to forget about it).
This function is not really useful as &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-hide&quot; title=&quot;gdk_window_hide ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_hide()&lt;/code&gt;&lt;/a&gt; automatically
withdraws toplevel windows before hiding them.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_withdraw (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_iconify</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-iconify</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Asks to iconify (minimize) &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. The window manager may choose
to ignore the request, but normally will honor it. Using
&lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-iconify&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_iconify()&lt;/code&gt;&lt;/a&gt; is preferred, if you have a &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWindow&lt;/span&gt;&lt;/a&gt; widget.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_iconify (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_deiconify</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-deiconify</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Attempt to deiconify (unminimize) &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. On X11 the window manager may
choose to ignore the request to deiconify. When using GTK+,
use &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-deiconify&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_deiconify()&lt;/code&gt;&lt;/a&gt; instead of the &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; variant. Or better yet,
you probably want to use &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-present&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_present()&lt;/code&gt;&lt;/a&gt;, which raises the window, focuses it,
unminimizes it, and puts it on the current desktop.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_deiconify (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_stick</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-stick</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">&quot;Pins&quot; a window such that it's on all workspaces and does not scroll
with viewports, for window managers that have scrollable viewports.
(When using &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWindow&lt;/span&gt;&lt;/a&gt;, &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-stick&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_stick()&lt;/code&gt;&lt;/a&gt; may be more useful.)</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_stick (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_unstick</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-unstick</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Reverse operation for &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-stick&quot; title=&quot;gdk_window_stick ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_stick()&lt;/code&gt;&lt;/a&gt;; see &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-stick&quot; title=&quot;gdk_window_stick ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_stick()&lt;/code&gt;&lt;/a&gt;,
and &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-unstick&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_unstick()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_unstick (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_maximize</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-maximize</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Maximizes the window. If the window was already maximized, then
this function does nothing.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_maximize (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_unmaximize</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-unmaximize</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Unmaximizes the window. If the window wasn't maximized, then this
function does nothing.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_unmaximize (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_fullscreen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-fullscreen</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Moves the window into fullscreen mode. This means the
window covers the entire screen and is above any panels
or task bars.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_fullscreen (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_unfullscreen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-unfullscreen</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Moves the window out of fullscreen mode. If the window was not
fullscreen, does nothing.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_unfullscreen (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_keep_above</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-keep-above</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Set if &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; must be kept above other windows. If the
window was already above, then this function does nothing.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_keep_above (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; setting);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_keep_below</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-keep-below</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Set if &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; must be kept below other windows. If the
window was already below, then this function does nothing.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_keep_below (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; setting);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_opacity</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-opacity</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Request the windowing system to make &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; partially transparent,
with opacity 0 being fully transparent and 1 fully opaque. (Values
of the opacity parameter are clamped to the [0,1] range.) </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_opacity (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gdouble&lt;/a&gt; opacity);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_composited</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-composited</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; as composited, or unsets it. Composited 
windows do not automatically have their contents drawn to 
the screen. Drawing is redirected to an offscreen buffer 
and an expose event is emitted on the parent of the composited 
window. It is the responsibility of the parent's expose handler
to manually merge the off-screen content onto the screen in
whatever way it sees fit. See &lt;a class=&quot;xref&quot; href=&quot;gdk-Windows.html#composited-window-example&quot; title=&quot;Example?7.?Composited windows&quot;&gt;Example?7, ?Composited windows?&lt;/a&gt;
for an example.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_composited (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; composited);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_move</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-move</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Repositions a window relative to its parent window.
For toplevel windows, window managers may ignore or modify the move;
you should probably use &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-move&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_move()&lt;/code&gt;&lt;/a&gt; on a &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWindow&lt;/span&gt;&lt;/a&gt; widget
anyway, instead of using GDK functions. For child windows,
the move will reliably succeed.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_move (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_resize</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-resize</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Resizes &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;; for toplevel windows, asks the window manager to resize
the window. The window manager may not allow the resize. When using GTK+,
use &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-resize&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_resize()&lt;/code&gt;&lt;/a&gt; instead of this low-level GDK function.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_resize (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_move_resize</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-move-resize</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Equivalent to calling &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-move&quot; title=&quot;gdk_window_move ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_move()&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-resize&quot; title=&quot;gdk_window_resize ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_resize()&lt;/code&gt;&lt;/a&gt;,
except that both operations are performed at once, avoiding strange
visual effects. (i.e. the user may be able to see the window first
move, then resize, if you don't use &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-move-resize&quot; title=&quot;gdk_window_move_resize ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_move_resize()&lt;/code&gt;&lt;/a&gt;.)</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_move_resize (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_scroll</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-scroll</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Scroll the contents of its window, both pixels and children, by
the given amount. Portions of the window that the scroll operation
brings in from offscreen areas are invalidated.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_scroll (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dx,
    &lt;a href= &gt;gint&lt;/a&gt; dy);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_move_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-move-region</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Move the part of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; indicated by &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; by &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;dy&lt;/code&gt;&lt;/em&gt; pixels in the Y 
direction and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;dx&lt;/code&gt;&lt;/em&gt; pixels in the X direction. The portions of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; 
that not covered by the new position of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; are invalidated.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_move_region (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkRegion&lt;/a&gt; *region,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dx,
    &lt;a href= &gt;gint&lt;/a&gt; dy);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_reparent</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-reparent</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Reparents &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; into the given &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;new_parent&lt;/code&gt;&lt;/em&gt;. The window being
reparented will be unmapped as a side effect.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_reparent (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *new_parent,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_clear</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-clear</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Clears an entire &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; to the background color or background pixmap.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_clear (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_clear_area</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-clear-area</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Clears an area of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; to the background color or background pixmap.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_clear_area (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_clear_area_e</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-clear-area-e</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Like &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-clear-area&quot; title=&quot;gdk_window_clear_area ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_clear_area()&lt;/code&gt;&lt;/a&gt;, but also generates an expose event for
the cleared area.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_clear_area_e (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_copy_area</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-copy-area</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Deprecated equivalent to &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-drawable&quot; title=&quot;gdk_draw_drawable ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_drawable()&lt;/code&gt;&lt;/a&gt;, see that function for docs</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_window_copy_area(drawable,gc,x,y,source_drawable,source_x,source_y,width,height)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_copy_area&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_raise</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-raise</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Raises &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; to the top of the Z-order (stacking order), so that
other windows with the same parent window appear below &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;.
This is true whether or not the windows are visible.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_raise (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_lower</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-lower</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Lowers &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; to the bottom of the Z-order (stacking order), so that
other windows with the same parent window appear above &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;.
This is true whether or not the other windows are visible.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_lower (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_focus</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-focus</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets keyboard focus to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. In most cases, &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-present&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_present()&lt;/code&gt;&lt;/a&gt; 
should be used on a &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWindow&lt;/span&gt;&lt;/a&gt;, rather than calling this function.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_focus (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window,
    guint32 timestamp);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_register_dnd</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-register-dnd</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Registers a window as a potential drop destination.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_register_dnd (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_begin_resize_drag</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-begin-resize-drag</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Begins a window resize operation (for a toplevel window).
You might use this function to implement a &quot;window resize grip,&quot; for
example; in fact &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkStatusbar.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkStatusbar&lt;/span&gt;&lt;/a&gt; uses it. The function works best
with window managers that support the &lt;a class=&quot;ulink&quot; href=&quot;http://www.freedesktop.org/Standards/wm-spec&quot; target=&quot;_top&quot;&gt;Extended Window Manager Hints&lt;/a&gt;, but has a 
fallback implementation for other window managers.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_begin_resize_drag (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkWindowEdge&quot; href=&quot;enum GdkWindowEdge&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindowEdge&lt;/a&gt; edge,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; button,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; root_x,
    &lt;a href= &gt;gint&lt;/a&gt; root_y,
    guint32 timestamp);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_begin_move_drag</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-begin-move-drag</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Begins a window move operation (for a toplevel window).  You might
use this function to implement a &quot;window move grip,&quot; for
example. The function works best with window managers that support
the &lt;a class=&quot;ulink&quot; href=&quot;http://www.freedesktop.org/Standards/wm-spec&quot; target=&quot;_top&quot;&gt;Extended 
Window Manager Hints&lt;/a&gt;, but has a fallback implementation for
other window managers.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_begin_move_drag (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; button,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; root_x,
    &lt;a href= &gt;gint&lt;/a&gt; root_y,
    guint32 timestamp);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_constrain_size</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-constrain-size</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Constrains a desired width and height according to a 
set of geometry hints (such as minimum and maximum size).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_constrain_size (
    &lt;a class=&quot;gdk-Windows.html#GdkGeometry&quot; href=&quot;GdkGeometry&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkGeometry&lt;/a&gt; *geometry,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guint&lt;/a&gt; flags,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; height,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *new_width,
    &lt;a href= &gt;gint&lt;/a&gt; *new_height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_beep</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-beep</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Emits a short beep associated to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; in the appropriate
display, if supported. Otherwise, emits a short beep on
the display just as &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-beep&quot; title=&quot;gdk_display_beep ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_beep()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_beep (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_begin_paint_rect</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-begin-paint-rect</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">A convenience wrapper around &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-begin-paint-region&quot; title=&quot;gdk_window_begin_paint_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_begin_paint_region()&lt;/code&gt;&lt;/a&gt; which
creates a rectangular region for you. See
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-begin-paint-region&quot; title=&quot;gdk_window_begin_paint_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_begin_paint_region()&lt;/code&gt;&lt;/a&gt; for details.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_begin_paint_rect (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *rectangle);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_begin_paint_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-begin-paint-region</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Indicates that you are beginning the process of redrawing &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt;.
A backing store (offscreen buffer) large enough to contain &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt;
will be created. The backing store will be initialized with the
background color or background pixmap for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. Then, all
drawing operations performed on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; will be diverted to the
backing store.  When you call &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-end-paint&quot; title=&quot;gdk_window_end_paint ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_end_paint()&lt;/code&gt;&lt;/a&gt;, the backing
store will be copied to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;, making it visible onscreen. Only
the part of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; contained in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; will be modified; that is,
drawing operations are clipped to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_begin_paint_region (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *region);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_end_paint</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-end-paint</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Indicates that the backing store created by the most recent call to
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-begin-paint-region&quot; title=&quot;gdk_window_begin_paint_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_begin_paint_region()&lt;/code&gt;&lt;/a&gt; should be copied onscreen and
deleted, leaving the next-most-recent backing store or no backing
store at all as the active paint region. See
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-begin-paint-region&quot; title=&quot;gdk_window_begin_paint_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_begin_paint_region()&lt;/code&gt;&lt;/a&gt; for full details. It is an error to
call this function without a matching
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-begin-paint-region&quot; title=&quot;gdk_window_begin_paint_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_begin_paint_region()&lt;/code&gt;&lt;/a&gt; first.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_end_paint (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_invalidate_rect</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-invalidate-rect</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">A convenience wrapper around &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-invalidate-region&quot; title=&quot;gdk_window_invalidate_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_invalidate_region()&lt;/code&gt;&lt;/a&gt; which
invalidates a rectangular region. See
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-invalidate-region&quot; title=&quot;gdk_window_invalidate_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_invalidate_region()&lt;/code&gt;&lt;/a&gt; for details.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_invalidate_rect (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkRectangle&lt;/a&gt; *rect,
    &lt;a href= &gt;gboolean&lt;/a&gt; invalidate_children);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_invalidate_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-invalidate-region</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Adds &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; to the update area for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. The update area is the
region that needs to be redrawn, or &quot;dirty region.&quot; The call
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-process-updates&quot; title=&quot;gdk_window_process_updates ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_process_updates()&lt;/code&gt;&lt;/a&gt; sends one or more expose events to the
window, which together cover the entire update area. An
application would normally redraw the contents of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; in
response to those expose events.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_invalidate_region (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkRegion&lt;/a&gt; *region,
    &lt;a href= &gt;gboolean&lt;/a&gt; invalidate_children);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_invalidate_maybe_recurse</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-invalidate-maybe-recurse</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Adds &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;region&lt;/code&gt;&lt;/em&gt; to the update area for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. The update area is the
region that needs to be redrawn, or &quot;dirty region.&quot; The call
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-process-updates&quot; title=&quot;gdk_window_process_updates ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_process_updates()&lt;/code&gt;&lt;/a&gt; sends one or more expose events to the
window, which together cover the entire update area. An
application would normally redraw the contents of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; in
response to those expose events.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_invalidate_maybe_recurse (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkRegion&lt;/a&gt; *region,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;gboolean&lt;/a&gt; (
    child_funcGdkWindow *,
    gpointer) (
    ),
    &lt;a href= &gt;gpointer&lt;/a&gt; user_data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_update_area</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-update-area</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Transfers ownership of the update area from &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; to the caller
of the function. That is, after calling this function, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; will
no longer have an invalid/dirty region; the update area is removed
from &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; and handed to you. If a window has no update area,
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-get-update-area&quot; title=&quot;gdk_window_get_update_area ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_get_update_area()&lt;/code&gt;&lt;/a&gt; returns &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;. You are responsible for
calling &lt;a class=&quot;link&quot; href=&quot;gdk-Points-Rectangles-and-Regions.html#gdk-region-destroy&quot; title=&quot;gdk_region_destroy ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_region_destroy()&lt;/code&gt;&lt;/a&gt; on the returned region if it's non-&lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;link&quot;&gt;GdkRegion&lt;/a&gt;* gdk_window_get_update_area (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_freeze_updates</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-freeze-updates</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Temporarily freezes a window such that it won't receive expose
events.  The window will begin receiving expose events again when
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-thaw-updates&quot; title=&quot;gdk_window_thaw_updates ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_thaw_updates()&lt;/code&gt;&lt;/a&gt; is called. If &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-freeze-updates&quot; title=&quot;gdk_window_freeze_updates ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_freeze_updates()&lt;/code&gt;&lt;/a&gt;
has been called more than once, &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-thaw-updates&quot; title=&quot;gdk_window_thaw_updates ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_thaw_updates()&lt;/code&gt;&lt;/a&gt; must be called
an equal number of times to begin processing exposes.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_freeze_updates (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_thaw_updates</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-thaw-updates</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Thaws a window frozen with &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-freeze-updates&quot; title=&quot;gdk_window_freeze_updates ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_freeze_updates()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_thaw_updates (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_process_all_updates</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-process-all-updates</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Calls &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-process-updates&quot; title=&quot;gdk_window_process_updates ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_process_updates()&lt;/code&gt;&lt;/a&gt; for all windows (see &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;)
in the application.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_process_all_updates (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_process_updates</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-process-updates</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sends one or more expose events to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. The areas in each 
expose event will cover the entire update area for the window (see
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-invalidate-region&quot; title=&quot;gdk_window_invalidate_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_invalidate_region()&lt;/code&gt;&lt;/a&gt; for details). Normally GDK calls
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-process-all-updates&quot; title=&quot;gdk_window_process_all_updates ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_process_all_updates()&lt;/code&gt;&lt;/a&gt; on your behalf, so there's no
need to call this function unless you want to force expose events
to be delivered immediately and synchronously (vs. the usual
case, where GDK delivers them in an idle handler). Occasionally
this is useful to produce nicer scrolling behavior, for example.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_process_updates (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; update_children);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_debug_updates</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-debug-updates</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">With update debugging enabled, calls to
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-invalidate-region&quot; title=&quot;gdk_window_invalidate_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_invalidate_region()&lt;/code&gt;&lt;/a&gt; clear the invalidated region of the
screen to a noticeable color, and GDK pauses for a short time
before sending exposes to windows during
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-process-updates&quot; title=&quot;gdk_window_process_updates ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_process_updates()&lt;/code&gt;&lt;/a&gt;.  The net effect is that you can see
the invalid region for each window and watch redraws as they
occur. This allows you to diagnose inefficiencies in your application.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_debug_updates (
    &lt;a href= &gt;gboolean&lt;/a&gt; setting);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_internal_paint_info</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-internal-paint-info</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">If you bypass the GDK layer and use windowing system primitives to
draw directly onto a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;, then you need to deal with two
details: there may be an offset between GDK coordinates and windowing
system coordinates, and GDK may have redirected drawing to a offscreen
pixmap as the result of a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-begin-paint-region&quot; title=&quot;gdk_window_begin_paint_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_begin_paint_region()&lt;/code&gt;&lt;/a&gt; calls.
This function allows retrieving the information you need to compensate
for these effects.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_get_internal_paint_info (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDrawable&lt;/a&gt; **real_drawable,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *x_offset,
    &lt;a href= &gt;gint&lt;/a&gt; *y_offset);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_enable_synchronized_configure</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-enable-synchronized-configure</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Indicates that the application will cooperate with the window
system in synchronizing the window repaint with the window
manager during resizing operations. After an application calls
this function, it must call &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-configure-finished&quot; title=&quot;gdk_window_configure_finished ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_configure_finished()&lt;/code&gt;&lt;/a&gt; every
time it has finished all processing associated with a set of
Configure events. Toplevel GTK+ windows automatically use this
protocol.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_enable_synchronized_configure (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_configure_finished</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-configure-finished</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Signal to the window system that the application has finished
handling Configure events it has received. Window Managers can
use this to better synchronize the frame repaint with the
application. GTK+ applications will automatically call this
function when appropriate.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_configure_finished (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_user_data</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-user-data</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">For most purposes this function is deprecated in favor of
&lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-set-data&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_set_data()&lt;/code&gt;&lt;/a&gt;. However, for historical reasons GTK+ stores
the &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWidget.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWidget&lt;/span&gt;&lt;/a&gt; that owns a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; as user data on the
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;. So, custom widget implementations should use
this function for that. If GTK+ receives an event for a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;,
and the user data for the window is non-&lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;, GTK+ will assume the
user data is a &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWidget.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWidget&lt;/span&gt;&lt;/a&gt;, and forward the event to that widget.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_user_data (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gpointer&lt;/a&gt; user_data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_override_redirect</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-override-redirect</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">An override redirect window is not under the control of the window manager.
This means it won't have a titlebar, won't be minimizable, etc. - it will
be entirely under the control of the application. The window manager
can't see the override redirect window at all.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_override_redirect (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; override_redirect);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_accept_focus</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-accept-focus</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Setting &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;accept_focus&lt;/code&gt;&lt;/em&gt; to &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#FALSE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;FALSE&lt;/code&gt;&lt;/a&gt; hints the desktop environment that the
window doesn't want to receive input focus. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_accept_focus (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; accept_focus);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_focus_on_map</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-focus-on-map</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Setting &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;focus_on_map&lt;/code&gt;&lt;/em&gt; to &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#FALSE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;FALSE&lt;/code&gt;&lt;/a&gt; hints the desktop environment that the
window doesn't want to receive input focus when it is mapped.  
focus_on_map should be turned off for windows that aren't triggered
interactively (such as popups from network activity).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_focus_on_map (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; focus_on_map);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_add_filter</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-add-filter</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Adds an event filter to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;, allowing you to intercept events
before they reach GDK. This is a low-level operation and makes it
easy to break GDK and/or GTK+, so you have to know what you're
doing. Pass &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; to get all events for all windows,
instead of events for a specific window.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_add_filter (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkFilterFunc&quot; href=&quot;GdkFilterFunc ()&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkFilterFunc&lt;/a&gt; function,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_remove_filter</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-remove-filter</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Remove a filter previously added with &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-add-filter&quot; title=&quot;gdk_window_add_filter ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_add_filter()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_remove_filter (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkFilterFunc&quot; href=&quot;GdkFilterFunc ()&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkFilterFunc&lt;/a&gt; function,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkFilterFunc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkFilterFunc</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Specifies the type of function used to filter native events before they are
converted to GDK events. </Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkFilterReturn&quot; href=&quot;enum GdkFilterReturn&quot; title=&quot;link&quot;&gt;GdkFilterReturn&lt;/a&gt; (
    *GdkFilterFunc) (
    &lt;a class=&quot;gdk-Windows.html#GdkXEvent&quot; href=&quot;GdkXEvent&quot; title=&quot;link&quot;&gt;GdkXEvent&lt;/a&gt; *xevent,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkEvent&lt;/a&gt; *event,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FILTER_CONTINUE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkFilterReturn</Anchor>
  <NodeRef refid="486"/>
  <Declaration type="html">&lt;pre&gt;GDK_FILTER_CONTINUE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFilterReturn</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FILTER_TRANSLATE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkFilterReturn</Anchor>
  <NodeRef refid="486"/>
  <Declaration type="html">&lt;pre&gt;GDK_FILTER_TRANSLATE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFilterReturn</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FILTER_REMOVE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkFilterReturn</Anchor>
  <NodeRef refid="486"/>
  <Declaration type="html">&lt;pre&gt;GDK_FILTER_REMOVE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkFilterReturn</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkFilterReturn</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkFilterReturn</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Specifies the result of applying a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkFilterFunc&quot; title=&quot;GdkFilterFunc ()&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFilterFunc&lt;/span&gt;&lt;/a&gt; to a native event.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_FILTER_CONTINUE,
    GDK_FILTER_TRANSLATE,
    GDK_FILTER_REMOVE  
} GdkFilterReturn;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkXEvent</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkXEvent</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Used to represent native events (&lt;span class=&quot;type&quot;&gt;XEvent&lt;/span&gt;s for the X11 
backend, &lt;span class=&quot;type&quot;&gt;MSG&lt;/span&gt;s for Win32).</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef void GdkXEvent;
    /* Can be cast to window system specific&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_shape_combine_mask</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-shape-combine-mask</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Applies a shape mask to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. Pixels in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; corresponding to
set bits in the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;mask&lt;/code&gt;&lt;/em&gt; will be visible; pixels in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;
corresponding to unset bits in the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;mask&lt;/code&gt;&lt;/em&gt; will be transparent. This
gives a non-rectangular window.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_shape_combine_mask (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkBitmap&lt;/a&gt; *mask,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_shape_combine_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-shape-combine-region</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Makes pixels in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; outside &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;shape_region&lt;/code&gt;&lt;/em&gt; be transparent,
so that the window may be nonrectangular. See also
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-shape-combine-mask&quot; title=&quot;gdk_window_shape_combine_mask ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_shape_combine_mask()&lt;/code&gt;&lt;/a&gt; to use a bitmap as the mask.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_shape_combine_region (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkRegion&lt;/a&gt; *shape_region,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; offset_x,
    &lt;a href= &gt;gint&lt;/a&gt; offset_y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_child_shapes</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-child-shapes</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets the shape mask of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; to the union of shape masks
for all children of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;, ignoring the shape mask of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;
itself. Contrast with &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-merge-child-shapes&quot; title=&quot;gdk_window_merge_child_shapes ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_merge_child_shapes()&lt;/code&gt;&lt;/a&gt; which includes
the shape mask of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; in the masks to be merged.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_child_shapes (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_merge_child_shapes</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-merge-child-shapes</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Merges the shape masks for any child windows into the
shape mask for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. i.e. the union of all masks
for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; and its children will become the new mask
for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. See &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-shape-combine-mask&quot; title=&quot;gdk_window_shape_combine_mask ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_shape_combine_mask()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_merge_child_shapes (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_input_shape_combine_mask</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-input-shape-combine-mask</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Like &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-shape-combine-mask&quot; title=&quot;gdk_window_shape_combine_mask ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_shape_combine_mask()&lt;/code&gt;&lt;/a&gt;, but the shape applies
only to event handling. Mouse events which happen while
the pointer position corresponds to an unset bit in the 
mask will be passed on the window below &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_input_shape_combine_mask (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkBitmap&lt;/a&gt; *mask,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href= &gt;gint&lt;/a&gt; y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_input_shape_combine_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-input-shape-combine-region</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Like &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-shape-combine-region&quot; title=&quot;gdk_window_shape_combine_region ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_shape_combine_region()&lt;/code&gt;&lt;/a&gt;, but the shape applies
only to event handling. Mouse events which happen while
the pointer position corresponds to an unset bit in the 
mask will be passed on the window below &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_input_shape_combine_region (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkRegion&lt;/a&gt; *shape_region,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; offset_x,
    &lt;a href= &gt;gint&lt;/a&gt; offset_y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_child_input_shapes</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-child-input-shapes</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets the input shape mask of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; to the union of input shape masks
for all children of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;, ignoring the input shape mask of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;
itself. Contrast with &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-merge-child-input-shapes&quot; title=&quot;gdk_window_merge_child_input_shapes ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_merge_child_input_shapes()&lt;/code&gt;&lt;/a&gt; which includes
the input shape mask of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; in the masks to be merged.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_child_input_shapes (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_merge_child_input_shapes</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-merge-child-input-shapes</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Merges the input shape masks for any child windows into the
input shape mask for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. i.e. the union of all input masks
for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; and its children will become the new input mask
for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. See &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-input-shape-combine-mask&quot; title=&quot;gdk_window_input_shape_combine_mask ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_input_shape_combine_mask()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_merge_child_input_shapes (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_static_gravities</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-static-gravities</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Set the bit gravity of the given window to static, and flag it so
all children get static subwindow gravity. This is used if you are
implementing scary features that involve deep knowledge of the
windowing system. Don't worry about it unless you have to.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_window_set_static_gravities (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; use_static);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_hints</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-hints</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">This function is broken and useless and you should ignore it.
If using GTK+, use functions such as &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-resize&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_resize()&lt;/code&gt;&lt;/a&gt;, &lt;code class=&quot;function&quot;&gt;gtk_window_set_size_request()&lt;/code&gt;,
&lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-move&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_move()&lt;/code&gt;&lt;/a&gt;, &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-parse-geometry&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_parse_geometry()&lt;/code&gt;&lt;/a&gt;, and &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-set-geometry-hints&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_set_geometry_hints()&lt;/code&gt;&lt;/a&gt;,
depending on what you're trying to do.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_hints (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; min_width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; min_height,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; max_width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; max_height,
    &lt;a href= &gt;gint&lt;/a&gt; flags);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_set_hints&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_title</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-title</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets the title of a toplevel window, to be displayed in the titlebar.
If you haven't explicitly set the icon name for the window
(using &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-icon-name&quot; title=&quot;gdk_window_set_icon_name ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_icon_name()&lt;/code&gt;&lt;/a&gt;), the icon name will be set to
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;title&lt;/code&gt;&lt;/em&gt; as well. &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;title&lt;/code&gt;&lt;/em&gt; must be in UTF-8 encoding (as with all
user-readable strings in GDK/GTK+). &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;title&lt;/code&gt;&lt;/em&gt; may not be &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_title (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a href= &gt;gchar&lt;/a&gt; *title);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_background</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-background</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets the background color of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. (However, when using GTK+,
set the background of a widget with &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWidget.html#gtk-widget-modify-bg&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_widget_modify_bg()&lt;/code&gt;&lt;/a&gt; - if
you're an application - or &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkStyle.html#gtk-style-set-background&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_style_set_background()&lt;/code&gt;&lt;/a&gt; - if you're
implementing a custom widget.)</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_background (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_back_pixmap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-back-pixmap</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets the background pixmap of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. May also be used to set a
background of &quot;None&quot; on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;, by setting a background pixmap
of &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_back_pixmap (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkPixmap&lt;/a&gt; *pixmap,
    &lt;a href= &gt;gboolean&lt;/a&gt; parent_relative);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PARENT_RELATIVE</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GDK-PARENT-RELATIVE:CAPS</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">A special value for &lt;code class=&quot;literal&quot;&gt;GdkPixmap*&lt;/code&gt; variables, indicating
that the background pixmap for a window should be inherited from the parent
window.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_PARENT_RELATIVE 1L&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_cursor</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-cursor</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets the mouse pointer for a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;. Use &lt;a class=&quot;link&quot; href=&quot;gdk-Cursors.html#gdk-cursor-new&quot; title=&quot;gdk_cursor_new ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_cursor_new()&lt;/code&gt;&lt;/a&gt; or
&lt;a class=&quot;link&quot; href=&quot;gdk-Cursors.html#gdk-cursor-new-from-pixmap&quot; title=&quot;gdk_cursor_new_from_pixmap ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_cursor_new_from_pixmap()&lt;/code&gt;&lt;/a&gt; to create the cursor.
To make the cursor invisible, use &lt;a class=&quot;link&quot; href=&quot;gdk-Cursors.html#gdk-cursor-new-from-pixmap&quot; title=&quot;gdk_cursor_new_from_pixmap ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_cursor_new_from_pixmap()&lt;/code&gt;&lt;/a&gt; to create
a cursor with no pixels in it. Passing &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; for the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;cursor&lt;/code&gt;&lt;/em&gt; argument
to &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-cursor&quot; title=&quot;gdk_window_set_cursor ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_cursor()&lt;/code&gt;&lt;/a&gt; means that &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; will use the cursor of
its parent window. Most windows should use this default.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_cursor (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&gt;GdkCursor&lt;/a&gt; *cursor);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_colormap</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-colormap</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Deprecated equivalent to &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-drawable-set-colormap&quot; title=&quot;gdk_drawable_set_colormap ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_drawable_set_colormap()&lt;/code&gt;&lt;/a&gt;</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_window_set_colormap gdk_drawable_set_colormap&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_set_colormap&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_user_data</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-user-data</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Retrieves the user data for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;, which is normally the widget
that &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; belongs to. See &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-user-data&quot; title=&quot;gdk_window_set_user_data ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_user_data()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_get_user_data (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gpointer&lt;/a&gt; *data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_geometry</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-geometry</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Any of the return location arguments to this function may be &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;,
if you aren't interested in getting the value of that field.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_get_geometry (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *height,
    &lt;a href= &gt;gint&lt;/a&gt; *depth);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_geometry_hints</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-geometry-hints</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets the geometry hints for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. Hints flagged in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;geom_mask&lt;/code&gt;&lt;/em&gt;
are set, hints not flagged in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;geom_mask&lt;/code&gt;&lt;/em&gt; are unset.
To unset all hints, use a &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;geom_mask&lt;/code&gt;&lt;/em&gt; of 0 and a &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;geometry&lt;/code&gt;&lt;/em&gt; of &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_geometry_hints (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a class=&quot;gdk-Windows.html#GdkGeometry&quot; href=&quot;GdkGeometry&quot; title=&quot;link&quot;&gt;GdkGeometry&lt;/a&gt; *geometry,
    &lt;a class=&quot;gdk-Windows.html#GdkWindowHints&quot; href=&quot;enum GdkWindowHints&quot; title=&gt;GdkWindowHints&lt;/a&gt; geom_mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_icon_list</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-icon-list</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets a list of icons for the window. One of these will be used
to represent the window when it has been iconified. The icon is
usually shown in an icon box or some sort of task bar. Which icon
size is shown depends on the window manager. The window manager
can scale the icon  but setting several size icons can give better
image quality since the window manager may only need to scale the
icon by a small amount or not at all.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_icon_list (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Doubly-Linked-Lists.html#GList&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;GList&lt;/a&gt; *pixbufs);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_modal_hint</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-modal-hint</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">The application can use this hint to tell the window manager
that a certain window has modal behaviour. The window manager
can use this information to handle modal windows in a special
way.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_modal_hint (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; modal);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_type_hint</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-type-hint</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">The application can use this call to provide a hint to the window
manager about the functionality of a window. The window manager
can use this information when determining the decoration and behaviour
of the window.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_type_hint (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkWindowTypeHint&quot; href=&quot;enum GdkWindowTypeHint&quot; title=&gt;GdkWindowTypeHint&lt;/a&gt; hint);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_type_hint</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-type-hint</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">This function returns the type hint set for a window.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindowTypeHint&quot; href=&quot;enum GdkWindowTypeHint&quot; title=&quot;link&quot;&gt;GdkWindowTypeHint&lt;/a&gt; gdk_window_get_type_hint (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_skip_taskbar_hint</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-skip-taskbar-hint</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Toggles whether a window should appear in a task list or window
list. If a window's semantic type as specified with
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-type-hint&quot; title=&quot;gdk_window_set_type_hint ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_type_hint()&lt;/code&gt;&lt;/a&gt; already fully describes the window, this
function should &lt;span class=&quot;emphasis&quot;&gt;&lt;em&gt;not&lt;/em&gt;&lt;/span&gt; be called in addition, 
instead you should allow the window to be treated according to 
standard policy for its semantic type.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_skip_taskbar_hint (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; skips_taskbar);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_skip_pager_hint</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-skip-pager-hint</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Toggles whether a window should appear in a pager (workspace
switcher, or other desktop utility program that displays a small
thumbnail representation of the windows on the desktop). If a
window's semantic type as specified with &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-type-hint&quot; title=&quot;gdk_window_set_type_hint ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_type_hint()&lt;/code&gt;&lt;/a&gt;
already fully describes the window, this function should 
&lt;span class=&quot;emphasis&quot;&gt;&lt;em&gt;not&lt;/em&gt;&lt;/span&gt; be called in addition, instead you should 
allow the window to be treated according to standard policy for 
its semantic type.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_skip_pager_hint (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; skips_pager);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_urgency_hint</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-urgency-hint</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Toggles whether a window needs the user's
urgent attention.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_urgency_hint (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;gboolean&lt;/a&gt; urgent);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_position</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-position</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Obtains the position of the window as reported in the
most-recently-processed &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventConfigure&quot; title=&quot;GdkEventConfigure&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventConfigure&lt;/span&gt;&lt;/a&gt;. Contrast with
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-get-geometry&quot; title=&quot;gdk_window_get_geometry ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_get_geometry()&lt;/code&gt;&lt;/a&gt; which queries the X server for the
current window position, regardless of which events have been
received or processed.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_get_position (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *x,
    &lt;a href= &gt;gint&lt;/a&gt; *y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_root_origin</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-root-origin</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Obtains the top-left corner of the window manager frame in root
window coordinates.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_get_root_origin (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *x,
    &lt;a href= &gt;gint&lt;/a&gt; *y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_frame_extents</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-frame-extents</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Obtains the bounding box of the window, including window manager
titlebar/borders if any. The frame position is given in root window
coordinates. To get the position of the window itself (rather than
the frame) in root window coordinates, use &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-get-origin&quot; title=&quot;gdk_window_get_origin ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_get_origin()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_get_frame_extents (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *rect);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_size</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-size</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Deprecated equivalent of &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-drawable-get-size&quot; title=&quot;gdk_drawable_get_size ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_drawable_get_size()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_window_get_size gdk_drawable_get_size&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_get_size&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_visual</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-visual</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Deprecated equivalent of &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-drawable-get-visual&quot; title=&quot;gdk_drawable_get_visual ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_drawable_get_visual()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_window_get_visual gdk_drawable_get_visual&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_get_visual&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_colormap</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-colormap</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Deprecated equivalent of &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-drawable-get-colormap&quot; title=&quot;gdk_drawable_get_colormap ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_drawable_get_colormap()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_window_get_colormap gdk_drawable_get_colormap&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_get_colormap&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_type</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-type</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Deprecated equivalent of &lt;code class=&quot;function&quot;&gt;gdk_drawable_get_type()&lt;/code&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_window_get_type gdk_window_get_window_type&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_get_type&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_origin</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-origin</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Obtains the position of a window in root window coordinates.
(Compare with &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-get-position&quot; title=&quot;gdk_window_get_position ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_get_position()&lt;/code&gt;&lt;/a&gt; and
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-get-geometry&quot; title=&quot;gdk_window_get_geometry ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_get_geometry()&lt;/code&gt;&lt;/a&gt; which return the position of a window
relative to its parent window.)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_window_get_origin (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *x,
    &lt;a href= &gt;gint&lt;/a&gt; *y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_deskrelative_origin</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-deskrelative-origin</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">This gets the origin of a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; relative to
an Enlightenment-window-manager desktop. As long as you don't
assume that the user's desktop/workspace covers the entire
root window (i.e. you don't assume that the desktop begins
at root window coordinate 0,0) this function is not necessary.
It's deprecated for that reason.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_window_get_deskrelative_origin (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *x,
    &lt;a href= &gt;gint&lt;/a&gt; *y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_window_get_deskrelative_origin&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_pointer</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-pointer</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Obtains the current pointer position and modifier state.
The position is given in coordinates relative to the upper left 
corner of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_get_pointer (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *x,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; *y,
    &lt;a class=&quot;gdk-Windows.html#GdkModifierType&quot; href=&quot;enum GdkModifierType&quot; title=&gt;GdkModifierType&lt;/a&gt; *mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SHIFT_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_SHIFT_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LOCK_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_LOCK_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CONTROL_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_CONTROL_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MOD1_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_MOD1_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MOD2_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_MOD2_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MOD3_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_MOD3_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MOD4_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_MOD4_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MOD5_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_MOD5_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON1_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON1_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON2_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON2_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON3_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON3_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON4_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON4_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON5_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON5_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SUPER_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_SUPER_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_HYPER_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_HYPER_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_META_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_META_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_RELEASE_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_RELEASE_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MODIFIER_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="524"/>
  <Declaration type="html">&lt;pre&gt;GDK_MODIFIER_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkModifierType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkModifierType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkModifierType</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">A set of bit-flags to indicate the state of modifier keys and mouse buttons 
in various event types. Typical modifier keys are Shift, Control, Meta, Super,
Hyper, Alt, Compose, Apple, CapsLock or ShiftLock. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_SHIFT_MASK = 1 &amp;lt;&amp;lt; 0,
    GDK_LOCK_MASK = 1 &amp;lt;&amp;lt; 1,
    GDK_CONTROL_MASK = 1 &amp;lt;&amp;lt; 2,
    GDK_MOD1_MASK = 1 &amp;lt;&amp;lt; 3,
    GDK_MOD2_MASK = 1 &amp;lt;&amp;lt; 4,
    GDK_MOD3_MASK = 1 &amp;lt;&amp;lt; 5,
    GDK_MOD4_MASK = 1 &amp;lt;&amp;lt; 6,
    GDK_MOD5_MASK = 1 &amp;lt;&amp;lt; 7,
    GDK_BUTTON1_MASK = 1 &amp;lt;&amp;lt; 8,
    GDK_BUTTON2_MASK = 1 &amp;lt;&amp;lt; 9,
    GDK_BUTTON3_MASK = 1 &amp;lt;&amp;lt; 10,
    GDK_BUTTON4_MASK = 1 &amp;lt;&amp;lt; 11,
    GDK_BUTTON5_MASK = 1 &amp;lt;&amp;lt; 12,
    GDK_SUPER_MASK = 1 &amp;lt;&amp;lt; 26,
    GDK_HYPER_MASK = 1 &amp;lt;&amp;lt; 27,
    GDK_META_MASK = 1 &amp;lt;&amp;lt; 28,
    GDK_RELEASE_MASK = 1 &amp;lt;&amp;lt; 30,
    GDK_MODIFIER_MASK = 0x5c001fff 
} GdkModifierType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_parent</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-parent</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Obtains the parent of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;, as known to GDK. Does not query the
X server; thus this returns the parent as passed to &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-new&quot; title=&quot;gdk_window_new ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_new()&lt;/code&gt;&lt;/a&gt;,
not the actual parent. This should never matter unless you're using
Xlib calls mixed with GDK calls on the X11 platform. It may also
matter for toplevel windows, because the window manager may choose
to reparent them.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_get_parent (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_toplevel</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-toplevel</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Gets the toplevel window that's an ancestor of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_get_toplevel (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_children</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-children</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Gets the list of children of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; known to GDK.
This function only returns children created via GDK,
so for example it's useless when used with the root window;
it only returns windows an application created itself.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;GList&lt;/a&gt;* gdk_window_get_children (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_peek_children</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-peek-children</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Like &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-get-children&quot; title=&quot;gdk_window_get_children ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_get_children()&lt;/code&gt;&lt;/a&gt;, but does not copy the list of
children, so the list does not need to be freed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;GList&lt;/a&gt;* gdk_window_peek_children (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_events</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-events</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Gets the event mask for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. See &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-events&quot; title=&quot;gdk_window_set_events ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_events()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Events.html#GdkEventMask&quot; href=&quot;enum GdkEventMask&quot; title=&quot;link&quot;&gt;GdkEventMask&lt;/a&gt; gdk_window_get_events (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_events</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-events</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">The event mask for a window determines which events will be reported
for that window. For example, an event mask including &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-BUTTON-PRESS-MASK:CAPS&quot;&gt;&lt;span class=&quot;type&quot;&gt;GDK_BUTTON_PRESS_MASK&lt;/span&gt;&lt;/a&gt;
means the window should report button press events. The event mask
is the bitwise OR of values from the &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GdkEventMask&quot; title=&quot;enum GdkEventMask&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventMask&lt;/span&gt;&lt;/a&gt; enumeration.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_events (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Events.html#GdkEventMask&quot; href=&quot;enum GdkEventMask&quot; title=&gt;GdkEventMask&lt;/a&gt; event_mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_icon</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-icon</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets the icon of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; as a pixmap or window. If using GTK+, investigate
&lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-set-default-icon-list&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_set_default_icon_list()&lt;/code&gt;&lt;/a&gt; first, and then &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-set-icon-list&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_set_icon_list()&lt;/code&gt;&lt;/a&gt;
and &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-set-icon&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_set_icon()&lt;/code&gt;&lt;/a&gt;. If those don't meet your needs, look at
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-icon-list&quot; title=&quot;gdk_window_set_icon_list ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_icon_list()&lt;/code&gt;&lt;/a&gt;. Only if all those are too high-level do you
want to fall back to &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-icon&quot; title=&quot;gdk_window_set_icon ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_icon()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_icon (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *icon_window,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt; *pixmap,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&gt;GdkBitmap&lt;/a&gt; *mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_icon_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-icon-name</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Windows may have a name used while minimized, distinct from the
name they display in their titlebar. Most of the time this is a bad
idea from a user interface standpoint. But you can set such a name
with this function, if you like.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_icon_name (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a href= &gt;gchar&lt;/a&gt; *name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_transient_for</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-transient-for</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Indicates to the window manager that &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; is a transient dialog
associated with the application window &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/em&gt;. This allows the
window manager to do things like center &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/em&gt; and
keep &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; above &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_transient_for (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *parent);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_role</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-role</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">When using GTK+, typically you should use &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-set-role&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_set_role()&lt;/code&gt;&lt;/a&gt; instead
of this low-level function.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_role (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a href= &gt;gchar&lt;/a&gt; *role);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_startup_id</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-startup-id</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">When using GTK+, typically you should use &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-set-startup-id&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_set_startup_id()&lt;/code&gt;&lt;/a&gt;
instead of this low-level function.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_startup_id (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkWindow&lt;/a&gt; *window,
    const &lt;a href= &gt;gchar&lt;/a&gt; *startup_id);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_group</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-group</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets the group leader window for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. By default,
GDK sets the group leader for all toplevel windows
to a global window implicitly created by GDK. With this function
you can override this default.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_group (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *leader);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_group</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-group</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Returns the group leader window for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt;. See &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-group&quot; title=&quot;gdk_window_set_group ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_set_group()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_get_group (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_decorations</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-decorations</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">&quot;Decorations&quot; are the features the window manager adds to a toplevel &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;.
This function sets the traditional Motif window manager hints that tell the
window manager which decorations you would like your window to have.
Usually you should use &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html#gtk-window-set-decorated&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_window_set_decorated()&lt;/code&gt;&lt;/a&gt; on a &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkWindow.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkWindow&lt;/span&gt;&lt;/a&gt; instead of
using the GDK function directly.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_decorations (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkWMDecoration&quot; href=&quot;enum GdkWMDecoration&quot; title=&gt;GdkWMDecoration&lt;/a&gt; decorations);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_decorations</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-decorations</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Returns the decorations set on the GdkWindow with &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-set-decorations&quot; title=&quot;gdk_window_set_decorations ()&quot;&gt;&lt;span class=&quot;type&quot;&gt;gdk_window_set_decorations&lt;/span&gt;&lt;/a&gt;</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_window_get_decorations (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkWMDecoration&quot; href=&quot;enum GdkWMDecoration&quot; title=&gt;GdkWMDecoration&lt;/a&gt; *decorations);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DECOR_ALL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMDecoration</Anchor>
  <NodeRef refid="540"/>
  <Declaration type="html">&lt;pre&gt;GDK_DECOR_ALL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMDecoration</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DECOR_BORDER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMDecoration</Anchor>
  <NodeRef refid="540"/>
  <Declaration type="html">&lt;pre&gt;GDK_DECOR_BORDER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMDecoration</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DECOR_RESIZEH</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMDecoration</Anchor>
  <NodeRef refid="540"/>
  <Declaration type="html">&lt;pre&gt;GDK_DECOR_RESIZEH&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMDecoration</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DECOR_TITLE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMDecoration</Anchor>
  <NodeRef refid="540"/>
  <Declaration type="html">&lt;pre&gt;GDK_DECOR_TITLE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMDecoration</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DECOR_MENU</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMDecoration</Anchor>
  <NodeRef refid="540"/>
  <Declaration type="html">&lt;pre&gt;GDK_DECOR_MENU&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMDecoration</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DECOR_MINIMIZE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMDecoration</Anchor>
  <NodeRef refid="540"/>
  <Declaration type="html">&lt;pre&gt;GDK_DECOR_MINIMIZE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMDecoration</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DECOR_MAXIMIZE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMDecoration</Anchor>
  <NodeRef refid="540"/>
  <Declaration type="html">&lt;pre&gt;GDK_DECOR_MAXIMIZE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMDecoration</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWMDecoration</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMDecoration</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">These are hints originally defined by the Motif toolkit.
The window manager can use them when determining how to decorate
the window. The hint must be set before mapping the window.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_DECOR_ALL = 1 &amp;lt;&amp;lt; 0,
    GDK_DECOR_BORDER = 1 &amp;lt;&amp;lt; 1,
    GDK_DECOR_RESIZEH = 1 &amp;lt;&amp;lt; 2,
    GDK_DECOR_TITLE = 1 &amp;lt;&amp;lt; 3,
    GDK_DECOR_MENU = 1 &amp;lt;&amp;lt; 4,
    GDK_DECOR_MINIMIZE = 1 &amp;lt;&amp;lt; 5,
    GDK_DECOR_MAXIMIZE = 1 &amp;lt;&amp;lt; 6 
} GdkWMDecoration;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_set_functions</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-set-functions</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Sets hints about the window management functions to make available
via buttons on the window frame.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_set_functions (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Windows.html#GdkWMFunction&quot; href=&quot;enum GdkWMFunction&quot; title=&gt;GdkWMFunction&lt;/a&gt; functions);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FUNC_ALL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMFunction</Anchor>
  <NodeRef refid="542"/>
  <Declaration type="html">&lt;pre&gt;GDK_FUNC_ALL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FUNC_RESIZE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMFunction</Anchor>
  <NodeRef refid="542"/>
  <Declaration type="html">&lt;pre&gt;GDK_FUNC_RESIZE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FUNC_MOVE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMFunction</Anchor>
  <NodeRef refid="542"/>
  <Declaration type="html">&lt;pre&gt;GDK_FUNC_MOVE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FUNC_MINIMIZE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMFunction</Anchor>
  <NodeRef refid="542"/>
  <Declaration type="html">&lt;pre&gt;GDK_FUNC_MINIMIZE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FUNC_MAXIMIZE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMFunction</Anchor>
  <NodeRef refid="542"/>
  <Declaration type="html">&lt;pre&gt;GDK_FUNC_MAXIMIZE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FUNC_CLOSE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMFunction</Anchor>
  <NodeRef refid="542"/>
  <Declaration type="html">&lt;pre&gt;GDK_FUNC_CLOSE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWMFunction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWMFunction</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkWMFunction</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">These are hints originally defined by the Motif toolkit.
The window manager can use them when determining the functions 
to offer for the window. 
The hint must be set before mapping the window.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_FUNC_ALL = 1 &amp;lt;&amp;lt; 0,
    GDK_FUNC_RESIZE = 1 &amp;lt;&amp;lt; 1,
    GDK_FUNC_MOVE = 1 &amp;lt;&amp;lt; 2,
    GDK_FUNC_MINIMIZE = 1 &amp;lt;&amp;lt; 3,
    GDK_FUNC_MAXIMIZE = 1 &amp;lt;&amp;lt; 4,
    GDK_FUNC_CLOSE = 1 &amp;lt;&amp;lt; 5 
} GdkWMFunction;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_get_toplevels</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-get-toplevels</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Obtains a list of all toplevel windows known to GDK on the default
screen (see &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html#gdk-screen-get-toplevel-windows&quot; title=&quot;gdk_screen_get_toplevel_windows ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_screen_get_toplevel_windows()&lt;/code&gt;&lt;/a&gt;).
A toplevel window is a child of the root window (see
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-get-default-root-window&quot; title=&quot;gdk_get_default_root_window ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_get_default_root_window()&lt;/code&gt;&lt;/a&gt;).</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;GList&lt;/a&gt;* gdk_window_get_toplevels (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_get_default_root_window</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-get-default-root-window</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Obtains the root window (parent all other windows are inside)
for the default display and screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt;* gdk_get_default_root_window (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPointerHooks</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>GdkPointerHooks</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">A table of pointers to functions for getting quantities related to 
the current pointer position. GDK has one global table of this type,
which can be set using &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-set-pointer-hooks&quot; title=&quot;gdk_set_pointer_hooks ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_set_pointer_hooks()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkWindow* (*get_pointer) (GdkWindow *window, gint *x, gint *y, GdkModifierType *mask);
    GdkWindow* (*window_at_pointer) (GdkScreen *screen,  gint *win_x, gint *win_y);
} GdkPointerHooks;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_set_pointer_hooks</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-set-pointer-hooks</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">This function allows for hooking into the operation
of getting the current location of the pointer. This
is only useful for such low-level tools as an
event recorder. Applications should never have any
reason to use this facility.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkPointerHooks&quot; href=&quot;GdkPointerHooks&quot; title=&quot;link&quot;&gt;GdkPointerHooks&lt;/a&gt;* gdk_set_pointer_hooks (
    const &lt;a class=&quot;gdk-Windows.html#GdkPointerHooks&quot; href=&quot;GdkPointerHooks&quot; title=&gt;GdkPointerHooks&lt;/a&gt; *new_hooks);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_redirect_to_drawable</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-redirect-to-drawable</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Redirects drawing into &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; so that drawing to the
window in the rectangle specified by &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src_x&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;src_y&lt;/code&gt;&lt;/em&gt;,
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/em&gt; is also drawn into &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt; at
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;dest_x&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;dest_y&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_redirect_to_drawable (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDrawable&lt;/a&gt; *drawable,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; src_x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; src_y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dest_x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; dest_y,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href= &gt;gint&lt;/a&gt; height);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_remove_redirection</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Windows.html</Path>
  <Anchor>gdk-window-remove-redirection</Anchor>
  <NodeRef refid="18"/>
  <Abstract type="html">Removes any active redirection started by
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-redirect-to-drawable&quot; title=&quot;gdk_window_redirect_to_drawable ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_redirect_to_drawable()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_window_remove_redirection (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gtk/gtk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NOTHING</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_NOTHING&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DELETE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_DELETE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DESTROY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_DESTROY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_EXPOSE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_EXPOSE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MOTION_NOTIFY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_MOTION_NOTIFY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON_PRESS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON_PRESS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_2BUTTON_PRESS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_2BUTTON_PRESS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_3BUTTON_PRESS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_3BUTTON_PRESS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON_RELEASE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON_RELEASE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_KEY_PRESS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_KEY_PRESS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_KEY_RELEASE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_KEY_RELEASE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ENTER_NOTIFY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_ENTER_NOTIFY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LEAVE_NOTIFY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_LEAVE_NOTIFY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FOCUS_CHANGE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_FOCUS_CHANGE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CONFIGURE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_CONFIGURE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MAP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_MAP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_UNMAP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_UNMAP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROPERTY_NOTIFY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROPERTY_NOTIFY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_CLEAR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_SELECTION_CLEAR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_REQUEST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_SELECTION_REQUEST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_NOTIFY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_SELECTION_NOTIFY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROXIMITY_IN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROXIMITY_IN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROXIMITY_OUT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROXIMITY_OUT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_ENTER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_ENTER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_LEAVE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_LEAVE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_MOTION</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_MOTION&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_STATUS</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_STATUS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DROP_START</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_DROP_START&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DROP_FINISHED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_DROP_FINISHED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CLIENT_EVENT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_CLIENT_EVENT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISIBILITY_NOTIFY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISIBILITY_NOTIFY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NO_EXPOSE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_NO_EXPOSE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SCROLL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_SCROLL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_STATE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_STATE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SETTING</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_SETTING&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OWNER_CHANGE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_OWNER_CHANGE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GRAB_BROKEN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_GRAB_BROKEN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DAMAGE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="549"/>
  <Declaration type="html">&lt;pre&gt;GDK_DAMAGE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventType</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Specifies the type of the event.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_NOTHING = -1,
    GDK_DELETE = 0,
    GDK_DESTROY = 1,
    GDK_EXPOSE = 2,
    GDK_MOTION_NOTIFY = 3,
    GDK_BUTTON_PRESS = 4,
    GDK_2BUTTON_PRESS = 5,
    GDK_3BUTTON_PRESS = 6,
    GDK_BUTTON_RELEASE = 7,
    GDK_KEY_PRESS = 8,
    GDK_KEY_RELEASE = 9,
    GDK_ENTER_NOTIFY = 10,
    GDK_LEAVE_NOTIFY = 11,
    GDK_FOCUS_CHANGE = 12,
    GDK_CONFIGURE = 13,
    GDK_MAP = 14,
    GDK_UNMAP = 15,
    GDK_PROPERTY_NOTIFY = 16,
    GDK_SELECTION_CLEAR = 17,
    GDK_SELECTION_REQUEST = 18,
    GDK_SELECTION_NOTIFY = 19,
    GDK_PROXIMITY_IN = 20,
    GDK_PROXIMITY_OUT = 21,
    GDK_DRAG_ENTER = 22,
    GDK_DRAG_LEAVE = 23,
    GDK_DRAG_MOTION = 24,
    GDK_DRAG_STATUS = 25,
    GDK_DROP_START = 26,
    GDK_DROP_FINISHED = 27,
    GDK_CLIENT_EVENT = 28,
    GDK_VISIBILITY_NOTIFY = 29,
    GDK_NO_EXPOSE = 30,
    GDK_SCROLL = 31,
    GDK_WINDOW_STATE = 32,
    GDK_SETTING = 33,
    GDK_OWNER_CHANGE = 34,
    GDK_GRAB_BROKEN = 35,
    GDK_DAMAGE = 36 
} GdkEventType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_EXPOSURE_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_EXPOSURE_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_POINTER_MOTION_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_POINTER_MOTION_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_POINTER_MOTION_HINT_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_POINTER_MOTION_HINT_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON_MOTION_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON_MOTION_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON1_MOTION_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON1_MOTION_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON2_MOTION_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON2_MOTION_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON3_MOTION_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON3_MOTION_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON_PRESS_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON_PRESS_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_BUTTON_RELEASE_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_BUTTON_RELEASE_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_KEY_PRESS_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_KEY_PRESS_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_KEY_RELEASE_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_KEY_RELEASE_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ENTER_NOTIFY_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_ENTER_NOTIFY_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_LEAVE_NOTIFY_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_LEAVE_NOTIFY_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FOCUS_CHANGE_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_FOCUS_CHANGE_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_STRUCTURE_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_STRUCTURE_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROPERTY_CHANGE_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROPERTY_CHANGE_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISIBILITY_NOTIFY_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISIBILITY_NOTIFY_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROXIMITY_IN_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROXIMITY_IN_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROXIMITY_OUT_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROXIMITY_OUT_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SUBSTRUCTURE_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_SUBSTRUCTURE_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SCROLL_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_SCROLL_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ALL_EVENTS_MASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="550"/>
  <Declaration type="html">&lt;pre&gt;GDK_ALL_EVENTS_MASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkEventMask</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventMask</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventMask</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">A set of bit-flags to indicate which events a window is to receive.
Most of these masks map onto one or more of the &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GdkEventType&quot; title=&quot;enum GdkEventType&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventType&lt;/span&gt;&lt;/a&gt; event types
above.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_EXPOSURE_MASK = 1 &amp;lt;&amp;lt; 1,
    GDK_POINTER_MOTION_MASK = 1 &amp;lt;&amp;lt; 2,
    GDK_POINTER_MOTION_HINT_MASK = 1 &amp;lt;&amp;lt; 3,
    GDK_BUTTON_MOTION_MASK = 1 &amp;lt;&amp;lt; 4,
    GDK_BUTTON1_MOTION_MASK = 1 &amp;lt;&amp;lt; 5,
    GDK_BUTTON2_MOTION_MASK = 1 &amp;lt;&amp;lt; 6,
    GDK_BUTTON3_MOTION_MASK = 1 &amp;lt;&amp;lt; 7,
    GDK_BUTTON_PRESS_MASK = 1 &amp;lt;&amp;lt; 8,
    GDK_BUTTON_RELEASE_MASK = 1 &amp;lt;&amp;lt; 9,
    GDK_KEY_PRESS_MASK = 1 &amp;lt;&amp;lt; 10,
    GDK_KEY_RELEASE_MASK = 1 &amp;lt;&amp;lt; 11,
    GDK_ENTER_NOTIFY_MASK = 1 &amp;lt;&amp;lt; 12,
    GDK_LEAVE_NOTIFY_MASK = 1 &amp;lt;&amp;lt; 13,
    GDK_FOCUS_CHANGE_MASK = 1 &amp;lt;&amp;lt; 14,
    GDK_STRUCTURE_MASK = 1 &amp;lt;&amp;lt; 15,
    GDK_PROPERTY_CHANGE_MASK = 1 &amp;lt;&amp;lt; 16,
    GDK_VISIBILITY_NOTIFY_MASK = 1 &amp;lt;&amp;lt; 17,
    GDK_PROXIMITY_IN_MASK = 1 &amp;lt;&amp;lt; 18,
    GDK_PROXIMITY_OUT_MASK = 1 &amp;lt;&amp;lt; 19,
    GDK_SUBSTRUCTURE_MASK = 1 &amp;lt;&amp;lt; 20,
    GDK_SCROLL_MASK = 1 &amp;lt;&amp;lt; 21,
    GDK_ALL_EVENTS_MASK = 0x3FFFFE 
} GdkEventMask;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CURRENT_TIME</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GDK-CURRENT-TIME:CAPS</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Represents the current time, and can be used anywhere a time is expected.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_CURRENT_TIME 0L&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PRIORITY_EVENTS</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GDK-PRIORITY-EVENTS:CAPS</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">This is the priority that events from the X server are given in the
&lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html&quot;
&gt;GLib Main Loop&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_PRIORITY_EVENTS&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PRIORITY_REDRAW</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GDK-PRIORITY-REDRAW:CAPS</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">This is the priority that the idle handler processing window updates
is given in the &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html&quot;
&gt;GLib Main Loop&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_PRIORITY_REDRAW (G_PRIORITY_HIGH_IDLE + 20)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_events_pending</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-events-pending</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Checks if any events are ready to be processed for any display.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gboolean&lt;/a&gt; gdk_events_pending (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_peek</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-peek</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">If there is an event waiting in the event queue of some open
display, returns a copy of it. See &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-peek-event&quot; title=&quot;gdk_display_peek_event ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_peek_event()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt;* gdk_event_peek (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-get</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Checks all open displays for a &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEvent&quot; title=&quot;union GdkEvent&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEvent&lt;/span&gt;&lt;/a&gt; to process,to be processed
on, fetching events from the windowing system if necessary.
See &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-get-event&quot; title=&quot;gdk_display_get_event ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_get_event()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt;* gdk_event_get (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_get_graphics_expose</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-get-graphics-expose</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Waits for a GraphicsExpose or NoExpose event from the X server.
This is used in the &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkText.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkText&lt;/span&gt;&lt;/a&gt; and &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/GtkCList.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkCList&lt;/span&gt;&lt;/a&gt; widgets in GTK+ to make sure any
GraphicsExpose events are handled before the widget is scrolled.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt;* gdk_event_get_graphics_expose (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_put</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-put</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Appends a copy of the given event onto the front of the event
queue for event-&amp;gt;any.window's display, or the default event
queue if event-&amp;gt;any.window is &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;. See &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-put-event&quot; title=&quot;gdk_display_put_event ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_put_event()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_event_put (
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt; *event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-new</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Creates a new event of the given type. All fields are set to 0.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt;* gdk_event_new (
    &lt;a class=&quot;gdk-Events.html#GdkEventType&quot; href=&quot;enum GdkEventType&quot; title=&gt;GdkEventType&lt;/a&gt; type);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_copy</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-copy</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Copies a &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEvent&quot; title=&quot;union GdkEvent&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEvent&lt;/span&gt;&lt;/a&gt;, copying or incrementing the reference count of the
resources associated with it (e.g. &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;'s and strings).</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt;* gdk_event_copy (
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt; *event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_free</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-free</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Frees a &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEvent&quot; title=&quot;union GdkEvent&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEvent&lt;/span&gt;&lt;/a&gt;, freeing or decrementing any resources associated with it.
Note that this function should only be called with events returned from
functions such as &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#gdk-event-peek&quot; title=&quot;gdk_event_peek ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_event_peek()&lt;/code&gt;&lt;/a&gt;, &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#gdk-event-get&quot; title=&quot;gdk_event_get ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_event_get()&lt;/code&gt;&lt;/a&gt;,
&lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#gdk-event-get-graphics-expose&quot; title=&quot;gdk_event_get_graphics_expose ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_event_get_graphics_expose()&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#gdk-event-copy&quot; title=&quot;gdk_event_copy ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_event_copy()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_event_free (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt; *event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_get_time</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-get-time</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Returns the time stamp from &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;event&lt;/code&gt;&lt;/em&gt;, if there is one; otherwise
returns &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-CURRENT-TIME:CAPS&quot; title=&quot;GDK_CURRENT_TIME&quot;&gt;&lt;span class=&quot;type&quot;&gt;GDK_CURRENT_TIME&lt;/span&gt;&lt;/a&gt;. If &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;event&lt;/code&gt;&lt;/em&gt; is &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;, returns &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-CURRENT-TIME:CAPS&quot; title=&quot;GDK_CURRENT_TIME&quot;&gt;&lt;span class=&quot;type&quot;&gt;GDK_CURRENT_TIME&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;guint32 gdk_event_get_time (
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt; *event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_get_state</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-get-state</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">If the event contains a &quot;state&quot; field, puts that field in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/em&gt;. Otherwise
stores an empty state (0). Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if there was a state field
in the event. &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;event&lt;/code&gt;&lt;/em&gt; may be &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;, in which case it's treated
as if the event had no state field.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_event_get_state (
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt; *event,
    &lt;a class=&quot;gdk-Windows.html#GdkModifierType&quot; href=&quot;enum GdkModifierType&quot; title=&gt;GdkModifierType&lt;/a&gt; *state);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_get_axis</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-get-axis</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Extract the axis value for a particular axis use from
an event structure.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_event_get_axis (
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt; *event,
    &lt;a class=&quot;gdk-Input-Devices.html#GdkAxisUse&quot; href=&quot;enum GdkAxisUse&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot;&gt;GdkAxisUse&lt;/a&gt; axis_use,
    &lt;a href= &gt;gdouble&lt;/a&gt; *value);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_get_coords</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-get-coords</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Extract the event window relative x/y coordinates from an event.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_event_get_coords (
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot;&gt;GdkEvent&lt;/a&gt; *event,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot; &gt;gdouble&lt;/a&gt; *x_win,
    &lt;a href= &gt;gdouble&lt;/a&gt; *y_win);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_get_root_coords</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-get-root-coords</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Extract the root window relative x/y coordinates from an event.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_event_get_root_coords (
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot;&gt;GdkEvent&lt;/a&gt; *event,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot; &gt;gdouble&lt;/a&gt; *x_root,
    &lt;a href= &gt;gdouble&lt;/a&gt; *y_root);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_request_motions</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-request-motions</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Request more motion notifies if &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;event&lt;/code&gt;&lt;/em&gt; is a motion notify hint event.
This function should be used instead of &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-get-pointer&quot; title=&quot;gdk_window_get_pointer ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_get_pointer()&lt;/code&gt;&lt;/a&gt; to
request further motion notifies, because it also works for extension
events where motion notifies are provided for devices other than the
core pointer. Coordinate extraction, processing and requesting more
motion events from a &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-MOTION-NOTIFY:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_MOTION_NOTIFY&lt;/code&gt;&lt;/a&gt; event usually works like this:</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_event_request_motions (
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEventMotion&quot; href=&quot;GdkEventMotion&quot; title=&gt;GdkEventMotion&lt;/a&gt; *event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_handler_set</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-handler-set</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Sets the function to call to handle all events from GDK.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_event_handler_set (
    &lt;a class=&quot;gdk-Events.html#GdkEventFunc&quot; href=&quot;GdkEventFunc ()&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkEventFunc&lt;/a&gt; func,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Datasets.html#GDestroyNotify&quot; &gt;gpointer&lt;/a&gt; data,
    &lt;a href= &gt;GDestroyNotify&lt;/a&gt; notify);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventFunc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>GdkEventFunc</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Specifies the type of function passed to &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#gdk-event-handler-set&quot; title=&quot;gdk_event_handler_set ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_event_handler_set()&lt;/code&gt;&lt;/a&gt; to handle
all GDK events.</Abstract>
  <Declaration type="html">&lt;pre&gt;void (
    *GdkEventFunc) (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkEvent&lt;/a&gt; *event,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_send_client_message</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-send-client-message</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Sends an X ClientMessage event to a given window (which must be
on the default &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt;.)
This could be used for communicating between different applications,
though the amount of data is limited to 20 bytes.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_event_send_client_message (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt; *event,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; winid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_send_client_message_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-send-client-message-for-display</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">On X11, sends an X ClientMessage event to a given window. On
Windows, sends a message registered with the name
GDK_WIN32_CLIENT_MESSAGE.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_event_send_client_message_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt; *event,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; winid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_send_clientmessage_toall</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-send-clientmessage-toall</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Sends an X ClientMessage event to all toplevel windows on the default
&lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_event_send_clientmessage_toall (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt; *event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_add_client_message_filter</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-add-client-message-filter</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Adds a filter to the default display to be called when X ClientMessage events
are received. See &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html#gdk-display-add-client-message-filter&quot; title=&quot;gdk_display_add_client_message_filter ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_display_add_client_message_filter()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_add_client_message_filter (
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; message_type,
    &lt;a class=&quot;gdk-Windows.html#GdkFilterFunc&quot; href=&quot;GdkFilterFunc ()&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkFilterFunc&lt;/a&gt; func,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_get_show_events</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-get-show-events</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Gets whether event debugging output is enabled.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gboolean&lt;/a&gt; gdk_get_show_events (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_set_show_events</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-set-show-events</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Sets whether a trace of received events is output.
Note that GTK+ must be compiled with debugging (that is,
configured using the &lt;code class=&quot;option&quot;&gt;--enable-debug&lt;/code&gt; option)
to use this option.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_set_show_events (
    &lt;a href= &gt;gboolean&lt;/a&gt; show_events);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_set_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-set-screen</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Sets the screen for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;event&lt;/code&gt;&lt;/em&gt; to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;. The event must
have been allocated by GTK+, for instance, by
&lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#gdk-event-copy&quot; title=&quot;gdk_event_copy ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_event_copy()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_event_set_screen (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&quot;link&quot;&gt;GdkEvent&lt;/a&gt; *event,
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_event_get_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-event-get-screen</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Returns the screen for the event. The screen is
typically the screen for &lt;code class=&quot;literal&quot;&gt;event-&amp;gt;any.window&lt;/code&gt;, but
for events such as mouse events, it is the screen
where the pointer was when the event occurs -
that is, the screen which has the root window 
to which &lt;code class=&quot;literal&quot;&gt;event-&amp;gt;motion.x_root&lt;/code&gt; and
&lt;code class=&quot;literal&quot;&gt;event-&amp;gt;motion.y_root&lt;/code&gt; are relative.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt;* gdk_event_get_screen (
    const &lt;a class=&quot;gdk-Event-Structures.html#GdkEvent&quot; href=&quot;union GdkEvent&quot; title=&gt;GdkEvent&lt;/a&gt; *event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_setting_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Events.html</Path>
  <Anchor>gdk-setting-get</Anchor>
  <NodeRef refid="19"/>
  <Abstract type="html">Obtains a desktop-wide setting, such as the double-click time,
for the default screen. See &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html#gdk-screen-get-setting&quot; title=&quot;gdk_screen_get_setting ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_screen_get_setting()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gboolean&lt;/a&gt; gdk_setting_get (
    const &lt;a href=&quot;/usr/share/gtk-doc/html/gobject/gobject-Generic-values.html#GValue&quot; &gt;gchar&lt;/a&gt; *name,
    &lt;a href= &gt;GValue&lt;/a&gt; *value);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEvent</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEvent</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEvent&quot; title=&quot;union GdkEvent&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEvent&lt;/span&gt;&lt;/a&gt; struct contains a union of all of the event structs,
and allows access to the data fields in a number of ways.</Abstract>
  <Declaration type="html">&lt;pre&gt;union GdkEvent {
    GdkEventType type;
    GdkEventAny any;
    GdkEventExpose expose;
    GdkEventNoExpose no_expose;
    GdkEventVisibility visibility;
    GdkEventMotion motion;
    GdkEventButton button;
    GdkEventScroll scroll;
    GdkEventKey key;
    GdkEventCrossing crossing;
    GdkEventFocus focus_change;
    GdkEventConfigure configure;
    GdkEventProperty property;
    GdkEventSelection selection;
    GdkEventOwnerChange owner_change;
    GdkEventProximity proximity;
    GdkEventClient client;
    GdkEventDND dnd;
    GdkEventWindowState window_state;
    GdkEventSetting setting;
    GdkEventGrabBroken grab_broken;
};
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventAny</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventAny</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Contains the fields which are common to all event structs.
Any event pointer can safely be cast to a pointer to a &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventAny&quot; title=&quot;GdkEventAny&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventAny&lt;/span&gt;&lt;/a&gt; to access
these fields.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
} GdkEventAny;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventKey</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventKey</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Describes a key press or key release event.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    guint state;
    guint keyval;
    gint length;
    gchar *string;
    guint16 hardware_keycode;
    guint8 group;
    guint is_modifier : 1;
} GdkEventKey;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventButton</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventButton</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Used for button press and button release events. The
&lt;em class=&quot;structfield&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/em&gt; field will be one of &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-BUTTON-PRESS:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_BUTTON_PRESS&lt;/code&gt;&lt;/a&gt;,
&lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-2BUTTON-PRESS:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_2BUTTON_PRESS&lt;/code&gt;&lt;/a&gt;, &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-3BUTTON-PRESS:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_3BUTTON_PRESS&lt;/code&gt;&lt;/a&gt;, and &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-BUTTON-RELEASE:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_BUTTON_RELEASE&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble *axes;
    guint state;
    guint button;
    GdkDevice *device;
    gdouble x_root, y_root;
} GdkEventButton;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventScroll</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventScroll</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated from button presses for the buttons 4 to 7. Wheel mice are 
usually configured to generate button press events for buttons 4 and 5
when the wheel is turned.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    guint state;
    GdkScrollDirection direction;
    GdkDevice *device;
    gdouble x_root, y_root;
} GdkEventScroll;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventMotion</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventMotion</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when the pointer moves.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble *axes;
    guint state;
    gint16 is_hint;
    GdkDevice *device;
    gdouble x_root, y_root;
} GdkEventMotion;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventExpose</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventExpose</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when all or part of a window becomes visible and needs to be
redrawn.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkRectangle area;
    GdkRegion *region;
    gint count;
} GdkEventExpose;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventVisibility</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventVisibility</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when the window visibility status has changed.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkVisibilityState state;
} GdkEventVisibility;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventCrossing</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventCrossing</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when the pointer enters or leaves a window.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkWindow *subwindow;
    guint32 time;
    gdouble x;
    gdouble y;
    gdouble x_root;
    gdouble y_root;
    GdkCrossingMode mode;
    GdkNotifyType detail;
    gboolean focus;
    guint state;
} GdkEventCrossing;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventFocus</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventFocus</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Describes a change of keyboard focus.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gint16 in;
} GdkEventFocus;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventConfigure</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventConfigure</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when a window size or position has changed.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gint x, y;
    gint width;
    gint height;
} GdkEventConfigure;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventProperty</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventProperty</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Describes a property change on a window.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom atom;
    guint32 time;
    guint state;
} GdkEventProperty;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventSelection</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventSelection</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when a selection is requested or ownership of a selection 
is taken over by another client application. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom selection;
    GdkAtom target;
    GdkAtom property;
    guint32 time;
    GdkNativeWindow requestor;
} GdkEventSelection;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkNativeWindow</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkNativeWindow</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Used to represent native windows (&lt;span class=&quot;type&quot;&gt;Window&lt;/span&gt;s for the X11 backend, 
&lt;span class=&quot;type&quot;&gt;HWND&lt;/span&gt;s for Win32).</Abstract>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventDND</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventDND</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated during DND operations. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkDragContext *context;
    guint32 time;
    gshort x_root, y_root;
} GdkEventDND;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventProximity</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventProximity</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Proximity events are generated when using GDK's wrapper for the
XInput extension. The XInput extension is an add-on for standard X
that allows you to use nonstandard devices such as graphics tablets.
A proximity event indicates that the stylus has moved in or out of
contact with the tablet, or perhaps that the user's finger has moved
in or out of contact with a touch screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    guint32 time;
    GdkDevice *device;
} GdkEventProximity;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventClient</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventClient</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">An event sent by another client application.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkAtom message_type;
    gushort data_format;
    union {
    char b[20];
    short s[10];
    long l[5];
} data;
} GdkEventClient;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventNoExpose</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventNoExpose</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when the area of a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt; being copied, with &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-drawable&quot; title=&quot;gdk_draw_drawable ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_drawable()&lt;/code&gt;&lt;/a&gt;
or &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#gdk-window-copy-area&quot; title=&quot;gdk_window_copy_area()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_window_copy_area()&lt;/code&gt;&lt;/a&gt;, was completely available.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
} GdkEventNoExpose;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventWindowState</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventWindowState</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when the state of a toplevel window changes.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkWindowState changed_mask;
    GdkWindowState new_window_state;
} GdkEventWindowState;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventSetting</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventSetting</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when a setting is modified.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkSettingAction action;
    char *name;
} GdkEventSetting;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventOwnerChange</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventOwnerChange</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when the owner of a selection changes. On X11, this information is
only available if the X server supports the XFIXES extension.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    GdkNativeWindow owner;
    GdkOwnerChange reason;
    GdkAtom selection;
    guint32 time;
    guint32 selection_time;
} GdkEventOwnerChange;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkEventGrabBroken</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkEventGrabBroken</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Generated when a pointer or keyboard grab is broken. On X11, this happens
when the grab window becomes unviewable (i.e. it or one of its ancestors 
is unmapped), or if the same application grabs the pointer or keyboard
again. Note that implicit grabs (which are initiated by button presses)
can also cause &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventGrabBroken&quot; title=&quot;GdkEventGrabBroken&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventGrabBroken&lt;/span&gt;&lt;/a&gt; events.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkEventType type;
    GdkWindow *window;
    gint8 send_event;
    gboolean keyboard;
    gboolean implicit;
    GdkWindow *grab_window;
} GdkEventGrabBroken;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SCROLL_UP</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkScrollDirection</Anchor>
  <NodeRef refid="601"/>
  <Declaration type="html">&lt;pre&gt;GDK_SCROLL_UP&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkScrollDirection</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SCROLL_DOWN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkScrollDirection</Anchor>
  <NodeRef refid="601"/>
  <Declaration type="html">&lt;pre&gt;GDK_SCROLL_DOWN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkScrollDirection</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SCROLL_LEFT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkScrollDirection</Anchor>
  <NodeRef refid="601"/>
  <Declaration type="html">&lt;pre&gt;GDK_SCROLL_LEFT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkScrollDirection</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SCROLL_RIGHT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkScrollDirection</Anchor>
  <NodeRef refid="601"/>
  <Declaration type="html">&lt;pre&gt;GDK_SCROLL_RIGHT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkScrollDirection</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkScrollDirection</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkScrollDirection</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Specifies the direction for &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventScroll&quot; title=&quot;GdkEventScroll&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventScroll&lt;/span&gt;&lt;/a&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_SCROLL_UP,
    GDK_SCROLL_DOWN,
    GDK_SCROLL_LEFT,
    GDK_SCROLL_RIGHT 
} GdkScrollDirection;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISIBILITY_UNOBSCURED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkVisibilityState</Anchor>
  <NodeRef refid="602"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISIBILITY_UNOBSCURED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkVisibilityState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISIBILITY_PARTIAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkVisibilityState</Anchor>
  <NodeRef refid="602"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISIBILITY_PARTIAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkVisibilityState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISIBILITY_FULLY_OBSCURED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkVisibilityState</Anchor>
  <NodeRef refid="602"/>
  <Declaration type="html">&lt;pre&gt;GDK_VISIBILITY_FULLY_OBSCURED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkVisibilityState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkVisibilityState</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkVisibilityState</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Specifies the visiblity status of a window for a &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventVisibility&quot; title=&quot;GdkEventVisibility&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventVisibility&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_VISIBILITY_UNOBSCURED,
    GDK_VISIBILITY_PARTIAL,
    GDK_VISIBILITY_FULLY_OBSCURED 
} GdkVisibilityState;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CROSSING_NORMAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkCrossingMode</Anchor>
  <NodeRef refid="603"/>
  <Declaration type="html">&lt;pre&gt;GDK_CROSSING_NORMAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCrossingMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CROSSING_GRAB</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkCrossingMode</Anchor>
  <NodeRef refid="603"/>
  <Declaration type="html">&lt;pre&gt;GDK_CROSSING_GRAB&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCrossingMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CROSSING_UNGRAB</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkCrossingMode</Anchor>
  <NodeRef refid="603"/>
  <Declaration type="html">&lt;pre&gt;GDK_CROSSING_UNGRAB&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCrossingMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CROSSING_GTK_GRAB</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkCrossingMode</Anchor>
  <NodeRef refid="603"/>
  <Declaration type="html">&lt;pre&gt;GDK_CROSSING_GTK_GRAB&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCrossingMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CROSSING_GTK_UNGRAB</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkCrossingMode</Anchor>
  <NodeRef refid="603"/>
  <Declaration type="html">&lt;pre&gt;GDK_CROSSING_GTK_UNGRAB&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCrossingMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CROSSING_STATE_CHANGED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkCrossingMode</Anchor>
  <NodeRef refid="603"/>
  <Declaration type="html">&lt;pre&gt;GDK_CROSSING_STATE_CHANGED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkCrossingMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkCrossingMode</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkCrossingMode</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Specifies the crossing mode for &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventCrossing&quot; title=&quot;GdkEventCrossing&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventCrossing&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_CROSSING_NORMAL,
    GDK_CROSSING_GRAB,
    GDK_CROSSING_UNGRAB,
    GDK_CROSSING_GTK_GRAB,
    GDK_CROSSING_GTK_UNGRAB,
    GDK_CROSSING_STATE_CHANGED 
} GdkCrossingMode;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NOTIFY_ANCESTOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkNotifyType</Anchor>
  <NodeRef refid="604"/>
  <Declaration type="html">&lt;pre&gt;GDK_NOTIFY_ANCESTOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkNotifyType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NOTIFY_VIRTUAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkNotifyType</Anchor>
  <NodeRef refid="604"/>
  <Declaration type="html">&lt;pre&gt;GDK_NOTIFY_VIRTUAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkNotifyType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NOTIFY_INFERIOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkNotifyType</Anchor>
  <NodeRef refid="604"/>
  <Declaration type="html">&lt;pre&gt;GDK_NOTIFY_INFERIOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkNotifyType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NOTIFY_NONLINEAR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkNotifyType</Anchor>
  <NodeRef refid="604"/>
  <Declaration type="html">&lt;pre&gt;GDK_NOTIFY_NONLINEAR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkNotifyType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NOTIFY_NONLINEAR_VIRTUAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkNotifyType</Anchor>
  <NodeRef refid="604"/>
  <Declaration type="html">&lt;pre&gt;GDK_NOTIFY_NONLINEAR_VIRTUAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkNotifyType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NOTIFY_UNKNOWN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkNotifyType</Anchor>
  <NodeRef refid="604"/>
  <Declaration type="html">&lt;pre&gt;GDK_NOTIFY_UNKNOWN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkNotifyType</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkNotifyType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkNotifyType</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Specifies the kind of crossing for &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventCrossing&quot; title=&quot;GdkEventCrossing&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventCrossing&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_NOTIFY_ANCESTOR = 0,
    GDK_NOTIFY_VIRTUAL = 1,
    GDK_NOTIFY_INFERIOR = 2,
    GDK_NOTIFY_NONLINEAR = 3,
    GDK_NOTIFY_NONLINEAR_VIRTUAL = 4,
    GDK_NOTIFY_UNKNOWN = 5 
} GdkNotifyType;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROPERTY_NEW_VALUE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkPropertyState</Anchor>
  <NodeRef refid="605"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROPERTY_NEW_VALUE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkPropertyState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROPERTY_DELETE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkPropertyState</Anchor>
  <NodeRef refid="605"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROPERTY_DELETE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkPropertyState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPropertyState</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkPropertyState</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Specifies the type of a property change for a &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventProperty&quot; title=&quot;GdkEventProperty&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventProperty&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_PROPERTY_NEW_VALUE,
    GDK_PROPERTY_DELETE 
} GdkPropertyState;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_STATE_WITHDRAWN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkWindowState</Anchor>
  <NodeRef refid="606"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_STATE_WITHDRAWN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_STATE_ICONIFIED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkWindowState</Anchor>
  <NodeRef refid="606"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_STATE_ICONIFIED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_STATE_MAXIMIZED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkWindowState</Anchor>
  <NodeRef refid="606"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_STATE_MAXIMIZED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_STATE_STICKY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkWindowState</Anchor>
  <NodeRef refid="606"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_STATE_STICKY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_STATE_FULLSCREEN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkWindowState</Anchor>
  <NodeRef refid="606"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_STATE_FULLSCREEN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_STATE_ABOVE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkWindowState</Anchor>
  <NodeRef refid="606"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_STATE_ABOVE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_STATE_BELOW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkWindowState</Anchor>
  <NodeRef refid="606"/>
  <Declaration type="html">&lt;pre&gt;GDK_WINDOW_STATE_BELOW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkWindowState</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkWindowState</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkWindowState</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Specifies the state of a toplevel window.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_WINDOW_STATE_WITHDRAWN = 1 &amp;lt;&amp;lt; 0,
    GDK_WINDOW_STATE_ICONIFIED = 1 &amp;lt;&amp;lt; 1,
    GDK_WINDOW_STATE_MAXIMIZED = 1 &amp;lt;&amp;lt; 2,
    GDK_WINDOW_STATE_STICKY = 1 &amp;lt;&amp;lt; 3,
    GDK_WINDOW_STATE_FULLSCREEN = 1 &amp;lt;&amp;lt; 4,
    GDK_WINDOW_STATE_ABOVE = 1 &amp;lt;&amp;lt; 5,
    GDK_WINDOW_STATE_BELOW = 1 &amp;lt;&amp;lt; 6 
} GdkWindowState;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SETTING_ACTION_NEW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkSettingAction</Anchor>
  <NodeRef refid="607"/>
  <Declaration type="html">&lt;pre&gt;GDK_SETTING_ACTION_NEW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkSettingAction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SETTING_ACTION_CHANGED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkSettingAction</Anchor>
  <NodeRef refid="607"/>
  <Declaration type="html">&lt;pre&gt;GDK_SETTING_ACTION_CHANGED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkSettingAction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SETTING_ACTION_DELETED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkSettingAction</Anchor>
  <NodeRef refid="607"/>
  <Declaration type="html">&lt;pre&gt;GDK_SETTING_ACTION_DELETED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkSettingAction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkSettingAction</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkSettingAction</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Specifies the kind of modification applied to a setting in a &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventSetting&quot; title=&quot;GdkEventSetting&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventSetting&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_SETTING_ACTION_NEW,
    GDK_SETTING_ACTION_CHANGED,
    GDK_SETTING_ACTION_DELETED 
} GdkSettingAction;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OWNER_CHANGE_NEW_OWNER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkOwnerChange</Anchor>
  <NodeRef refid="608"/>
  <Declaration type="html">&lt;pre&gt;GDK_OWNER_CHANGE_NEW_OWNER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkOwnerChange</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OWNER_CHANGE_DESTROY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkOwnerChange</Anchor>
  <NodeRef refid="608"/>
  <Declaration type="html">&lt;pre&gt;GDK_OWNER_CHANGE_DESTROY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkOwnerChange</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_OWNER_CHANGE_CLOSE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkOwnerChange</Anchor>
  <NodeRef refid="608"/>
  <Declaration type="html">&lt;pre&gt;GDK_OWNER_CHANGE_CLOSE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkOwnerChange</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkOwnerChange</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Event-Structures.html</Path>
  <Anchor>GdkOwnerChange</Anchor>
  <NodeRef refid="20"/>
  <Abstract type="html">Specifies why a selection ownership was changed.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_OWNER_CHANGE_NEW_OWNER,
    GDK_OWNER_CHANGE_DESTROY,
    GDK_OWNER_CHANGE_CLOSE 
} GdkOwnerChange;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkKeymap</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>GdkKeymap-struct</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">A &lt;span class=&quot;structname&quot;&gt;GdkKeymap&lt;/span&gt; defines the translation from keyboard state
(including a hardware key, a modifier mask, and active keyboard group)
to a keyval. This translation has two phases. The first phase is
to determine the effective keyboard group and level for the keyboard
state; the second phase is to look up the keycode/group/level triplet
in the keymap and see what keyval it corresponds to.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkKeymap GdkKeymap;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkKeymapKey</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>GdkKeymapKey</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">A &lt;span class=&quot;structname&quot;&gt;GdkKeymapKey&lt;/span&gt; is a hardware key that can 
be mapped to a keyval.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    guint keycode;
    gint group;
    gint level;
} GdkKeymapKey;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keymap_get_default</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keymap-get-default</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Returns the &lt;a class=&quot;link&quot; href=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkKeymap&lt;/span&gt;&lt;/a&gt; attached to the default display.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot; href=&gt;GdkKeymap&lt;/a&gt;* gdk_keymap_get_default (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keymap_get_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keymap-get-for-display</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Returns the &lt;a class=&quot;link&quot; href=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkKeymap&lt;/span&gt;&lt;/a&gt; attached to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot; href=&quot;link&quot;&gt;GdkKeymap&lt;/a&gt;* gdk_keymap_get_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keymap_lookup_key</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keymap-lookup-key</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Looks up the keyval mapped to a keycode/group/level triplet.
If no keyval is bound to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/em&gt;, returns 0. For normal user input,
you want to use &lt;a class=&quot;link&quot; href=&quot;gdk-Keyboard-Handling.html#gdk-keymap-translate-keyboard-state&quot; title=&quot;gdk_keymap_translate_keyboard_state ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_keymap_translate_keyboard_state()&lt;/code&gt;&lt;/a&gt; instead of
this function, since the effective group/level may not be
the same as the current keyboard state.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; gdk_keymap_lookup_key (
    &lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot; href=&quot;link&quot;&gt;GdkKeymap&lt;/a&gt; *keymap,
    const &lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymapKey&quot; href=&quot;GdkKeymapKey&quot; title=&gt;GdkKeymapKey&lt;/a&gt; *key);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keymap_translate_keyboard_state</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keymap-translate-keyboard-state</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Translates the contents of a &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventKey&quot; title=&quot;GdkEventKey&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventKey&lt;/span&gt;&lt;/a&gt; into a keyval, effective
group, and level. Modifiers that affected the translation and
are thus unavailable for application use are returned in
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;consumed_modifiers&lt;/code&gt;&lt;/em&gt;.  See &lt;code class=&quot;function&quot;&gt;gdk_keyval_get_keys()&lt;/code&gt; for an explanation of
groups and levels.  The &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;effective_group&lt;/code&gt;&lt;/em&gt; is the group that was
actually used for the translation; some keys such as Enter are not
affected by the active keyboard group. The &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;level&lt;/code&gt;&lt;/em&gt; is derived from
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/em&gt;. For convenience, &lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventKey&quot; title=&quot;GdkEventKey&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventKey&lt;/span&gt;&lt;/a&gt; already contains the translated
keyval, so this function isn't as useful as you might think.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_keymap_translate_keyboard_state (
    &lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkKeymap&lt;/a&gt; *keymap,
    &lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; hardware_keycode,
    &lt;a class=&quot;gdk-Windows.html#GdkModifierType&quot; href=&quot;enum GdkModifierType&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkModifierType&lt;/a&gt; state,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;gint&lt;/a&gt; group,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guint&lt;/a&gt; *keyval,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *effective_group,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; *level,
    &lt;a class=&quot;gdk-Windows.html#GdkModifierType&quot; href=&quot;enum GdkModifierType&quot; title=&gt;GdkModifierType&lt;/a&gt; *consumed_modifiers);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keymap_get_entries_for_keyval</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keymap-get-entries-for-keyval</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Obtains a list of keycode/group/level combinations that will
generate &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;keyval&lt;/code&gt;&lt;/em&gt;. Groups and levels are two kinds of keyboard mode;
in general, the level determines whether the top or bottom symbol
on a key is used, and the group determines whether the left or
right symbol is used. On US keyboards, the shift key changes the
keyboard level, and there are no groups. A group switch key might
convert a keyboard between Hebrew to English modes, for example.
&lt;a class=&quot;link&quot; href=&quot;gdk-Event-Structures.html#GdkEventKey&quot; title=&quot;GdkEventKey&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkEventKey&lt;/span&gt;&lt;/a&gt; contains a &lt;code class=&quot;literal&quot;&gt;group&lt;/code&gt; field that indicates the active
keyboard group. The level is computed from the modifier mask.
The returned array should be freed
with &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Memory-Allocation.html#g-free&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_free()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_keymap_get_entries_for_keyval (
    &lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkKeymap&lt;/a&gt; *keymap,
    &lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; keyval,
    &lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymapKey&quot; href=&quot;GdkKeymapKey&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkKeymapKey&lt;/a&gt; **keys,
    &lt;a href= &gt;gint&lt;/a&gt; *n_keys);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keymap_get_entries_for_keycode</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keymap-get-entries-for-keycode</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Returns the keyvals bound to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;hardware_keycode&lt;/code&gt;&lt;/em&gt;.
The Nth &lt;a class=&quot;link&quot; href=&quot;gdk-Keyboard-Handling.html#GdkKeymapKey&quot; title=&quot;GdkKeymapKey&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkKeymapKey&lt;/span&gt;&lt;/a&gt; in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/em&gt; is bound to the Nth
keyval in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;keyvals&lt;/code&gt;&lt;/em&gt;. Free the returned arrays with &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Memory-Allocation.html#g-free&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_free()&lt;/code&gt;&lt;/a&gt;.
When a keycode is pressed by the user, the keyval from
this list of entries is selected by considering the effective
keyboard group and level. See &lt;a class=&quot;link&quot; href=&quot;gdk-Keyboard-Handling.html#gdk-keymap-translate-keyboard-state&quot; title=&quot;gdk_keymap_translate_keyboard_state ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_keymap_translate_keyboard_state()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_keymap_get_entries_for_keycode (
    &lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkKeymap&lt;/a&gt; *keymap,
    &lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; hardware_keycode,
    &lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymapKey&quot; href=&quot;GdkKeymapKey&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkKeymapKey&lt;/a&gt; **keys,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guint&lt;/a&gt; **keyvals,
    &lt;a href= &gt;gint&lt;/a&gt; *n_entries);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keymap_get_direction</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keymap-get-direction</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Returns the direction of effective layout of the keymap.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;PangoDirection&lt;/a&gt; gdk_keymap_get_direction (
    &lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot; href=&gt;GdkKeymap&lt;/a&gt; *keymap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keymap_have_bidi_layouts</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keymap-have-bidi-layouts</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Determines if keyboard layouts for both right-to-left and left-to-right
languages are in use.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_keymap_have_bidi_layouts (
    &lt;a class=&quot;gdk-Keyboard-Handling.html#GdkKeymap&quot; href=&gt;GdkKeymap&lt;/a&gt; *keymap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyval_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keyval-name</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Converts a key value into a symbolic name.
The names are the same as those in the &lt;code class=&quot;filename&quot;&gt;&amp;lt;gdk/gdkkeysyms.h&amp;gt;&lt;/code&gt; header file
but without the leading &quot;GDK_&quot;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;gchar&lt;/a&gt;* gdk_keyval_name (
    &lt;a href= &gt;guint&lt;/a&gt; keyval);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyval_from_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keyval-from-name</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Converts a key name to a key value.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;guint&lt;/a&gt; gdk_keyval_from_name (
    const &lt;a href= &gt;gchar&lt;/a&gt; *keyval_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyval_convert_case</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keyval-convert-case</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Obtains the upper- and lower-case versions of the keyval &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/em&gt;.
Examples of keyvals are &lt;span class=&quot;type&quot;&gt;GDK_a&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;GDK_Enter&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;GDK_F1&lt;/span&gt;, etc.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_keyval_convert_case (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;guint&lt;/a&gt; symbol,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;guint&lt;/a&gt; *lower,
    &lt;a href= &gt;guint&lt;/a&gt; *upper);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyval_to_upper</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keyval-to-upper</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Converts a key value to upper case, if applicable.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;guint&lt;/a&gt; gdk_keyval_to_upper (
    &lt;a href= &gt;guint&lt;/a&gt; keyval);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyval_to_lower</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keyval-to-lower</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Converts a key value to lower case, if applicable.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;guint&lt;/a&gt; gdk_keyval_to_lower (
    &lt;a href= &gt;guint&lt;/a&gt; keyval);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyval_is_upper</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keyval-is-upper</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if the given key value is in upper case.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;gboolean&lt;/a&gt; gdk_keyval_is_upper (
    &lt;a href= &gt;guint&lt;/a&gt; keyval);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyval_is_lower</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keyval-is-lower</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#TRUE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;TRUE&lt;/code&gt;&lt;/a&gt; if the given key value is in lower case.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;gboolean&lt;/a&gt; gdk_keyval_is_lower (
    &lt;a href= &gt;guint&lt;/a&gt; keyval);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_keyval_to_unicode</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-keyval-to-unicode</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Convert from a GDK key symbol to the corresponding ISO10646 (Unicode)
character.</Abstract>
  <Declaration type="html">&lt;pre&gt;guint32 gdk_keyval_to_unicode (
    &lt;a href= &gt;guint&lt;/a&gt; keyval);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_unicode_to_keyval</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Keyboard-Handling.html</Path>
  <Anchor>gdk-unicode-to-keyval</Anchor>
  <NodeRef refid="21"/>
  <Abstract type="html">Convert from a ISO10646 character to a key symbol.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;guint&lt;/a&gt; gdk_unicode_to_keyval (
    guint32 wc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkSelection</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GdkSelection</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Selections.html#GdkSelection&quot; title=&quot;GdkSelection&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkSelection&lt;/span&gt;&lt;/a&gt; enumeration contains predefined 
atom values for several common selections.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef GdkAtom GdkSelection;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GdkSelection&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkSelectionType</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GdkSelectionType</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Selections.html#GdkSelectionType&quot; title=&quot;GdkSelectionType&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkSelectionType&lt;/span&gt;&lt;/a&gt; enumeration contains predefined
atom values used to represent the types of data transferred
in response to a request for a target. See the
ICCCM for details about what data should be transferred
for each of these types. Other atoms can be used,
and the recommended practice for GTK+ is to to use mime 
types for this purpose. However, supporting these types
may be useful for compatibility with older programs.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef GdkAtom GdkSelectionType;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GdkSelectionType&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkTarget</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GdkTarget</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Selections.html#GdkTarget&quot; title=&quot;GdkTarget&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkTarget&lt;/span&gt;&lt;/a&gt; enumeration contains predefined atom values which are
used to describe possible targets for a selection. Other atoms can be
used, and the recommended practice for GTK+ is to to use mime types
for this purpose. However, supporting these types may be useful for
compatibility with older programs.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef GdkAtom GdkTarget;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GdkTarget&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_PRIMARY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-PRIMARY:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;PRIMARY&lt;/code&gt; selection.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_PRIMARY _GDK_MAKE_ATOM (1)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_SECONDARY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-SECONDARY:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;SECONDARY&lt;/code&gt; selection.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_SECONDARY _GDK_MAKE_ATOM (2)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_CLIPBOARD</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-CLIPBOARD:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;CLIPBOARD&lt;/code&gt; selection.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_CLIPBOARD _GDK_MAKE_ATOM (69)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TARGET_BITMAP</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-TARGET-BITMAP:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;BITMAP&lt;/code&gt; selection target.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_TARGET_BITMAP _GDK_MAKE_ATOM (5)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TARGET_COLORMAP</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-TARGET-COLORMAP:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;COLORMAP&lt;/code&gt; selection target.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_TARGET_COLORMAP _GDK_MAKE_ATOM (7)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TARGET_DRAWABLE</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-TARGET-DRAWABLE:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;DRAWABLE&lt;/code&gt; selection target.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_TARGET_DRAWABLE _GDK_MAKE_ATOM (17)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TARGET_PIXMAP</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-TARGET-PIXMAP:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;PIXMAP&lt;/code&gt; selection target.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_TARGET_PIXMAP _GDK_MAKE_ATOM (20)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_TARGET_STRING</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-TARGET-STRING:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;STRING&lt;/code&gt; selection target.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_TARGET_STRING _GDK_MAKE_ATOM (31)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_TYPE_ATOM</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-TYPE-ATOM:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;ATOM&lt;/code&gt; selection type.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_TYPE_ATOM _GDK_MAKE_ATOM (4)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_TYPE_BITMAP</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-TYPE-BITMAP:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;BITMAP&lt;/code&gt; selection type.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_TYPE_BITMAP _GDK_MAKE_ATOM (5)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_TYPE_COLORMAP</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-TYPE-COLORMAP:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;COLORMAP&lt;/code&gt; selection type.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_TYPE_COLORMAP _GDK_MAKE_ATOM (7)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_TYPE_DRAWABLE</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-TYPE-DRAWABLE:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;DRAWABLE&lt;/code&gt; selection type.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_TYPE_DRAWABLE _GDK_MAKE_ATOM (17)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_TYPE_INTEGER</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-TYPE-INTEGER:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;INTEGER&lt;/code&gt; selection type.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_TYPE_INTEGER _GDK_MAKE_ATOM (19)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_TYPE_PIXMAP</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-TYPE-PIXMAP:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;PIXMAP&lt;/code&gt; selection type.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_TYPE_PIXMAP _GDK_MAKE_ATOM (20)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_TYPE_WINDOW</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-TYPE-WINDOW:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;WINDOW&lt;/code&gt; selection type.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_TYPE_WINDOW _GDK_MAKE_ATOM (33)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SELECTION_TYPE_STRING</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>GDK-SELECTION-TYPE-STRING:CAPS</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">A &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; representing the &lt;code class=&quot;literal&quot;&gt;STRING&lt;/code&gt; selection type.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SELECTION_TYPE_STRING _GDK_MAKE_ATOM (31)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_selection_owner_set</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>gdk-selection-owner-set</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">Sets the owner of the given selection.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_selection_owner_set (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *owner,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkAtom&lt;/a&gt; selection,
    guint32 time_,
    &lt;a href= &gt;gboolean&lt;/a&gt; send_event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_selection_owner_set_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>gdk-selection-owner-set-for-display</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">Sets the &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/em&gt; as the current owner of the selection &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;selection&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_selection_owner_set_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *owner,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkAtom&lt;/a&gt; selection,
    guint32 time_,
    &lt;a href= &gt;gboolean&lt;/a&gt; send_event);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_selection_owner_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>gdk-selection-owner-get</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">Determines the owner of the given selection.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_selection_owner_get (
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; selection);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_selection_owner_get_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>gdk-selection-owner-get-for-display</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">Determine the owner of the given selection.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_selection_owner_get_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; selection);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_selection_convert</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>gdk-selection-convert</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">Retrieves the contents of a selection in a given
form.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_selection_convert (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *requestor,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; selection,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; target,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_selection_property_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>gdk-selection-property-get</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">Retrieves selection data that was stored by the selection
data in response to a call to &lt;a class=&quot;link&quot; href=&quot;gdk-Selections.html#gdk-selection-convert&quot; title=&quot;gdk_selection_convert ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_selection_convert()&lt;/code&gt;&lt;/a&gt;. This function
will not be used by applications, who should use the &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/gtk-Clipboards.html#GtkClipboard&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GtkClipboard&lt;/span&gt;&lt;/a&gt;
API instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_selection_property_get (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot;&gt;GdkWindow&lt;/a&gt; *requestor,
    &lt;a href=&quot;link&quot; &gt;guchar&lt;/a&gt; **data,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; *prop_type,
    &lt;a href= &gt;gint&lt;/a&gt; *prop_format);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_selection_send_notify</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>gdk-selection-send-notify</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">Sends a response to SelectionRequest event.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_selection_send_notify (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&quot;link&quot;&gt;GdkNativeWindow&lt;/a&gt; requestor,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; selection,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; target,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; property,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_selection_send_notify_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Selections.html</Path>
  <Anchor>gdk-selection-send-notify-for-display</Anchor>
  <NodeRef refid="22"/>
  <Abstract type="html">Send a response to SelectionRequest event.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_selection_send_notify_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&quot;link&quot;&gt;GdkNativeWindow&lt;/a&gt; requestor,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; selection,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; target,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; property,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_get_selection</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-get-selection</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Returns the selection atom for the current source window.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; gdk_drag_get_selection (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&gt;GdkDragContext&lt;/a&gt; *context);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_abort</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-abort</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Aborts a drag without dropping. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drag_abort (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&gt;GdkDragContext&lt;/a&gt; *context,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drop_reply</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drop-reply</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Accepts or rejects a drop. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drop_reply (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkDragContext&lt;/a&gt; *context,
    &lt;a href= &gt;gboolean&lt;/a&gt; ok,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_context_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-context-new</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Creates a new &lt;a class=&quot;link&quot; href=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; title=&quot;GdkDragContext&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDragContext&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&gt;GdkDragContext&lt;/a&gt;* gdk_drag_context_new (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_drop</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-drop</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Drops on the current destination.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drag_drop (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&gt;GdkDragContext&lt;/a&gt; *context,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_find_window</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-find-window</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Finds the destination window and DND protocol to use at the
given pointer position. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drag_find_window (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&quot;link&quot;&gt;GdkDragContext&lt;/a&gt; *context,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *drag_window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x_root,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; y_root,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; **dest_window,
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragProtocol&quot; href=&quot;enum GdkDragProtocol&quot; title=&gt;GdkDragProtocol&lt;/a&gt; *protocol);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_find_window_for_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-find-window-for-screen</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Finds the destination window and DND protocol to use at the
given pointer position. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drag_find_window_for_screen (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&quot;link&quot;&gt;GdkDragContext&lt;/a&gt; *context,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *drag_window,
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x_root,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; y_root,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; **dest_window,
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragProtocol&quot; href=&quot;enum GdkDragProtocol&quot; title=&gt;GdkDragProtocol&lt;/a&gt; *protocol);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_context_ref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-context-ref</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Deprecated function; use &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-ref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_ref()&lt;/code&gt;&lt;/a&gt; instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drag_context_ref (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&gt;GdkDragContext&lt;/a&gt; *context);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_drag_context_ref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_begin</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-begin</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Starts a drag and creates a new drag context for it.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&quot;link&quot;&gt;GdkDragContext&lt;/a&gt;* gdk_drag_begin (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Doubly-Linked-Lists.html#GList&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href= &gt;GList&lt;/a&gt; *targets);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_motion</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-motion</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Updates the drag context when the pointer moves or the 
set of actions changes.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_drag_motion (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&quot;link&quot;&gt;GdkDragContext&lt;/a&gt; *context,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *dest_window,
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragProtocol&quot; href=&quot;enum GdkDragProtocol&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDragProtocol&lt;/a&gt; protocol,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x_root,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; y_root,
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragAction&quot; href=&quot;enum GdkDragAction&quot; title=&quot;link&quot;&gt;GdkDragAction&lt;/a&gt; suggested_action,
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragAction&quot; href=&quot;enum GdkDragAction&quot; title=&gt;GdkDragAction&lt;/a&gt; possible_actions,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drop_finish</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drop-finish</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Ends the drag operation after a drop.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drop_finish (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot;&gt;GdkDragContext&lt;/a&gt; *context,
    &lt;a href= &gt;gboolean&lt;/a&gt; success,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_get_protocol</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-get-protocol</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Finds out the DND protocol supported by a window.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&quot;link&quot;&gt;GdkNativeWindow&lt;/a&gt; gdk_drag_get_protocol (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&quot;link&quot;&gt;GdkNativeWindow&lt;/a&gt; xid,
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragProtocol&quot; href=&quot;enum GdkDragProtocol&quot; title=&gt;GdkDragProtocol&lt;/a&gt; *protocol);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_get_protocol_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-get-protocol-for-display</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Finds out the DND protocol supported by a window.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&quot;link&quot;&gt;GdkNativeWindow&lt;/a&gt; gdk_drag_get_protocol_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&quot;link&quot;&gt;GdkNativeWindow&lt;/a&gt; xid,
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragProtocol&quot; href=&quot;enum GdkDragProtocol&quot; title=&gt;GdkDragProtocol&lt;/a&gt; *protocol);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_PROTO_MOTIF</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragProtocol</Anchor>
  <NodeRef refid="670"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_PROTO_MOTIF&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragProtocol</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_PROTO_XDND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragProtocol</Anchor>
  <NodeRef refid="670"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_PROTO_XDND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragProtocol</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_PROTO_ROOTWIN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragProtocol</Anchor>
  <NodeRef refid="670"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_PROTO_ROOTWIN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragProtocol</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_PROTO_NONE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragProtocol</Anchor>
  <NodeRef refid="670"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_PROTO_NONE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragProtocol</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_PROTO_WIN32_DROPFILES</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragProtocol</Anchor>
  <NodeRef refid="670"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_PROTO_WIN32_DROPFILES&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragProtocol</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_PROTO_OLE2</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragProtocol</Anchor>
  <NodeRef refid="670"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_PROTO_OLE2&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragProtocol</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAG_PROTO_LOCAL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragProtocol</Anchor>
  <NodeRef refid="670"/>
  <Declaration type="html">&lt;pre&gt;GDK_DRAG_PROTO_LOCAL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragProtocol</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDragProtocol</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragProtocol</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Used in &lt;a class=&quot;link&quot; href=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; title=&quot;GdkDragContext&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDragContext&lt;/span&gt;&lt;/a&gt; to indicate the protocol according to
which DND is done.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_DRAG_PROTO_MOTIF,
    GDK_DRAG_PROTO_XDND,
    GDK_DRAG_PROTO_ROOTWIN,
    GDK_DRAG_PROTO_NONE,
    GDK_DRAG_PROTO_WIN32_DROPFILES,
    GDK_DRAG_PROTO_OLE2,
    GDK_DRAG_PROTO_LOCAL  
} GdkDragProtocol;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_context_unref</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-context-unref</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Deprecated function; use &lt;a
href=&quot;/usr/share/gtk-doc/html/gobject/gobject-The-Base-Object-Type.html#g-object-unref&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_object_unref()&lt;/code&gt;&lt;/a&gt; instead.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drag_context_unref (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&gt;GdkDragContext&lt;/a&gt; *context);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_drag_context_unref&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDragContext</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragContext</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">A &lt;span class=&quot;structname&quot;&gt;GdkDragContext&lt;/span&gt; holds information about a 
drag in progress. It is used on both source and destination sides.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GObject parent_instance;
    GdkDragProtocol protocol;
    gboolean is_source;
    GdkWindow *source_window;
    GdkWindow *dest_window;
    GList *targets;
    GdkDragAction actions;
    GdkDragAction suggested_action;
    GdkDragAction action;
    guint32 start_time;
} GdkDragContext;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ACTION_DEFAULT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragAction</Anchor>
  <NodeRef refid="673"/>
  <Declaration type="html">&lt;pre&gt;GDK_ACTION_DEFAULT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragAction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ACTION_COPY</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragAction</Anchor>
  <NodeRef refid="673"/>
  <Declaration type="html">&lt;pre&gt;GDK_ACTION_COPY&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragAction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ACTION_MOVE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragAction</Anchor>
  <NodeRef refid="673"/>
  <Declaration type="html">&lt;pre&gt;GDK_ACTION_MOVE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragAction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ACTION_LINK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragAction</Anchor>
  <NodeRef refid="673"/>
  <Declaration type="html">&lt;pre&gt;GDK_ACTION_LINK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragAction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ACTION_PRIVATE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragAction</Anchor>
  <NodeRef refid="673"/>
  <Declaration type="html">&lt;pre&gt;GDK_ACTION_PRIVATE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragAction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ACTION_ASK</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragAction</Anchor>
  <NodeRef refid="673"/>
  <Declaration type="html">&lt;pre&gt;GDK_ACTION_ASK&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkDragAction</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDragAction</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>GdkDragAction</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Used in &lt;a class=&quot;link&quot; href=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; title=&quot;GdkDragContext&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDragContext&lt;/span&gt;&lt;/a&gt; to indicate what the destination
should do with the dropped data.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_ACTION_DEFAULT = 1 &amp;lt;&amp;lt; 0,
    GDK_ACTION_COPY = 1 &amp;lt;&amp;lt; 1,
    GDK_ACTION_MOVE = 1 &amp;lt;&amp;lt; 2,
    GDK_ACTION_LINK = 1 &amp;lt;&amp;lt; 3,
    GDK_ACTION_PRIVATE = 1 &amp;lt;&amp;lt; 4,
    GDK_ACTION_ASK = 1 &amp;lt;&amp;lt; 5 
} GdkDragAction;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_status</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-status</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Selects one of the actions offered by the drag source.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_drag_status (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&quot;link&quot;&gt;GdkDragContext&lt;/a&gt; *context,
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragAction&quot; href=&quot;enum GdkDragAction&quot; title=&gt;GdkDragAction&lt;/a&gt; action,
    guint32 time_);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_drag_drop_succeeded</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Drag-and-Drop.html</Path>
  <Anchor>gdk-drag-drop-succeeded</Anchor>
  <NodeRef refid="23"/>
  <Abstract type="html">Returns wether the dropped data has been successfully 
transferred. This function is intended to be used while 
handling a &lt;a class=&quot;link&quot; href=&quot;gdk-Events.html#GDK-DROP-FINISHED:CAPS&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_DROP_FINISHED&lt;/code&gt;&lt;/a&gt; event, its return value is
meaningless at other times.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_drag_drop_succeeded (
    &lt;a class=&quot;gdk-Drag-and-Drop.html#GdkDragContext&quot; href=&quot;GdkDragContext&quot; title=&gt;GdkDragContext&lt;/a&gt; *context);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkAtom</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>GdkAtom</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">An opaque type representing a string as an index into a table
of strings on the X server.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkAtom GdkAtom;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ATOM_TO_POINTER</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>GDK-ATOM-TO-POINTER:CAPS</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Converts a &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; into a pointer type. </Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_ATOM_TO_POINTER(atom) (atom)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_POINTER_TO_ATOM</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>GDK-POINTER-TO-ATOM:CAPS</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Extracts a &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; from a pointer. The &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; must have been
stored in the pointer with &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GDK-ATOM-TO-POINTER:CAPS&quot; title=&quot;GDK_ATOM_TO_POINTER()&quot;&gt;&lt;code class=&quot;function&quot;&gt;GDK_ATOM_TO_POINTER()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_POINTER_TO_ATOM(ptr) ((GdkAtom)(ptr))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_NONE</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>GDK-NONE:CAPS</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">A null value for &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt;, used in a similar way as &lt;code class=&quot;literal&quot;&gt;None&lt;/code&gt;
in the Xlib API.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_NONE _GDK_MAKE_ATOM (0)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_property_to_text_list</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-text-property-to-text-list</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Converts a text string from the encoding as it is stored in
a property into an array of strings in the encoding of
the current local. (The elements of the array represent
the nul-separated elements of the original text string.)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_text_property_to_text_list (
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; encoding,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot; &gt;gint&lt;/a&gt; format,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *text,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; length,
    &lt;a href= &gt;gchar&lt;/a&gt; ***list);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_property_to_text_list_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-text-property-to-text-list-for-display</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Convert a text string from the encoding as it is stored 
in a property into an array of strings in the encoding of
the current locale. (The elements of the array represent the
nul-separated elements of the original text string.)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_text_property_to_text_list_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; encoding,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot; &gt;gint&lt;/a&gt; format,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *text,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; length,
    &lt;a href= &gt;gchar&lt;/a&gt; ***list);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_free_text_list</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-free-text-list</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Frees the array of strings created by
&lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#gdk-text-property-to-text-list&quot; title=&quot;gdk_text_property_to_text_list ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_text_property_to_text_list()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_free_text_list (
    &lt;a href= &gt;gchar&lt;/a&gt; **list);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_property_to_utf8_list</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-text-property-to-utf8-list</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Convert a text property in the giving encoding to
a list of UTF-8 strings.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_text_property_to_utf8_list (
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; encoding,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot; &gt;gint&lt;/a&gt; format,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *text,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; length,
    &lt;a href= &gt;gchar&lt;/a&gt; ***list);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_text_property_to_utf8_list_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-text-property-to-utf8-list-for-display</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Converts a text property in the given encoding to
a list of UTF-8 strings.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_text_property_to_utf8_list_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; encoding,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot; &gt;gint&lt;/a&gt; format,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *text,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; length,
    &lt;a href= &gt;gchar&lt;/a&gt; ***list);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_string_to_compound_text</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-string-to-compound-text</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Converts a string from the encoding of the current locale 
into a form suitable for storing in a window property.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gint&lt;/a&gt; gdk_string_to_compound_text (
    const &lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt; *str,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; *encoding,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot; &gt;gint&lt;/a&gt; *format,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; **ctext,
    &lt;a href= &gt;gint&lt;/a&gt; *length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_string_to_compound_text_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-string-to-compound-text-for-display</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Convert a string from the encoding of the current 
locale into a form suitable for storing in a window property.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; gdk_string_to_compound_text_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    const &lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt; *str,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; *encoding,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot; &gt;gint&lt;/a&gt; *format,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; **ctext,
    &lt;a href= &gt;gint&lt;/a&gt; *length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_free_compound_text</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-free-compound-text</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Frees the data returned from &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#gdk-string-to-compound-text&quot; title=&quot;gdk_string_to_compound_text ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_string_to_compound_text()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_free_compound_text (
    &lt;a href= &gt;guchar&lt;/a&gt; *ctext);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_utf8_to_string_target</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-utf8-to-string-target</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Convert an UTF-8 string into the best possible representation
as a STRING. The representation of characters not in STRING
is not specified; it may be as pseudo-escape sequences
\x{ABCD}, or it may be in some other form of approximation.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gchar&lt;/a&gt;* gdk_utf8_to_string_target (
    const &lt;a href= &gt;gchar&lt;/a&gt; *str);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_utf8_to_compound_text</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-utf8-to-compound-text</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Convert from UTF-8 to compound text.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot; &gt;gboolean&lt;/a&gt; gdk_utf8_to_compound_text (
    const &lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt; *str,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; *encoding,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot; &gt;gint&lt;/a&gt; *format,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; **ctext,
    &lt;a href= &gt;gint&lt;/a&gt; *length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_utf8_to_compound_text_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-utf8-to-compound-text-for-display</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Converts from UTF-8 to compound text.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_utf8_to_compound_text_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    const &lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt; *str,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; *encoding,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot; &gt;gint&lt;/a&gt; *format,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; **ctext,
    &lt;a href= &gt;gint&lt;/a&gt; *length);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_atom_intern</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-atom-intern</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Finds or creates an atom corresponding to a given string.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkAtom&lt;/a&gt; gdk_atom_intern (
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot; &gt;gchar&lt;/a&gt; *atom_name,
    &lt;a href= &gt;gboolean&lt;/a&gt; only_if_exists);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_atom_intern_static_string</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-atom-intern-static-string</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Finds or creates an atom corresponding to a given string.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkAtom&lt;/a&gt; gdk_atom_intern_static_string (
    const &lt;a href= &gt;gchar&lt;/a&gt; *atom_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_atom_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-atom-name</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Determines the string corresponding to an atom.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt;* gdk_atom_name (
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; atom);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_property_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-property-get</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Retrieves a portion of the contents of a property. If the
property does not exist, then the function returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#FALSE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;FALSE&lt;/code&gt;&lt;/a&gt;,
and &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GDK-NONE:CAPS&quot; title=&quot;GDK_NONE&quot;&gt;&lt;code class=&quot;literal&quot;&gt;GDK_NONE&lt;/code&gt;&lt;/a&gt; will be stored in &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;actual_property_type&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_property_get (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; property,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gulong&quot;&gt;GdkAtom&lt;/a&gt; type,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gulong&quot; &gt;gulong&lt;/a&gt; offset,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gulong&lt;/a&gt; length,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; pdelete,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; *actual_property_type,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *actual_format,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot; &gt;gint&lt;/a&gt; *actual_length,
    &lt;a href= &gt;guchar&lt;/a&gt; **data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_property_change</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-property-change</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Changes the contents of a property on a window.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_property_change (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; property,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAtom&lt;/a&gt; type,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; format,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkPropMode&quot; href=&quot;enum GdkPropMode&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guchar&quot;&gt;GdkPropMode&lt;/a&gt; mode,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guchar&lt;/a&gt; *data,
    &lt;a href= &gt;gint&lt;/a&gt; nelements);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROP_MODE_REPLACE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>GdkPropMode</Anchor>
  <NodeRef refid="696"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROP_MODE_REPLACE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkPropMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROP_MODE_PREPEND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>GdkPropMode</Anchor>
  <NodeRef refid="696"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROP_MODE_PREPEND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkPropMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PROP_MODE_APPEND</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>GdkPropMode</Anchor>
  <NodeRef refid="696"/>
  <Declaration type="html">&lt;pre&gt;GDK_PROP_MODE_APPEND&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkPropMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPropMode</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>GdkPropMode</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Describes how existing data is combined with new data when
using &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#gdk-property-change&quot; title=&quot;gdk_property_change ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_property_change()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_PROP_MODE_REPLACE,
    GDK_PROP_MODE_PREPEND,
    GDK_PROP_MODE_APPEND 
} GdkPropMode;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_property_delete</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Properties-and-Atoms.html</Path>
  <Anchor>gdk-property-delete</Anchor>
  <NodeRef refid="24"/>
  <Abstract type="html">Deletes a property from a window.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_property_delete (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; property);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_THREADS_ENTER</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>GDK-THREADS-ENTER:CAPS</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">This macro marks the beginning of a critical section in which GDK and
GTK+ functions can be called safely and without causing race
conditions.  Only one thread at a time can be in such a critial
section. The macro expands to a no-op if &lt;span class=&quot;type&quot;&gt;G_THREADS_ENABLED&lt;/span&gt; has not
been defined. Typically &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-enter&quot; title=&quot;gdk_threads_enter ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_enter()&lt;/code&gt;&lt;/a&gt; should be used instead of
this macro.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_THREADS_ENTER()&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_THREADS_LEAVE</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>GDK-THREADS-LEAVE:CAPS</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">This macro marks the end of a critical section 
begun with &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#GDK-THREADS-ENTER:CAPS&quot; title=&quot;GDK_THREADS_ENTER()&quot;&gt;&lt;span class=&quot;type&quot;&gt;GDK_THREADS_ENTER&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_THREADS_LEAVE()&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_init</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-init</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">Initializes GDK so that it can be used from multiple threads
in conjunction with &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-enter&quot; title=&quot;gdk_threads_enter ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_enter()&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-leave&quot; title=&quot;gdk_threads_leave ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_leave()&lt;/code&gt;&lt;/a&gt;.
&lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Threads.html#g-thread-init&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_thread_init()&lt;/code&gt;&lt;/a&gt; must be called previous to this function.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_threads_init (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_enter</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-enter</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">This macro marks the beginning of a critical section in which GDK and
GTK+ functions can be called safely and without causing race
conditions.  Only one thread at a time can be in such a critial
section.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_threads_enter (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_leave</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-leave</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">Leaves a critical region begun with &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-enter&quot; title=&quot;gdk_threads_enter ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_enter()&lt;/code&gt;&lt;/a&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_threads_leave (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_mutex</Name>
   <Type>data</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-mutex</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">The &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Threads.html#GMutex&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GMutex&lt;/span&gt;&lt;/a&gt; used to implement the critical region for
&lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-enter&quot; title=&quot;gdk_threads_enter ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_enter()&lt;/code&gt;&lt;/a&gt;/&lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-leave&quot; title=&quot;gdk_threads_leave ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_leave()&lt;/code&gt;&lt;/a&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;extern GMutex *gdk_threads_mutex;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_threads_mutex&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_set_lock_functions</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-set-lock-functions</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">Allows the application to replace the standard method that
GDK uses to protect its data structures. Normally, GDK
creates a single &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Threads.html#GMutex&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GMutex&lt;/span&gt;&lt;/a&gt; that is locked by &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-enter&quot; title=&quot;gdk_threads_enter ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_enter()&lt;/code&gt;&lt;/a&gt;,
and released by &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-leave&quot; title=&quot;gdk_threads_leave ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_leave()&lt;/code&gt;&lt;/a&gt;; using this function an
application provides, instead, a function &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;enter_fn&lt;/code&gt;&lt;/em&gt; that is
called by &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-enter&quot; title=&quot;gdk_threads_enter ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_enter()&lt;/code&gt;&lt;/a&gt; and a function &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;leave_fn&lt;/code&gt;&lt;/em&gt; that is
called by &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-leave&quot; title=&quot;gdk_threads_leave ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_leave()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_threads_set_lock_functions (
    &lt;a href=&quot;/usr/share/gtk-doc/html/gobject/gobject-Closures.html#GCallback&quot; &gt;GCallback&lt;/a&gt; enter_fn,
    &lt;a href= &gt;GCallback&lt;/a&gt; leave_fn);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_add_idle</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-add-idle</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">A wrapper for the common usage of &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-add-idle-full&quot; title=&quot;gdk_threads_add_idle_full ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_add_idle_full()&lt;/code&gt;&lt;/a&gt; 
assigning the default priority, &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT-IDLE:CAPS&quot;
&gt;&lt;span class=&quot;type&quot;&gt;G_PRIORITY_DEFAULT_IDLE&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#GSourceFunc&quot; &gt;guint&lt;/a&gt; gdk_threads_add_idle (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;GSourceFunc&lt;/a&gt; function,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_add_idle_full</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-add-idle-full</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">Adds a function to be called whenever there are no higher priority
events pending.  If the function returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#FALSE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;FALSE&lt;/code&gt;&lt;/a&gt; it is automatically
removed from the list of event sources and will not be called again.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guint&lt;/a&gt; gdk_threads_add_idle_full (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#GSourceFunc&quot; &gt;gint&lt;/a&gt; priority,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;GSourceFunc&lt;/a&gt; function,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Datasets.html#GDestroyNotify&quot; &gt;gpointer&lt;/a&gt; data,
    &lt;a href= &gt;GDestroyNotify&lt;/a&gt; notify);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_add_timeout</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-add-timeout</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">A wrapper for the common usage of &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-add-timeout-full&quot; title=&quot;gdk_threads_add_timeout_full ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_add_timeout_full()&lt;/code&gt;&lt;/a&gt; 
assigning the default priority, &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS&quot;
&gt;&lt;span class=&quot;type&quot;&gt;G_PRIORITY_DEFAULT&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;guint&lt;/a&gt; gdk_threads_add_timeout (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#GSourceFunc&quot; &gt;guint&lt;/a&gt; interval,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;GSourceFunc&lt;/a&gt; function,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_add_timeout_full</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-add-timeout-full</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">Sets a function to be called at regular intervals holding the GDK lock,
with the given priority.  The function is called repeatedly until it 
returns &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#FALSE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;FALSE&lt;/code&gt;&lt;/a&gt;, at which point the timeout is automatically destroyed 
and the function will not be called again.  The &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/em&gt; function is
called when the timeout is destroyed.  The first call to the
function will be at the end of the first &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;interval&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guint&lt;/a&gt; gdk_threads_add_timeout_full (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;gint&lt;/a&gt; priority,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#GSourceFunc&quot; &gt;guint&lt;/a&gt; interval,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;GSourceFunc&lt;/a&gt; function,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Datasets.html#GDestroyNotify&quot; &gt;gpointer&lt;/a&gt; data,
    &lt;a href= &gt;GDestroyNotify&lt;/a&gt; notify);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_add_timeout_seconds</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-add-timeout-seconds</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">A wrapper for the common usage of &lt;a class=&quot;link&quot; href=&quot;gdk-Threads.html#gdk-threads-add-timeout-seconds-full&quot; title=&quot;gdk_threads_add_timeout_seconds_full ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_threads_add_timeout_seconds_full()&lt;/code&gt;&lt;/a&gt; 
assigning the default priority, &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS&quot;
&gt;&lt;span class=&quot;type&quot;&gt;G_PRIORITY_DEFAULT&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;guint&lt;/a&gt; gdk_threads_add_timeout_seconds (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#GSourceFunc&quot; &gt;guint&lt;/a&gt; interval,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;GSourceFunc&lt;/a&gt; function,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_threads_add_timeout_seconds_full</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Threads.html</Path>
  <Anchor>gdk-threads-add-timeout-seconds-full</Anchor>
  <NodeRef refid="25"/>
  <Abstract type="html">A variant of &lt;code class=&quot;function&quot;&gt;gdk_threads_add_timout_full()&lt;/code&gt; with second-granularity.
See &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#g-timeout-add-seconds-full&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_timeout_add_seconds_full()&lt;/code&gt;&lt;/a&gt; for a discussion of why it is
a good idea to use this function if you don't need finer granularity.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;guint&lt;/a&gt; gdk_threads_add_timeout_seconds_full (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;gint&lt;/a&gt; priority,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-The-Main-Event-Loop.html#GSourceFunc&quot; &gt;guint&lt;/a&gt; interval,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot; &gt;GSourceFunc&lt;/a&gt; function,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Datasets.html#GDestroyNotify&quot; &gt;gpointer&lt;/a&gt; data,
    &lt;a href= &gt;GDestroyNotify&lt;/a&gt; notify);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>pthread.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_input_add_full</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input.html</Path>
  <Anchor>gdk-input-add-full</Anchor>
  <NodeRef refid="26"/>
  <Abstract type="html">Establish a callback when a condition becomes true on
a file descriptor.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; gdk_input_add_full (
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; source,
    &lt;a class=&quot;gdk-Input.html#GdkInputCondition&quot; href=&quot;enum GdkInputCondition&quot; title=&quot;link&quot;&gt;GdkInputCondition&lt;/a&gt; condition,
    &lt;a class=&quot;gdk-Input.html#GdkInputFunction&quot; href=&quot;GdkInputFunction ()&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkInputFunction&lt;/a&gt; function,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Datasets.html#GDestroyNotify&quot; &gt;gpointer&lt;/a&gt; data,
    &lt;a href= &gt;GDestroyNotify&lt;/a&gt; destroy);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_input_add_full&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-IO-Channels.html#g-io-add-watch-full&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_io_add_watch_full()&lt;/code&gt;&lt;/a&gt; on a &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-IO-Channels.html#GIOChannel&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GIOChannel&lt;/span&gt;&lt;/a&gt;</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_INPUT_READ</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input.html</Path>
  <Anchor>GdkInputCondition</Anchor>
  <NodeRef refid="712"/>
  <Declaration type="html">&lt;pre&gt;GDK_INPUT_READ&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputCondition</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_INPUT_WRITE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input.html</Path>
  <Anchor>GdkInputCondition</Anchor>
  <NodeRef refid="712"/>
  <Declaration type="html">&lt;pre&gt;GDK_INPUT_WRITE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputCondition</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_INPUT_EXCEPTION</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input.html</Path>
  <Anchor>GdkInputCondition</Anchor>
  <NodeRef refid="712"/>
  <Declaration type="html">&lt;pre&gt;GDK_INPUT_EXCEPTION&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputCondition</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkInputCondition</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input.html</Path>
  <Anchor>GdkInputCondition</Anchor>
  <NodeRef refid="26"/>
  <Abstract type="html">A set of bit flags used to specify conditions for which
an input callback will be triggered. The three members
of this enumeration correspond to the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;readfds&lt;/code&gt;&lt;/em&gt;, 
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;writefds&lt;/code&gt;&lt;/em&gt;, and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;exceptfds&lt;/code&gt;&lt;/em&gt; arguments to the 
&lt;code class=&quot;function&quot;&gt;select&lt;/code&gt; system call.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_INPUT_READ = 1 &amp;lt;&amp;lt; 0,
    GDK_INPUT_WRITE = 1 &amp;lt;&amp;lt; 1,
    GDK_INPUT_EXCEPTION = 1 &amp;lt;&amp;lt; 2 
} GdkInputCondition;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkInputFunction</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input.html</Path>
  <Anchor>GdkInputFunction</Anchor>
  <NodeRef refid="26"/>
  <Abstract type="html">A callback function that will be called when some condition
occurs.</Abstract>
  <Declaration type="html">&lt;pre&gt;void (
    *GdkInputFunction) (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gpointer&lt;/a&gt; data,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; source,
    &lt;a class=&quot;gdk-Input.html#GdkInputCondition&quot; href=&quot;enum GdkInputCondition&quot; title=&gt;GdkInputCondition&lt;/a&gt; condition);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDestroyNotify</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input.html</Path>
  <Anchor>GdkDestroyNotify</Anchor>
  <NodeRef refid="26"/>
  <Abstract type="html">A callback function called when a piece of user data is 
no longer being stored by GDK. Will typically free the
structure or object that &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/em&gt; points to.</Abstract>
  <Declaration type="html">&lt;pre&gt;void (
    *GdkDestroyNotify) (
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GdkDestroyNotify&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_input_add</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input.html</Path>
  <Anchor>gdk-input-add</Anchor>
  <NodeRef refid="26"/>
  <Abstract type="html">Establish a callback when a condition becomes true on
a file descriptor.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; gdk_input_add (
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; source,
    &lt;a class=&quot;gdk-Input.html#GdkInputCondition&quot; href=&quot;enum GdkInputCondition&quot; title=&quot;link&quot;&gt;GdkInputCondition&lt;/a&gt; condition,
    &lt;a class=&quot;gdk-Input.html#GdkInputFunction&quot; href=&quot;GdkInputFunction ()&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gpointer&quot;&gt;GdkInputFunction&lt;/a&gt; function,
    &lt;a href= &gt;gpointer&lt;/a&gt; data);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_input_add&lt;/code&gt; is deprecated and should not be used in newly-written code. Use &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-IO-Channels.html#g-io-add-watch&quot;
&gt;&lt;code class=&quot;function&quot;&gt;g_io_add_watch()&lt;/code&gt;&lt;/a&gt; on a &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-IO-Channels.html#GIOChannel&quot;
&gt;&lt;span class=&quot;type&quot;&gt;GIOChannel&lt;/span&gt;&lt;/a&gt;</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_input_remove</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input.html</Path>
  <Anchor>gdk-input-remove</Anchor>
  <NodeRef refid="26"/>
  <Abstract type="html">Remove a callback added with &lt;a class=&quot;link&quot; href=&quot;gdk-Input.html#gdk-input-add&quot; title=&quot;gdk_input_add ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_input_add()&lt;/code&gt;&lt;/a&gt; or 
&lt;a class=&quot;link&quot; href=&quot;gdk-Input.html#gdk-input-add-full&quot; title=&quot;gdk_input_add_full ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_input_add_full()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_input_remove (
    &lt;a href= &gt;gint&lt;/a&gt; tag);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_input_remove&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDevice</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkDevice</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">A &lt;span class=&quot;structname&quot;&gt;GdkDevice&lt;/span&gt; structure contains
a detailed description of an extended input device. All
fields are read-only; but you can use &lt;a class=&quot;link&quot; href=&quot;gdk-Input-Devices.html#gdk-device-set-source&quot; title=&quot;gdk_device_set_source ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_device_set_source()&lt;/code&gt;&lt;/a&gt;,
&lt;a class=&quot;link&quot; href=&quot;gdk-Input-Devices.html#gdk-device-set-mode&quot; title=&quot;gdk_device_set_mode ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_device_set_mode()&lt;/code&gt;&lt;/a&gt;, &lt;a class=&quot;link&quot; href=&quot;gdk-Input-Devices.html#gdk-device-set-key&quot; title=&quot;gdk_device_set_key ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_device_set_key()&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Input-Devices.html#gdk-device-set-axis-use&quot; title=&quot;gdk_device_set_axis_use ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_device_set_axis_use()&lt;/code&gt;&lt;/a&gt;
to configure various aspects of the device.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GObject parent_instance;
    gchar *name;
    GdkInputSource source;
    GdkInputMode mode;
    gboolean has_cursor;
    gint num_axes;
    GdkDeviceAxis *axes;
    gint num_keys;
    GdkDeviceKey *keys;
} GdkDevice;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SOURCE_MOUSE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkInputSource</Anchor>
  <NodeRef refid="718"/>
  <Declaration type="html">&lt;pre&gt;GDK_SOURCE_MOUSE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputSource</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SOURCE_PEN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkInputSource</Anchor>
  <NodeRef refid="718"/>
  <Declaration type="html">&lt;pre&gt;GDK_SOURCE_PEN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputSource</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SOURCE_ERASER</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkInputSource</Anchor>
  <NodeRef refid="718"/>
  <Declaration type="html">&lt;pre&gt;GDK_SOURCE_ERASER&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputSource</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SOURCE_CURSOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkInputSource</Anchor>
  <NodeRef refid="718"/>
  <Declaration type="html">&lt;pre&gt;GDK_SOURCE_CURSOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputSource</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkInputSource</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkInputSource</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">An enumeration describing the type of an input device
in general terms.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_SOURCE_MOUSE,
    GDK_SOURCE_PEN,
    GDK_SOURCE_ERASER,
    GDK_SOURCE_CURSOR 
} GdkInputSource;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MODE_DISABLED</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkInputMode</Anchor>
  <NodeRef refid="719"/>
  <Declaration type="html">&lt;pre&gt;GDK_MODE_DISABLED&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MODE_SCREEN</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkInputMode</Anchor>
  <NodeRef refid="719"/>
  <Declaration type="html">&lt;pre&gt;GDK_MODE_SCREEN&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_MODE_WINDOW</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkInputMode</Anchor>
  <NodeRef refid="719"/>
  <Declaration type="html">&lt;pre&gt;GDK_MODE_WINDOW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkInputMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkInputMode</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkInputMode</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">An enumeration that describes the mode of an input device.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_MODE_DISABLED,
    GDK_MODE_SCREEN,
    GDK_MODE_WINDOW 
} GdkInputMode;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDeviceKey</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkDeviceKey</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">The &lt;span class=&quot;structname&quot;&gt;GdkDeviceKey&lt;/span&gt; structure contains information
about the mapping of one device macro button onto a normal X key event. 
It has the following fields:</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    guint keyval;
    GdkModifierType modifiers;
} GdkDeviceKey;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkDeviceAxis</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkDeviceAxis</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">The &lt;span class=&quot;structname&quot;&gt;GdkDeviceAxis&lt;/span&gt; structure contains information
about the range and mapping of a device axis.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    GdkAxisUse use;
    gdouble min;
    gdouble max;
} GdkDeviceAxis;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AXIS_IGNORE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkAxisUse</Anchor>
  <NodeRef refid="722"/>
  <Declaration type="html">&lt;pre&gt;GDK_AXIS_IGNORE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkAxisUse</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AXIS_X</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkAxisUse</Anchor>
  <NodeRef refid="722"/>
  <Declaration type="html">&lt;pre&gt;GDK_AXIS_X&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkAxisUse</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AXIS_Y</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkAxisUse</Anchor>
  <NodeRef refid="722"/>
  <Declaration type="html">&lt;pre&gt;GDK_AXIS_Y&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkAxisUse</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AXIS_PRESSURE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkAxisUse</Anchor>
  <NodeRef refid="722"/>
  <Declaration type="html">&lt;pre&gt;GDK_AXIS_PRESSURE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkAxisUse</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AXIS_XTILT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkAxisUse</Anchor>
  <NodeRef refid="722"/>
  <Declaration type="html">&lt;pre&gt;GDK_AXIS_XTILT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkAxisUse</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AXIS_YTILT</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkAxisUse</Anchor>
  <NodeRef refid="722"/>
  <Declaration type="html">&lt;pre&gt;GDK_AXIS_YTILT&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkAxisUse</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AXIS_WHEEL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkAxisUse</Anchor>
  <NodeRef refid="722"/>
  <Declaration type="html">&lt;pre&gt;GDK_AXIS_WHEEL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkAxisUse</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_AXIS_LAST</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkAxisUse</Anchor>
  <NodeRef refid="722"/>
  <Declaration type="html">&lt;pre&gt;GDK_AXIS_LAST&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkAxisUse</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkAxisUse</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkAxisUse</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">An enumeration describing the way in which a device
axis (valuator) maps onto the predefined valuator
types that GTK+ understands.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_AXIS_IGNORE,
    GDK_AXIS_X,
    GDK_AXIS_Y,
    GDK_AXIS_PRESSURE,
    GDK_AXIS_XTILT,
    GDK_AXIS_YTILT,
    GDK_AXIS_WHEEL,
    GDK_AXIS_LAST 
} GdkAxisUse;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_devices_list</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-devices-list</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Returns the list of available input devices for the default display.
The list is statically allocated and should not be freed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;GList&lt;/a&gt;* gdk_devices_list (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_device_set_source</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-device-set-source</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Sets the source type for an input device.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_device_set_source (
    &lt;a class=&quot;gdk-Input-Devices.html#GdkDevice&quot; href=&quot;GdkDevice&quot; title=&quot;link&quot;&gt;GdkDevice&lt;/a&gt; *device,
    &lt;a class=&quot;gdk-Input-Devices.html#GdkInputSource&quot; href=&quot;enum GdkInputSource&quot; title=&gt;GdkInputSource&lt;/a&gt; source);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_device_set_mode</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-device-set-mode</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Sets a the mode of an input device. The mode controls if the 
device is active and whether the device's range is mapped to the
entire screen or to a single window.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_device_set_mode (
    &lt;a class=&quot;gdk-Input-Devices.html#GdkDevice&quot; href=&quot;GdkDevice&quot; title=&quot;link&quot;&gt;GdkDevice&lt;/a&gt; *device,
    &lt;a class=&quot;gdk-Input-Devices.html#GdkInputMode&quot; href=&quot;enum GdkInputMode&quot; title=&gt;GdkInputMode&lt;/a&gt; mode);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_device_set_key</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-device-set-key</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Specifies the X key event to generate when a macro button of a device
is pressed.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_device_set_key (
    &lt;a class=&quot;gdk-Input-Devices.html#GdkDevice&quot; href=&quot;GdkDevice&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkDevice&lt;/a&gt; *device,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;guint&lt;/a&gt; index_,
    &lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; keyval,
    &lt;a class=&quot;gdk-Windows.html#GdkModifierType&quot; href=&quot;enum GdkModifierType&quot; title=&gt;GdkModifierType&lt;/a&gt; modifiers);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_device_set_axis_use</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-device-set-axis-use</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Specifies how an axis of a device is used.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_device_set_axis_use (
    &lt;a class=&quot;gdk-Input-Devices.html#GdkDevice&quot; href=&quot;GdkDevice&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot;&gt;GdkDevice&lt;/a&gt; *device,
    &lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; index_,
    &lt;a class=&quot;gdk-Input-Devices.html#GdkAxisUse&quot; href=&quot;enum GdkAxisUse&quot; title=&gt;GdkAxisUse&lt;/a&gt; use);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_device_get_core_pointer</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-device-get-core-pointer</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Returns the core pointer device for the default display.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Input-Devices.html#GdkDevice&quot; href=&quot;GdkDevice&quot; title=&gt;GdkDevice&lt;/a&gt;* gdk_device_get_core_pointer (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_device_get_state</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-device-get-state</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Gets the current state of a device.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_device_get_state (
    &lt;a class=&quot;gdk-Input-Devices.html#GdkDevice&quot; href=&quot;GdkDevice&quot; title=&quot;link&quot;&gt;GdkDevice&lt;/a&gt; *device,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;link&quot; &gt;gdouble&lt;/a&gt; *axes,
    &lt;a class=&quot;gdk-Windows.html#GdkModifierType&quot; href=&quot;enum GdkModifierType&quot; title=&gt;GdkModifierType&lt;/a&gt; *mask);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_device_get_history</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-device-get-history</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Obtains the motion history for a device; given a starting and
ending timestamp, return all events in the motion history for
the device in the given range of time. Some windowing systems
do not support motion history, in which case, &lt;a
href=&quot;/usr/share/gtk-doc/html/glib/glib-Standard-Macros.html#FALSE:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;FALSE&lt;/code&gt;&lt;/a&gt; will
be returned. (This is not distinguishable from the case where
motion history is supported and no events were found.)</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_device_get_history (
    &lt;a class=&quot;gdk-Input-Devices.html#GdkDevice&quot; href=&quot;GdkDevice&quot; title=&quot;link&quot;&gt;GdkDevice&lt;/a&gt; *device,
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt; *window,
    guint32 start,
    guint32 stop,
    &lt;a class=&quot;gdk-Input-Devices.html#GdkTimeCoord&quot; href=&quot;GdkTimeCoord&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkTimeCoord&lt;/a&gt; ***events,
    &lt;a href= &gt;gint&lt;/a&gt; *n_events);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_device_free_history</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-device-free-history</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Frees an array of &lt;a class=&quot;link&quot; href=&quot;gdk-Input-Devices.html#GdkTimeCoord&quot; title=&quot;GdkTimeCoord&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkTimeCoord&lt;/span&gt;&lt;/a&gt; that was returned by &lt;a class=&quot;link&quot; href=&quot;gdk-Input-Devices.html#gdk-device-get-history&quot; title=&quot;gdk_device_get_history ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_device_get_history()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_device_free_history (
    &lt;a class=&quot;gdk-Input-Devices.html#GdkTimeCoord&quot; href=&quot;GdkTimeCoord&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkTimeCoord&lt;/a&gt; **events,
    &lt;a href= &gt;gint&lt;/a&gt; n_events);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkTimeCoord</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkTimeCoord</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">The &lt;a class=&quot;link&quot; href=&quot;gdk-Input-Devices.html#GdkTimeCoord&quot; title=&quot;GdkTimeCoord&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkTimeCoord&lt;/span&gt;&lt;/a&gt; structure stores a single event in a
motion history. It contains the following fields:</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    guint32 time;
    gdouble axes[GDK_MAX_TIMECOORD_AXES];
} GdkTimeCoord;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_device_get_axis</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-device-get-axis</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Interprets an array of double as axis values for a given device,
and locates the value in the array for a given axis use.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_device_get_axis (
    &lt;a class=&quot;gdk-Input-Devices.html#GdkDevice&quot; href=&quot;GdkDevice&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot;&gt;GdkDevice&lt;/a&gt; *device,
    &lt;a href=&quot;link&quot; &gt;gdouble&lt;/a&gt; *axes,
    &lt;a class=&quot;gdk-Input-Devices.html#GdkAxisUse&quot; href=&quot;enum GdkAxisUse&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gdouble&quot;&gt;GdkAxisUse&lt;/a&gt; use,
    &lt;a href= &gt;gdouble&lt;/a&gt; *value);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_input_set_extension_events</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>gdk-input-set-extension-events</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">Turns extension events on or off for a particular window,
and specifies the event mask for extension events.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_input_set_extension_events (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;link&quot; &gt;gint&lt;/a&gt; mask,
    &lt;a class=&quot;gdk-Input-Devices.html#GdkExtensionMode&quot; href=&quot;enum GdkExtensionMode&quot; title=&gt;GdkExtensionMode&lt;/a&gt; mode);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_EXTENSION_EVENTS_NONE</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkExtensionMode</Anchor>
  <NodeRef refid="735"/>
  <Declaration type="html">&lt;pre&gt;GDK_EXTENSION_EVENTS_NONE&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkExtensionMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_EXTENSION_EVENTS_ALL</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkExtensionMode</Anchor>
  <NodeRef refid="735"/>
  <Declaration type="html">&lt;pre&gt;GDK_EXTENSION_EVENTS_ALL&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkExtensionMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_EXTENSION_EVENTS_CURSOR</Name>
   <Type>econst</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkExtensionMode</Anchor>
  <NodeRef refid="735"/>
  <Declaration type="html">&lt;pre&gt;GDK_EXTENSION_EVENTS_CURSOR&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <RelatedTokens>
   <TokenIdentifier>
    <Name>GdkExtensionMode</Name>
    <Type>tdef</Type>
    <APILanguage>c</APILanguage>
   </TokenIdentifier>
  </RelatedTokens>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkExtensionMode</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Input-Devices.html</Path>
  <Anchor>GdkExtensionMode</Anchor>
  <NodeRef refid="27"/>
  <Abstract type="html">An enumeration used to specify which extension events
are desired for a particular widget.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef enum {
    GDK_EXTENSION_EVENTS_NONE,
    GDK_EXTENSION_EVENTS_ALL,
    GDK_EXTENSION_EVENTS_CURSOR 
} GdkExtensionMode;&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPangoRenderer</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>GdkPangoRenderer-struct</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">&lt;a class=&quot;link&quot; href=&quot;gdk-Pango-Interaction.html#GdkPangoRenderer&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPangoRenderer&lt;/span&gt;&lt;/a&gt; is a subclass of &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/PangoRenderer.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoRenderer&lt;/span&gt;&lt;/a&gt; used for rendering
Pango objects into GDK drawables. The default renderer for a particular
screen is obtained with &lt;a class=&quot;link&quot; href=&quot;gdk-Pango-Interaction.html#gdk-pango-renderer-get-default&quot; title=&quot;gdk_pango_renderer_get_default ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pango_renderer_get_default()&lt;/code&gt;&lt;/a&gt;; Pango
functions like &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/PangoRenderer.html#pango-renderer-draw-layout&quot;
&gt;&lt;code class=&quot;function&quot;&gt;pango_renderer_draw_layout()&lt;/code&gt;&lt;/a&gt; and
&lt;a
href=&quot;/usr/share/gtk-doc/html/pango/PangoRenderer.html#pango-renderer-draw-layout-line&quot;
&gt;&lt;code class=&quot;function&quot;&gt;pango_renderer_draw_layout_line()&lt;/code&gt;&lt;/a&gt; are then used to draw objects with
the renderer.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct _GdkPangoRenderer GdkPangoRenderer;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPangoRendererClass</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>GdkPangoRendererClass</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">&lt;a class=&quot;link&quot; href=&quot;gdk-Pango-Interaction.html#GdkPangoRenderer&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPangoRenderer&lt;/span&gt;&lt;/a&gt; is the class structure for &lt;a class=&quot;link&quot; href=&quot;gdk-Pango-Interaction.html#GdkPangoRenderer&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPangoRenderer&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
} GdkPangoRendererClass;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_renderer_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-renderer-new</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Creates a new &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/PangoRenderer.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoRenderer&lt;/span&gt;&lt;/a&gt; for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;. Normally you can use the
results of &lt;a class=&quot;link&quot; href=&quot;gdk-Pango-Interaction.html#gdk-pango-renderer-get-default&quot; title=&quot;gdk_pango_renderer_get_default ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_pango_renderer_get_default()&lt;/code&gt;&lt;/a&gt; rather than creating a new
renderer.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;PangoRenderer&lt;/a&gt;* gdk_pango_renderer_new (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_renderer_get_default</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-renderer-get-default</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Gets the default &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/PangoRenderer.html&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoRenderer&lt;/span&gt;&lt;/a&gt; for a screen. This default renderer
is shared by all users of the display, so properties such as the color
or transformation matrix set for the renderer may be overwritten
by functions such as &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-layout&quot; title=&quot;gdk_draw_layout ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_layout()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;PangoRenderer&lt;/a&gt;* gdk_pango_renderer_get_default (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_renderer_set_drawable</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-renderer-set-drawable</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Sets the drawable the renderer draws to.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pango_renderer_set_drawable (
    &lt;a class=&quot;gdk-Pango-Interaction.html#GdkPangoRenderer&quot; href=&quot;link&quot;&gt;GdkPangoRenderer&lt;/a&gt; *gdk_renderer,
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_renderer_set_gc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-renderer-set-gc</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Sets the GC the renderer draws with. Note that the GC must not be
modified until it is unset by calling the function again with
&lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; for the &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/em&gt; parameter, since GDK may make internal copies
of the GC which won't be updated to follow changes to the
original GC.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pango_renderer_set_gc (
    &lt;a class=&quot;gdk-Pango-Interaction.html#GdkPangoRenderer&quot; href=&quot;link&quot;&gt;GdkPangoRenderer&lt;/a&gt; *gdk_renderer,
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *gc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_renderer_set_stipple</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-renderer-set-stipple</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Sets the stipple for one render part (foreground, background, underline,
etc.) Note that this is overwritten when iterating through the individual
styled runs of a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayout&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoLayout&lt;/span&gt;&lt;/a&gt; or &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayoutLine&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoLayoutLine&lt;/span&gt;&lt;/a&gt;. This function is thus
only useful when you call low level functions like &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/PangoRenderer.html#pango-renderer-draw-glyphs&quot;
&gt;&lt;code class=&quot;function&quot;&gt;pango_renderer_draw_glyphs()&lt;/code&gt;&lt;/a&gt;
directly, or in the 'prepare_run' virtual function of a subclass of
&lt;a class=&quot;link&quot; href=&quot;gdk-Pango-Interaction.html#GdkPangoRenderer&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPangoRenderer&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pango_renderer_set_stipple (
    &lt;a class=&quot;gdk-Pango-Interaction.html#GdkPangoRenderer&quot; href=&quot;/usr/share/gtk-doc/html/pango/PangoRenderer.html#PangoRenderPart&quot;&gt;GdkPangoRenderer&lt;/a&gt; *gdk_renderer,
    &lt;a href=&quot;link&quot; &gt;PangoRenderPart&lt;/a&gt; part,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&gt;GdkBitmap&lt;/a&gt; *stipple);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_renderer_set_override_color</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-renderer-set-override-color</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Sets the color for a particular render part (foreground,
background, underline, etc.), overriding any attributes on the layouts
renderered with this renderer.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pango_renderer_set_override_color (
    &lt;a class=&quot;gdk-Pango-Interaction.html#GdkPangoRenderer&quot; href=&quot;/usr/share/gtk-doc/html/pango/PangoRenderer.html#PangoRenderPart&quot;&gt;GdkPangoRenderer&lt;/a&gt; *gdk_renderer,
    &lt;a href=&quot;link&quot; &gt;PangoRenderPart&lt;/a&gt; part,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_context_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-context-get</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Creates a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Text-Processing.html#PangoContext&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoContext&lt;/span&gt;&lt;/a&gt; for the default GDK screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;PangoContext&lt;/a&gt;* gdk_pango_context_get (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_context_get_for_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-context-get-for-screen</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Creates a &lt;a
href=&quot;/usr/share/gtk-doc/html/pango/pango-Text-Processing.html#PangoContext&quot;
&gt;&lt;span class=&quot;type&quot;&gt;PangoContext&lt;/span&gt;&lt;/a&gt; for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;PangoContext&lt;/a&gt;* gdk_pango_context_get_for_screen (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_context_set_colormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-context-set-colormap</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">This function used to set the colormap to be used for drawing with
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/em&gt;. The colormap is now always derived from the graphics
context used for drawing, so calling this function is no longer
necessary.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_pango_context_set_colormap (
    &lt;a href=&quot;link&quot; &gt;PangoContext&lt;/a&gt; *context,
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *colormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_pango_context_set_colormap&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPangoAttrEmbossed</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>GdkPangoAttrEmbossed</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">A Pango text attribute containing a embossed bitmap to be used when
rendering the text.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    PangoAttribute attr;
    gboolean embossed;
} GdkPangoAttrEmbossed;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPangoAttrEmbossColor</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>GdkPangoAttrEmbossColor</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">A Pango text attribute specifying the color to emboss text with.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    PangoAttribute attr;
    PangoColor color;
} GdkPangoAttrEmbossColor;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkPangoAttrStipple</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>GdkPangoAttrStipple</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">A Pango text attribute containing a stipple bitmap to be used when
rendering the text.</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct {
    PangoAttribute attr;
    GdkBitmap *stipple;
} GdkPangoAttrStipple;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_attr_emboss_color_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-attr-emboss-color-new</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Creates a new attribute specifying the color to emboss text with.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;PangoAttribute&lt;/a&gt;* gdk_pango_attr_emboss_color_new (
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_attr_embossed_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-attr-embossed-new</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Creates a new attribute flagging a region as embossed or not.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gboolean&quot; &gt;PangoAttribute&lt;/a&gt;* gdk_pango_attr_embossed_new (
    &lt;a href= &gt;gboolean&lt;/a&gt; embossed);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_attr_stipple_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-attr-stipple-new</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Creates a new attribute containing a stipple bitmap to be used when
rendering the text.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;PangoAttribute&lt;/a&gt;* gdk_pango_attr_stipple_new (
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkBitmap&quot; href=&quot;GdkBitmap&quot; title=&gt;GdkBitmap&lt;/a&gt; *stipple);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_layout_get_clip_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-layout-get-clip-region</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Obtains a clip region which contains the areas where the given ranges
of text would be drawn. &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x_origin&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y_origin&lt;/code&gt;&lt;/em&gt; are the same position
you would pass to &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-layout-line&quot; title=&quot;gdk_draw_layout_line ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_layout_line()&lt;/code&gt;&lt;/a&gt;. &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;index_ranges&lt;/code&gt;&lt;/em&gt; should contain
ranges of bytes in the layout's text.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayout&quot;&gt;GdkRegion&lt;/a&gt;* gdk_pango_layout_get_clip_region (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;PangoLayout&lt;/a&gt; *layout,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x_origin,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y_origin,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *index_ranges,
    &lt;a href= &gt;gint&lt;/a&gt; n_ranges);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pango_layout_line_get_clip_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Pango-Interaction.html</Path>
  <Anchor>gdk-pango-layout-line-get-clip-region</Anchor>
  <NodeRef refid="28"/>
  <Abstract type="html">Obtains a clip region which contains the areas where the given
ranges of text would be drawn. &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x_origin&lt;/code&gt;&lt;/em&gt; and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y_origin&lt;/code&gt;&lt;/em&gt; are the same
position you would pass to &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#gdk-draw-layout-line&quot; title=&quot;gdk_draw_layout_line ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_draw_layout_line()&lt;/code&gt;&lt;/a&gt;. &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;index_ranges&lt;/code&gt;&lt;/em&gt;
should contain ranges of bytes in the layout's text. The clip
region will include space to the left or right of the line (to the
layout bounding box) if you have indexes above or below the indexes
contained inside the line. This is to draw the selection all the way
to the side of the layout. However, the clip region is in line coordinates,
not layout coordinates.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&quot;/usr/share/gtk-doc/html/pango/pango-Layout-Objects.html#PangoLayoutLine&quot;&gt;GdkRegion&lt;/a&gt;* gdk_pango_layout_line_get_clip_region (
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;PangoLayoutLine&lt;/a&gt; *line,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x_origin,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; y_origin,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; *index_ranges,
    &lt;a href= &gt;gint&lt;/a&gt; n_ranges);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cairo_create</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cairo-Interaction.html</Path>
  <Anchor>gdk-cairo-create</Anchor>
  <NodeRef refid="29"/>
  <Abstract type="html">Creates a Cairo context for drawing to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;drawable&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;cairo_t&lt;/a&gt;* gdk_cairo_create (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cairo_set_source_color</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cairo-Interaction.html</Path>
  <Anchor>gdk-cairo-set-source-color</Anchor>
  <NodeRef refid="29"/>
  <Abstract type="html">Sets the specified &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; title=&quot;GdkColor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColor&lt;/span&gt;&lt;/a&gt; as the source color of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;cr&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_cairo_set_source_color (
    &lt;a href=&quot;link&quot; &gt;cairo_t&lt;/a&gt; *cr,
    const &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColor&quot; href=&quot;GdkColor&quot; title=&gt;GdkColor&lt;/a&gt; *color);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cairo_set_source_pixbuf</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cairo-Interaction.html</Path>
  <Anchor>gdk-cairo-set-source-pixbuf</Anchor>
  <NodeRef refid="29"/>
  <Abstract type="html">Sets the given pixbuf as the source pattern for the Cairo context.
The pattern has an extend mode of &lt;code class=&quot;literal&quot;&gt;CAIRO_EXTEND_NONE&lt;/code&gt; and is aligned
so that the origin of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixbuf&lt;/code&gt;&lt;/em&gt; is &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixbuf_x&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixbuf_y&lt;/code&gt;&lt;/em&gt;</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_cairo_set_source_pixbuf (
    &lt;a href=&quot;/usr/share/gtk-doc/html/gdk-pixbuf/gdk-pixbuf-gdk-pixbuf.html#GdkPixbuf&quot; &gt;cairo_t&lt;/a&gt; *cr,
    const &lt;a href= &gt;GdkPixbuf&lt;/a&gt; *pixbuf,
    double pixbuf_x,
    double pixbuf_y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cairo_set_source_pixmap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cairo-Interaction.html</Path>
  <Anchor>gdk-cairo-set-source-pixmap</Anchor>
  <NodeRef refid="29"/>
  <Abstract type="html">Sets the given pixmap as the source pattern for the Cairo context.
The pattern has an extend mode of &lt;code class=&quot;literal&quot;&gt;CAIRO_EXTEND_NONE&lt;/code&gt; and is aligned
so that the origin of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixmap&lt;/code&gt;&lt;/em&gt; is &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixmap_x&lt;/code&gt;&lt;/em&gt;, &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;pixmap_y&lt;/code&gt;&lt;/em&gt;</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_cairo_set_source_pixmap (
    &lt;a href=&quot;link&quot; &gt;cairo_t&lt;/a&gt; *cr,
    &lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&gt;GdkPixmap&lt;/a&gt; *pixmap,
    double pixmap_x,
    double pixmap_y);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cairo_rectangle</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cairo-Interaction.html</Path>
  <Anchor>gdk-cairo-rectangle</Anchor>
  <NodeRef refid="29"/>
  <Abstract type="html">Adds the given rectangle to the current path of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;cr&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_cairo_rectangle (
    &lt;a href=&quot;link&quot; &gt;cairo_t&lt;/a&gt; *cr,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRectangle&quot; href=&quot;GdkRectangle&quot; title=&gt;GdkRectangle&lt;/a&gt; *rectangle);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_cairo_region</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Cairo-Interaction.html</Path>
  <Anchor>gdk-cairo-region</Anchor>
  <NodeRef refid="29"/>
  <Abstract type="html">Adds the given region to the current path of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;cr&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_cairo_region (
    &lt;a href=&quot;link&quot; &gt;cairo_t&lt;/a&gt; *cr,
    const &lt;a class=&quot;gdk-Points-Rectangles-and-Regions.html#GdkRegion&quot; href=&quot;GdkRegion&quot; title=&gt;GdkRegion&lt;/a&gt; *region);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ROOT_WINDOW</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-ROOT-WINDOW:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Obtains the Xlib window id of the root window of the current screen. </Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_ROOT_WINDOW() (gdk_x11_get_default_root_xwindow ())&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_ROOT_PARENT</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-ROOT-PARENT:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Obtains the Xlib window id of the root window of the default screen.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_ROOT_PARENT() (gdk_get_default_root_window ())&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GDK_ROOT_PARENT&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-DISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">The current display.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_DISPLAY() gdk_display&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-WINDOW-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_WINDOW_XDISPLAY(win)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_XID</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-WINDOW-XID:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X window belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_WINDOW_XID(win)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PIXMAP_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-PIXMAP-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_PIXMAP_XDISPLAY(pix)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_PIXMAP_XID</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-PIXMAP-XID:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X pixmap belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_PIXMAP_XID(pix)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DISPLAY_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-DISPLAY-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_DISPLAY_XDISPLAY(display)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAWABLE_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-DRAWABLE-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_DRAWABLE_XDISPLAY(win)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_DRAWABLE_XID</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-DRAWABLE-XID:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X resource (window or pixmap) belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_DRAWABLE_XID(win)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_IMAGE_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-IMAGE-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_IMAGE_XDISPLAY(image) (gdk_x11_image_get_xdisplay (image))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_IMAGE_XIMAGE</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-IMAGE-XIMAGE:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X image belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_IMAGE_XIMAGE(image) (gdk_x11_image_get_ximage (image))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-GC-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_GC_XDISPLAY(gc)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_COLORMAP_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-COLORMAP-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; title=&quot;GdkColormap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColormap&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_COLORMAP_XDISPLAY(cmap) (gdk_x11_colormap_get_xdisplay (cmap))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_COLORMAP_XCOLORMAP</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-COLORMAP-XCOLORMAP:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X colormap belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; title=&quot;GdkColormap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColormap&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_COLORMAP_XCOLORMAP(cmap) (gdk_x11_colormap_get_xcolormap (cmap))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SCREEN_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-SCREEN-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SCREEN_XDISPLAY(screen)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SCREEN_XNUMBER</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-SCREEN-XNUMBER:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the index of a &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SCREEN_XNUMBER(screen)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_SCREEN_XSCREEN</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-SCREEN-XSCREEN:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the screen of a &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_SCREEN_XSCREEN(screen)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_VISUAL_XVISUAL</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-VISUAL-XVISUAL:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X visual belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#GdkVisual&quot; title=&quot;GdkVisual&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkVisual&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_VISUAL_XVISUAL(vis)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FONT_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-FONT-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_FONT_XDISPLAY(font) (gdk_x11_font_get_xdisplay (font))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GDK_FONT_XDISPLAY&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_FONT_XFONT</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-FONT-XFONT:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X font belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_FONT_XFONT(font) (gdk_x11_font_get_xfont (font))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;GDK_FONT_XFONT&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CURSOR_XCURSOR</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-CURSOR-XCURSOR:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X cursor belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Cursors.html#GdkCursor&quot; title=&quot;GdkCursor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkCursor&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_CURSOR_XCURSOR(cursor) (gdk_x11_cursor_get_xcursor (cursor))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_CURSOR_XDISPLAY</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-CURSOR-XDISPLAY:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Cursors.html#GdkCursor&quot; title=&quot;GdkCursor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkCursor&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_CURSOR_XDISPLAY(cursor) (gdk_x11_cursor_get_xdisplay (cursor))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_XGC</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-GC-XGC:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X GC of a &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_GC_XGC(gc)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_GC_GET_XGC</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-GC-GET-XGC:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X GC of a &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_GC_GET_XGC(gc) (GDK_GC_X11(gc)-&amp;gt;
    dirty_mask ? _gdk_x11_gc_flush (gc) : ((GdkGCX11 *)(gc))-&amp;gt;
    xgc)&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GDK_WINDOW_XWINDOW</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>GDK-WINDOW-XWINDOW:CAPS</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Another name for &lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#GDK-DRAWABLE-XID:CAPS&quot; title=&quot;GDK_DRAWABLE_XID()&quot;&gt;&lt;code class=&quot;function&quot;&gt;GDK_DRAWABLE_XID()&lt;/code&gt;&lt;/a&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;#define GDK_WINDOW_XWINDOW&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdkx_visual_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdkx-visual-get</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns a &lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#GdkVisual&quot; title=&quot;GdkVisual&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkVisual&lt;/span&gt;&lt;/a&gt; corresponding to a X visual.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&gt;GdkVisual&lt;/a&gt;* gdkx_visual_get (
    VisualID xvisualid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdkx_colormap_get</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdkx-colormap-get</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns a &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; title=&quot;GdkColormap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColormap&lt;/span&gt;&lt;/a&gt; corresponding to a X colormap;
this function only works if the colormap is already
known to GTK+ (a colormap created by GTK+ or the default
colormap for the screen), since GTK+ </Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt;* gdkx_colormap_get (
    Colormap xcolormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdkx_colormap_get&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_foreign_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-pixmap-foreign-new</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Wraps a native window for the default display in a &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt;.
This may fail if the pixmap has been destroyed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_foreign_new (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; anid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_foreign_new_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-pixmap-foreign-new-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Wraps a native pixmap in a &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt;.
This may fail if the pixmap has been destroyed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_foreign_new_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; anid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_foreign_new_for_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-pixmap-foreign-new-for-screen</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Wraps a native pixmap in a &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt;.
This may fail if the pixmap has been destroyed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_foreign_new_for_screen (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkNativeWindow&lt;/a&gt; anid,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; width,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; height,
    &lt;a href= &gt;gint&lt;/a&gt; depth);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.10</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_foreign_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-window-foreign-new</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Wraps a native window for the default display in a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;.
This may fail if the window has been destroyed.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_foreign_new (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; anid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_foreign_new_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-window-foreign-new-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Wraps a native window in a &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt;.
This may fail if the window has been destroyed. If the window
was already known to GDK, a new reference to the existing 
&lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; is returned.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_foreign_new_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; anid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_xid_table_lookup</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-xid-table-lookup</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the Gdk object associated with the given X id.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gpointer&lt;/a&gt; gdk_xid_table_lookup (
    XID xid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_xid_table_lookup_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-xid-table-lookup-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the GDK object associated with the given X id.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gpointer&lt;/a&gt; gdk_xid_table_lookup_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display,
    XID xid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_lookup</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-window-lookup</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Looks up the &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; that wraps the given native window handle. </Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_lookup (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; anid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_window_lookup_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-window-lookup-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Looks up the &lt;a class=&quot;link&quot; href=&quot;gdk-Windows.html#GdkWindow&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkWindow&lt;/span&gt;&lt;/a&gt; that wraps the given native window handle.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;link&quot;&gt;GdkWindow&lt;/a&gt;* gdk_window_lookup_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; anid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_lookup</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-pixmap-lookup</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Looks up the &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt; that wraps the given native pixmap handle.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_lookup (
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; anid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_pixmap_lookup_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-pixmap-lookup-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Looks up the &lt;a class=&quot;link&quot; href=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkPixmap&lt;/span&gt;&lt;/a&gt; that wraps the given native pixmap handle.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Bitmaps-and-Pixmaps.html#GdkPixmap&quot; href=&quot;link&quot;&gt;GdkPixmap&lt;/a&gt;* gdk_pixmap_lookup_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Event-Structures.html#GdkNativeWindow&quot; href=&quot;GdkNativeWindow&quot; title=&gt;GdkNativeWindow&lt;/a&gt; anid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_lookup</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-font-lookup</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Obtains the &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt; for the given Xlib font ID, or &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; if no &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt; has
been created for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;xid&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_font_lookup(xid) ((GdkFont*) gdk_xid_table_lookup (xid))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_lookup&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_font_lookup_for_display</Name>
   <Type>macro</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-font-lookup-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Obtains the &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt; for the given Xlib font ID on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;, or &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt; if no
&lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt; has been created for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;xid&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;#define gdk_font_lookup_for_display(display, xid) ((GdkFont*) gdk_xid_table_lookup_for_display (display, ((xid)|XID_FONT_BIT)))&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_font_lookup_for_display&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_lookup_xdisplay</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-lookup-xdisplay</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Find the &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; corresponding to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;, if any exists.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt;* gdk_x11_lookup_xdisplay (
    Display *xdisplay);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_get_server_time</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-get-server-time</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Routine to get the current X server time stamp.</Abstract>
  <Declaration type="html">&lt;pre&gt;guint32 gdk_x11_get_server_time (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_net_wm_supports</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-net-wm-supports</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">This function is specific to the X11 backend of GDK, and indicates
whether the window manager for the default screen supports a certain
hint from the Extended Window Manager Hints Specification. See
&lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#gdk-x11-screen-supports-net-wm-hint&quot; title=&quot;gdk_x11_screen_supports_net_wm_hint ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_x11_screen_supports_net_wm_hint()&lt;/code&gt;&lt;/a&gt; for complete details.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_net_wm_supports (
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; property);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_screen_supports_net_wm_hint</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-screen-supports-net-wm-hint</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">This function is specific to the X11 backend of GDK, and indicates
whether the window manager supports a certain hint from the
Extended Window Manager Hints Specification. You can find this
specification on 
&lt;a class=&quot;ulink&quot; href=&quot;http://www.freedesktop.org&quot; target=&quot;_top&quot;&gt;http://www.freedesktop.org&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_x11_screen_supports_net_wm_hint (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;link&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; property);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_screen_get_window_manager_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-screen-get-window-manager-name</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the name of the window manager for &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/em&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;const char* gdk_x11_screen_get_window_manager_name (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_screen_get_monitor_output</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-screen-get-monitor-output</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Gets the XID of the specified output/monitor.
If the X server does not support version 1.2 of the RANDR 
extension, 0 is returned.</Abstract>
  <Declaration type="html">&lt;pre&gt;XID gdk_x11_screen_get_monitor_output (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkScreen&lt;/a&gt; *screen,
    &lt;a href= &gt;gint&lt;/a&gt; monitor_num);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_screen_lookup_visual</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-screen-lookup-visual</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Looks up the &lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#GdkVisual&quot; title=&quot;GdkVisual&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkVisual&lt;/span&gt;&lt;/a&gt; for a particular screen and X Visual ID.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&quot;link&quot;&gt;GdkVisual&lt;/a&gt;* gdk_x11_screen_lookup_visual (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen,
    VisualID xvisualid);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_window_set_user_time</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-window-set-user-time</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">The application can use this call to update the _NET_WM_USER_TIME
property on a toplevel window.  This property stores an Xserver
time which represents the time of the last user input event
received for this window.  This property may be used by the window
manager to alter the focus, stacking, and/or placement behavior of
windows when they are mapped depending on whether the new window
was created by a user action or is a &quot;pop-up&quot; window activated by a
timer or some other event.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_x11_window_set_user_time (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window,
    guint32 timestamp);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.6</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_window_move_to_current_desktop</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-window-move-to-current-desktop</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Moves the window to the correct workspace when running under a 
window manager that supports multiple workspaces, as described
in the &lt;a class=&quot;ulink&quot; href=&quot;http://www.freedesktop.org/Standards/wm-spec&quot; target=&quot;_top&quot;&gt;Extended 
Window Manager Hints&lt;/a&gt;.  Will not do anything if the
window is already on all workspaces.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_x11_window_move_to_current_desktop (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_display_get_user_time</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-display-get-user-time</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the timestamp of the last user interaction on 
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;. The timestamp is taken from events caused
by user interaction such as key presses or pointer 
movements. See &lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#gdk-x11-window-set-user-time&quot; title=&quot;gdk_x11_window_set_user_time ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_x11_window_set_user_time()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;guint32 gdk_x11_display_get_user_time (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_colormap_foreign_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-colormap-foreign-new</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">If xcolormap refers to a colormap previously known to GTK+,
returns a new reference to the existing &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; title=&quot;GdkColormap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColormap&lt;/span&gt;&lt;/a&gt; object,
otherwise creates a new GdkColormap object and returns that</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&quot;link&quot;&gt;GdkColormap&lt;/a&gt;* gdk_x11_colormap_foreign_new (
    &lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&gt;GdkVisual&lt;/a&gt; *visual,
    Colormap xcolormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_colormap_get_xcolormap</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-colormap-get-xcolormap</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X colormap belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; title=&quot;GdkColormap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColormap&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Colormap gdk_x11_colormap_get_xcolormap (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *colormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_colormap_get_xdisplay</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-colormap-get-xdisplay</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; title=&quot;GdkColormap&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkColormap&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Display* gdk_x11_colormap_get_xdisplay (
    &lt;a class=&quot;gdk-Colormaps-and-Colors.html#GdkColormap&quot; href=&quot;GdkColormap&quot; title=&gt;GdkColormap&lt;/a&gt; *colormap);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_cursor_get_xcursor</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-cursor-get-xcursor</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X cursor belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Cursors.html#GdkCursor&quot; title=&quot;GdkCursor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkCursor&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Cursor gdk_x11_cursor_get_xcursor (
    &lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&gt;GdkCursor&lt;/a&gt; *cursor);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_cursor_get_xdisplay</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-cursor-get-xdisplay</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Cursors.html#GdkCursor&quot; title=&quot;GdkCursor&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkCursor&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Display* gdk_x11_cursor_get_xdisplay (
    &lt;a class=&quot;gdk-Cursors.html#GdkCursor&quot; href=&quot;GdkCursor&quot; title=&gt;GdkCursor&lt;/a&gt; *cursor);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_display_broadcast_startup_message</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-display-broadcast-startup-message</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Sends a startup notification message of type &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;message_type&lt;/code&gt;&lt;/em&gt; to
&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_x11_display_broadcast_startup_message (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display,
    const char *message_type,
    ...);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_display_get_startup_notification_id</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-display-get-startup-notification-id</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Gets the startup notification ID for a display.</Abstract>
  <Declaration type="html">&lt;pre&gt;const &lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt;* gdk_x11_display_get_startup_notification_id (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.12</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_display_get_xdisplay</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-display-get-xdisplay</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X display of a &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Display* gdk_x11_display_get_xdisplay (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_display_grab</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-display-grab</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Call &lt;code class=&quot;function&quot;&gt;XGrabServer()&lt;/code&gt; on &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt;. 
To ungrab the display again, use &lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#gdk-x11-display-ungrab&quot; title=&quot;gdk_x11_display_ungrab ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_x11_display_ungrab()&lt;/code&gt;&lt;/a&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_x11_display_grab (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_display_ungrab</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-display-ungrab</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Ungrab &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/em&gt; after it has been grabbed with 
&lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#gdk-x11-display-grab&quot; title=&quot;gdk_x11_display_grab ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_x11_display_grab()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_x11_display_ungrab (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_display_set_cursor_theme</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-display-set-cursor-theme</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Sets the cursor theme from which the images for cursor
should be taken. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_x11_display_set_cursor_theme (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    const &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gchar&lt;/a&gt; *theme,
    const &lt;a href= &gt;gint&lt;/a&gt; size);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.8</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_register_standard_event_type</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-register-standard-event-type</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Registers interest in receiving extension events with type codes
between &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;event_base&lt;/code&gt;&lt;/em&gt; and &lt;code class=&quot;literal&quot;&gt;event_base + n_events - 1&lt;/code&gt;.
The registered events must have the window field in the same place
as core X events (this is not the case for e.g. XKB extension events).</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_x11_register_standard_event_type (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; event_base,
    &lt;a href= &gt;gint&lt;/a&gt; n_events);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.4</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_drawable_get_xdisplay</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-drawable-get-xdisplay</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Display* gdk_x11_drawable_get_xdisplay (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_drawable_get_xid</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-drawable-get-xid</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X resource (window or pixmap) belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDrawable&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;XID gdk_x11_drawable_get_xid (
    &lt;a class=&quot;gdk-Drawing-Primitives.html#GdkDrawable&quot; href=&gt;GdkDrawable&lt;/a&gt; *drawable);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_font_get_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-font-get-name</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Return the X Logical Font Description (for font-&amp;gt;type == GDK_FONT_FONT)
or comma separated list of XLFDs (for font-&amp;gt;type == GDK_FONT_FONTSET)
that was used to load the font. If the same font was loaded
via multiple names, which name is returned is undefined.</Abstract>
  <Declaration type="html">&lt;pre&gt;const char* gdk_x11_font_get_name (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&gt;GdkFont&lt;/a&gt; *font);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_x11_font_get_name&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_font_get_xdisplay</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-font-get-xdisplay</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Display* gdk_x11_font_get_xdisplay (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&gt;GdkFont&lt;/a&gt; *font);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_x11_font_get_xdisplay&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_font_get_xfont</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-font-get-xfont</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X font belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Fonts.html#GdkFont&quot; title=&quot;GdkFont&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkFont&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gpointer&lt;/a&gt; gdk_x11_font_get_xfont (
    &lt;a class=&quot;gdk-Fonts.html#GdkFont&quot; href=&quot;GdkFont&quot; title=&gt;GdkFont&lt;/a&gt; *font);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <DeprecationSummary>&lt;code class=&quot;literal&quot;&gt;gdk_x11_font_get_xfont&lt;/code&gt; is deprecated and should not be used in newly-written code.</DeprecationSummary>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_gc_get_xdisplay</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-gc-get-xdisplay</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Display* gdk_x11_gc_get_xdisplay (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *gc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_gc_get_xgc</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-gc-get-xgc</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X GC of a &lt;a class=&quot;link&quot; href=&quot;gdk-Graphics-Contexts.html#GdkGC&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkGC&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;GC gdk_x11_gc_get_xgc (
    &lt;a class=&quot;gdk-Graphics-Contexts.html#GdkGC&quot; href=&gt;GdkGC&lt;/a&gt; *gc);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_get_default_root_xwindow</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-get-default-root-xwindow</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Gets the root window of the default screen 
(see &lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#gdk-x11-get-default-screen&quot; title=&quot;gdk_x11_get_default_screen ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_x11_get_default_screen()&lt;/code&gt;&lt;/a&gt;).</Abstract>
  <Declaration type="html">&lt;pre&gt;Window gdk_x11_get_default_root_xwindow (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_get_default_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-get-default-screen</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Gets the default GTK+ screen number.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href= &gt;gint&lt;/a&gt; gdk_x11_get_default_screen (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_get_default_xdisplay</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-get-default-xdisplay</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Gets the default GTK+ display.</Abstract>
  <Declaration type="html">&lt;pre&gt;Display* gdk_x11_get_default_xdisplay (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_grab_server</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-grab-server</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Call &lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#gdk-x11-display-grab&quot; title=&quot;gdk_x11_display_grab ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_x11_display_grab()&lt;/code&gt;&lt;/a&gt; on the default display. 
To ungrab the server again, use &lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#gdk-x11-ungrab-server&quot; title=&quot;gdk_x11_ungrab_server ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_x11_ungrab_server()&lt;/code&gt;&lt;/a&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_x11_grab_server (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_image_get_xdisplay</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-image-get-xdisplay</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the display of a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Display* gdk_x11_image_get_xdisplay (
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&gt;GdkImage&lt;/a&gt; *image);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_image_get_ximage</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-image-get-ximage</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X image belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Images.html#GdkImage&quot; title=&quot;GdkImage&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkImage&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;XImage* gdk_x11_image_get_ximage (
    &lt;a class=&quot;gdk-Images.html#GdkImage&quot; href=&quot;GdkImage&quot; title=&gt;GdkImage&lt;/a&gt; *image);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_screen_get_screen_number</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-screen-get-screen-number</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the index of a &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;int gdk_x11_screen_get_screen_number (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_screen_get_xscreen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-screen-get-xscreen</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the screen of a &lt;a class=&quot;link&quot; href=&quot;GdkScreen.html&quot; title=&quot;GdkScreen&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkScreen&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Screen* gdk_x11_screen_get_xscreen (
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_ungrab_server</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-ungrab-server</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Ungrab the default display after it has been grabbed with 
&lt;a class=&quot;link&quot; href=&quot;gdk-X-Window-System-Interaction.html#gdk-x11-grab-server&quot; title=&quot;gdk_x11_grab_server ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_x11_grab_server()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_x11_ungrab_server (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_visual_get_xvisual</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-visual-get-xvisual</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X visual belonging to a &lt;a class=&quot;link&quot; href=&quot;gdk-Visuals.html#GdkVisual&quot; title=&quot;GdkVisual&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkVisual&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;Visual* gdk_x11_visual_get_xvisual (
    &lt;a class=&quot;gdk-Visuals.html#GdkVisual&quot; href=&quot;GdkVisual&quot; title=&gt;GdkVisual&lt;/a&gt; *visual);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_atom_to_xatom</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-atom-to-xatom</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Converts from a &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; to the X atom for the default GDK display
with the same string value.</Abstract>
  <Declaration type="html">&lt;pre&gt;Atom gdk_x11_atom_to_xatom (
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; atom);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_atom_to_xatom_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-atom-to-xatom-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Converts from a &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt; to the X atom for a &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt;
with the same string value.</Abstract>
  <Declaration type="html">&lt;pre&gt;Atom gdk_x11_atom_to_xatom_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;link&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    &lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; atom);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_xatom_to_atom</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-xatom-to-atom</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Convert from an X atom for the default display to the corresponding
&lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&gt;GdkAtom&lt;/a&gt; gdk_x11_xatom_to_atom (
    Atom xatom);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_xatom_to_atom_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-xatom-to-atom-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Convert from an X atom for a &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; to the corresponding
&lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; title=&quot;GdkAtom&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAtom&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Properties-and-Atoms.html#GdkAtom&quot; href=&quot;GdkAtom&quot; title=&quot;link&quot;&gt;GdkAtom&lt;/a&gt; gdk_x11_xatom_to_atom_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display,
    Atom xatom);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_get_xatom_by_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-get-xatom-by-name</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X atom for GDK's default display corresponding to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;atom_name&lt;/code&gt;&lt;/em&gt;.
This function caches the result, so if called repeatedly it is much
faster than &lt;code class=&quot;function&quot;&gt;XInternAtom()&lt;/code&gt;, which is a round trip to the server each time.</Abstract>
  <Declaration type="html">&lt;pre&gt;Atom gdk_x11_get_xatom_by_name (
    const &lt;a href= &gt;gchar&lt;/a&gt; *atom_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_get_xatom_by_name_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-get-xatom-by-name-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the X atom for a &lt;a class=&quot;link&quot; href=&quot;GdkDisplay.html&quot; title=&quot;GdkDisplay&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkDisplay&lt;/span&gt;&lt;/a&gt; corresponding to &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;atom_name&lt;/code&gt;&lt;/em&gt;.
This function caches the result, so if called repeatedly it is much
faster than &lt;code class=&quot;function&quot;&gt;XInternAtom()&lt;/code&gt;, which is a round trip to the server each time.</Abstract>
  <Declaration type="html">&lt;pre&gt;Atom gdk_x11_get_xatom_by_name_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gchar&quot;&gt;GdkDisplay&lt;/a&gt; *display,
    const &lt;a href= &gt;gchar&lt;/a&gt; *atom_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_get_xatom_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-get-xatom-name</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the name of an X atom for GDK's default display. This
function is meant mainly for debugging, so for convenience, unlike
&lt;code class=&quot;function&quot;&gt;&lt;code class=&quot;function&quot;&gt;XAtomName()&lt;/code&gt;&lt;/code&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#gdk-atom-name&quot; title=&quot;gdk_atom_name ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_atom_name()&lt;/code&gt;&lt;/a&gt;, the result 
doesn't need to be freed. Also, this function will never return &lt;a
href=&quot;/usr/share/gtk-doc/html/liboil/liboil-liboiljunk.html#NULL:CAPS&quot;
&gt;&lt;code class=&quot;literal&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;, 
even if &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;xatom&lt;/code&gt;&lt;/em&gt; is invalid.</Abstract>
  <Declaration type="html">&lt;pre&gt;const &lt;a href= &gt;gchar&lt;/a&gt;* gdk_x11_get_xatom_name (
    Atom xatom);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_x11_get_xatom_name_for_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-X-Window-System-Interaction.html</Path>
  <Anchor>gdk-x11-get-xatom-name-for-display</Anchor>
  <NodeRef refid="30"/>
  <Abstract type="html">Returns the name of an X atom for its display. This
function is meant mainly for debugging, so for convenience, unlike
&lt;code class=&quot;function&quot;&gt;XAtomName()&lt;/code&gt; and &lt;a class=&quot;link&quot; href=&quot;gdk-Properties-and-Atoms.html#gdk-atom-name&quot; title=&quot;gdk_atom_name ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_atom_name()&lt;/code&gt;&lt;/a&gt;, the result doesn't need to
be freed.</Abstract>
  <Declaration type="html">&lt;pre&gt;const &lt;a href=&quot;link&quot; &gt;gchar&lt;/a&gt;* gdk_x11_get_xatom_name_for_display (
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display,
    Atom xatom);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdkx.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.2</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>GdkAppLaunchContext</Name>
   <Type>tdef</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Application-launching.html</Path>
  <Anchor>GdkAppLaunchContext</Anchor>
  <NodeRef refid="31"/>
  <Abstract type="html">
</Abstract>
  <Declaration type="html">&lt;pre&gt;typedef struct GdkAppLaunchContext GdkAppLaunchContext;
    &lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_app_launch_context_new</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Application-launching.html</Path>
  <Anchor>gdk-app-launch-context-new</Anchor>
  <NodeRef refid="31"/>
  <Abstract type="html">Creates a new &lt;a class=&quot;link&quot; href=&quot;gdk-Application-launching.html#GdkAppLaunchContext&quot; title=&quot;GdkAppLaunchContext&quot;&gt;&lt;span class=&quot;type&quot;&gt;GdkAppLaunchContext&lt;/span&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a class=&quot;gdk-Application-launching.html#GdkAppLaunchContext&quot; href=&quot;GdkAppLaunchContext&quot; title=&gt;GdkAppLaunchContext&lt;/a&gt;* gdk_app_launch_context_new (
    void);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_app_launch_context_set_display</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Application-launching.html</Path>
  <Anchor>gdk-app-launch-context-set-display</Anchor>
  <NodeRef refid="31"/>
  <Abstract type="html">Sets the display on which applications will be launched when
using this context. See also &lt;a class=&quot;link&quot; href=&quot;gdk-Application-launching.html#gdk-app-launch-context-set-screen&quot; title=&quot;gdk_app_launch_context_set_screen ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_app_launch_context_set_screen()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_app_launch_context_set_display (
    &lt;a class=&quot;gdk-Application-launching.html#GdkAppLaunchContext&quot; href=&quot;GdkAppLaunchContext&quot; title=&quot;link&quot;&gt;GdkAppLaunchContext&lt;/a&gt; *context,
    &lt;a class=&quot;GdkDisplay.html&quot; href=&quot;GdkDisplay&quot; title=&gt;GdkDisplay&lt;/a&gt; *display);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_app_launch_context_set_screen</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Application-launching.html</Path>
  <Anchor>gdk-app-launch-context-set-screen</Anchor>
  <NodeRef refid="31"/>
  <Abstract type="html">Sets the screen on which applications will be launched when
using this context. See also &lt;a class=&quot;link&quot; href=&quot;gdk-Application-launching.html#gdk-app-launch-context-set-display&quot; title=&quot;gdk_app_launch_context_set_display ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_app_launch_context_set_display()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_app_launch_context_set_screen (
    &lt;a class=&quot;gdk-Application-launching.html#GdkAppLaunchContext&quot; href=&quot;GdkAppLaunchContext&quot; title=&quot;link&quot;&gt;GdkAppLaunchContext&lt;/a&gt; *context,
    &lt;a class=&quot;GdkScreen.html&quot; href=&quot;GdkScreen&quot; title=&gt;GdkScreen&lt;/a&gt; *screen);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_app_launch_context_set_desktop</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Application-launching.html</Path>
  <Anchor>gdk-app-launch-context-set-desktop</Anchor>
  <NodeRef refid="31"/>
  <Abstract type="html">Sets the workspace on which applications will be launched when
using this context when running under a window manager that 
supports multiple workspaces, as described in the 
&lt;a class=&quot;ulink&quot; href=&quot;http://www.freedesktop.org/Standards/wm-spec&quot; target=&quot;_top&quot;&gt;Extended 
Window Manager Hints&lt;/a&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_app_launch_context_set_desktop (
    &lt;a class=&quot;gdk-Application-launching.html#GdkAppLaunchContext&quot; href=&quot;GdkAppLaunchContext&quot; title=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkAppLaunchContext&lt;/a&gt; *context,
    &lt;a href= &gt;gint&lt;/a&gt; desktop);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_app_launch_context_set_timestamp</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Application-launching.html</Path>
  <Anchor>gdk-app-launch-context-set-timestamp</Anchor>
  <NodeRef refid="31"/>
  <Abstract type="html">Sets the timestamp of &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/em&gt;. The timestamp should ideally
be taken from the event that triggered the launch. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_app_launch_context_set_timestamp (
    &lt;a class=&quot;gdk-Application-launching.html#GdkAppLaunchContext&quot; href=&quot;GdkAppLaunchContext&quot; title=&gt;GdkAppLaunchContext&lt;/a&gt; *context,
    guint32 timestamp);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_app_launch_context_set_icon</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Application-launching.html</Path>
  <Anchor>gdk-app-launch-context-set-icon</Anchor>
  <NodeRef refid="31"/>
  <Abstract type="html">Sets the icon for applications that are launched with this
context. See also &lt;a class=&quot;link&quot; href=&quot;gdk-Application-launching.html#gdk-app-launch-context-set-icon-name&quot; title=&quot;gdk_app_launch_context_set_icon_name ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_app_launch_context_set_icon_name()&lt;/code&gt;&lt;/a&gt;.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_app_launch_context_set_icon (
    &lt;a class=&quot;gdk-Application-launching.html#GdkAppLaunchContext&quot; href=&quot;GdkAppLaunchContext&quot; title=&quot;/usr/share/gtk-doc/html/gio/GIcon.html&quot;&gt;GdkAppLaunchContext&lt;/a&gt; *context,
    &lt;a href= &gt;GIcon&lt;/a&gt; *icon);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_app_launch_context_set_icon_name</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Application-launching.html</Path>
  <Anchor>gdk-app-launch-context-set-icon-name</Anchor>
  <NodeRef refid="31"/>
  <Abstract type="html">Sets the icon for applications that are launched with this context. 
The &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;icon_name&lt;/code&gt;&lt;/em&gt; will be interpreted in the same way as the Icon field 
in desktop files. See also &lt;a class=&quot;link&quot; href=&quot;gdk-Application-launching.html#gdk-app-launch-context-set-icon&quot; title=&quot;gdk_app_launch_context_set_icon ()&quot;&gt;&lt;code class=&quot;function&quot;&gt;gdk_app_launch_context_set_icon()&lt;/code&gt;&lt;/a&gt;. </Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_app_launch_context_set_icon_name (
    &lt;a class=&quot;gdk-Application-launching.html#GdkAppLaunchContext&quot; href=&quot;GdkAppLaunchContext&quot; title=&gt;GdkAppLaunchContext&lt;/a&gt; *context,
    const char *icon_name);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_test_render_sync</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Testing.html</Path>
  <Anchor>gdk-test-render-sync</Anchor>
  <NodeRef refid="32"/>
  <Abstract type="html">This function retrives a pixel from &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; to force the windowing
system to carry out any pending rendering commands.
This function is intended to be used to syncronize with rendering
pipelines, to benchmark windowing system rendering operations.</Abstract>
  <Declaration type="html">&lt;pre&gt;void gdk_test_render_sync (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&gt;GdkWindow&lt;/a&gt; *window);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_test_simulate_button</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Testing.html</Path>
  <Anchor>gdk-test-simulate-button</Anchor>
  <NodeRef refid="32"/>
  <Abstract type="html">This function is intended to be used in Gtk+ test programs.
It will warp the mouse pointer to the given (&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/em&gt;,&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/em&gt;) corrdinates
within &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; and simulate a button press or release event.
Because the mouse pointer needs to be warped to the target
location, use of this function outside of test programs that
run in their own virtual windowing system (e.g. Xvfb) is not
recommended.
Also, &lt;code class=&quot;function&quot;&gt;gtk_test_simulate_button()&lt;/code&gt; is a fairly low level function,
for most testing purposes, &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/gtk-Testing.html#gtk-test-widget-click&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_test_widget_click()&lt;/code&gt;&lt;/a&gt; is the right
function to call which will generate a button press event followed
by its accompanying button release event.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_test_simulate_button (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; button,
    &lt;a class=&quot;gdk-Windows.html#GdkModifierType&quot; href=&quot;enum GdkModifierType&quot; title=&quot;link&quot;&gt;GdkModifierType&lt;/a&gt; modifiers,
    &lt;a class=&quot;gdk-Events.html#GdkEventType&quot; href=&quot;enum GdkEventType&quot; title=&gt;GdkEventType&lt;/a&gt; button_pressrelease);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
 <Token>
  <TokenIdentifier>
   <Name>gdk_test_simulate_key</Name>
   <Type>func</Type>
   <APILanguage>c</APILanguage>
  </TokenIdentifier>
  <Path>gdk-Testing.html</Path>
  <Anchor>gdk-test-simulate-key</Anchor>
  <NodeRef refid="32"/>
  <Abstract type="html">This function is intended to be used in Gtk+ test programs.
If (&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/em&gt;,&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/em&gt;) are &amp;gt; (-1,-1), it will warp the mouse pointer to
the given (&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/em&gt;,&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/em&gt;) corrdinates within &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; and simulate a
key press or release event.
When the mouse pointer is warped to the target location, use
of this function outside of test programs that run in their
own virtual windowing system (e.g. Xvfb) is not recommended.
If (&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/em&gt;,&lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/em&gt;) are passed as (-1,-1), the mouse pointer will not
be warped and &lt;em class=&quot;parameter&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/em&gt; origin will be used as mouse pointer
location for the event.
Also, &lt;code class=&quot;function&quot;&gt;gtk_test_simulate_key()&lt;/code&gt; is a fairly low level function,
for most testing purposes, &lt;a
href=&quot;/usr/share/gtk-doc/html/gtk/gtk-Testing.html#gtk-test-widget-send-key&quot;
&gt;&lt;code class=&quot;function&quot;&gt;gtk_test_widget_send_key()&lt;/code&gt;&lt;/a&gt; is the
right function to call which will generate a key press event
followed by its accompanying key release event.</Abstract>
  <Declaration type="html">&lt;pre&gt;&lt;a href=&quot;link&quot; &gt;gboolean&lt;/a&gt; gdk_test_simulate_key (
    &lt;a class=&quot;gdk-Windows.html#GdkWindow&quot; href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot;&gt;GdkWindow&lt;/a&gt; *window,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#gint&quot; &gt;gint&lt;/a&gt; x,
    &lt;a href=&quot;/usr/share/gtk-doc/html/glib/glib-Basic-Types.html#guint&quot; &gt;gint&lt;/a&gt; y,
    &lt;a href=&quot;link&quot; &gt;guint&lt;/a&gt; keyval,
    &lt;a class=&quot;gdk-Windows.html#GdkModifierType&quot; href=&quot;enum GdkModifierType&quot; title=&quot;link&quot;&gt;GdkModifierType&lt;/a&gt; modifiers,
    &lt;a class=&quot;gdk-Events.html#GdkEventType&quot; href=&quot;enum GdkEventType&quot; title=&gt;GdkEventType&lt;/a&gt; key_pressrelease);&lt;/pre&gt;</Declaration>
  <DeclaredIn>
   <HeaderPath>gdk/gdk.h</HeaderPath>
  </DeclaredIn>
  <Availability distribution="gdk">
   <IntroducedInVersion>2.14</IntroducedInVersion>
  </Availability>
 </Token>
</Tokens>
