{
  "courses": [
    {
      "instructors": [
        {
          "bio": "Dr. Ramachandran received his Ph.D. in Computer Science from the University of Wisconsin, Madison in 1986. Since then, he has been with Georgia Tech, where he is a Professor in the School of Computer Science in the College of Computing. His research interests are in the area of architectural design, programming, and analysis of parallel and distributed systems. He received a Presidential Young Investigator Award from the National Science Foundation in 1990, the Georgia Tech Doctoral Thesis Advisor award in 1993, the College of Computing Outstanding Senior Research Faculty award in 1996, the Dean's Award in 2003, the William \"Gus'' Baird Teaching Award in 2004, and the Peter A. Freeman Faculty Award, twice (2009 and 2013), for demonstrated entrepreneurial spirit. He is an avid squash player, and can even be arm-twisted into holding a tennis racket every once in a while!",
          "image": "https://lh6.ggpht.com/XMAFNYTfH0LpfEvcLtdBJX8c3BbQkhdVjQhR1VXuqXXQD6VktefJaJx3eF6O6sOtEtEn-PJrh_H5cmUQADtK=s0#w=247&h=247",
          "name": "Kishore Ramachandran"
        }
      ],
      "subtitle": "Abstractions and Virtualization",
      "key": "ud189",
      "image": "https://lh3.ggpht.com/SdbdPteIUGqjQT9M1z3FlEXulgHFwj60lYsnHovptPyAtE3U8bHF2ic2qUuxQs8D6zngFi2yEOUES1fOD3G-=s0#w=1724&h=1060",
      "expected_learning": "This course is a journey to understanding the role played by the Operating System in providing the rich user experience afforded to modern applications by today?s computers. Along the way, we highlight the symbiotic relationship between hardware and software that makes it possible for the computer and OS to provide a pleasing user experience.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Advanced Operating Systems",
      "related_degree_keys": [

      ],
      "required_knowledge": "Students are expected to have taken an undergraduate OS course, or have some experience in industry. A good understanding of the concepts in a standard textbook such as \"Operating Systems Concepts,\" Silberschatz and Galvin (or its equivalent) will be assumed in this course. \n\nStudents must also be comfortable with UNIX and C programming.",
      "syllabus": "###Lesson 1: Abstractions\n\n * The Princple of Abstraction\n * Hardware Resources\n * OS Functionality\n * Managing the CPU and Memory\n \n###Lesson 2: OS Structure\n\n* OS Structure Overview\n* The SPIN Approach \n* The Exokernel Approach\n* The L3 Micro-Kernel Approach\n \n###Lesson 3: Virtualization\n\n* Intro to Virtualization\n* Memory Virtualization\n* CPU and Device Virtualization\n \n###Lesson 4: Parallelism\n\n* Shared Memory Machines\n* Synchronization\n* Communication\n* Lightweight RPC\n* Scheduling\n* A Shared-Memory Multiprocessor OS\n\n###Lesson 5: Distributed Systems\n\n* Definitions \n* Lamport Clocks\n* Latency limits\n* Active networks\n* Systems from Components\n \n###Lesson 6: Distributed Object Technology\n\n* Spring Operating System\n* Java RMI\n* Enterprise Java Beans\n \n###Lesson 7: Design and Implementation of Distributed Services\n\n* Global Memory System  \n* Distributed Shared Memory \n* Distributed File System\n\n###Lesson 8: System Recovery\n\n* Lightweight Recoverable Virtual Memory\n* Rio Vista \n* Quicksilver\n \n###Lesson 9: Internet Scale Computing\n\n* Giant Scale Services\n* MapReduce\n* Content Delivery Networks\n \n###L10: Real-Time and Multimedia\n\n* Time sensitive Linux\n* Persistent temporal streams\n \n###L11: Security\n\n* Principles of Information Security\nSecurity \n* The Andrew System",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/advanced-operating-systems--ud189?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh6.ggpht.com/EyBkEKFXan6Z43n_gq66PjNmWInp3JsI515vEEHDQ-snEPnNf9kUdH5nXeGgnhMd5p8Ad3Vfaze7iD_nScQ=s0#w=4680&h=968",
      "short_summary": "",
      "slug": "advanced-operating-systems--ud189",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "In this course, we will see all the advances that have led to the state-of-the-art operating system that we know today, covering variety of platforms -- cell phones, multi-core, parallel systems, distributed systems, and cloud computing.",
      "expected_duration": 5
    },
    {
      "instructors": [
        {
          "bio": "Charles Brubaker earned his PhD in Computer Science from Georgia Tech in 2009. He then taught high school computer science and coached basketball at Pace Academy in Atlanta for 4 years. In 2012, inspired by Udacity, he began recording his lectures on a tablet, creating online quizzes, and automatically grading assignments to give his students instant feedback. The success of this enterprise convinced him that Udacity represented the wave of the future in education, and he joined the company in the summer of 2013.",
          "image": "https://lh3.ggpht.com/3t3a6BICSDyPyOGE0W55pmrskLdybPmniacXdY7fjxbwuqcZsafQGYH-pZ8NRWny6us_2OXPC7fuXMiGEmkq=s0#w=640&h=640",
          "name": "Charles Brubaker"
        },
        {
          "bio": "Lance Fortnow is professor and chair of the School of Computer Science of the College of Computing at the Georgia Institute of Technology. His research focuses on computational complexity and its applications to economic theory.\n\nFortnow received his Ph.D. in Applied Mathematics at MIT in 1989 under the supervision of Michael Sipser. Before he joined Georgia Tech in 2012, Fortnow was a professor at Northwestern University, the University of Chicago, a senior research scientist at the NEC Research Institute and a one-year visitor at CWI and the University of Amsterdam. Since 2007, Fortnow holds an adjoint professorship at the Toyota Technological Institute at Chicago.",
          "image": "https://lh4.ggpht.com/xVV8yeiVvGIjPlPThuGBshfk8isq1trwRQkkauUbKbQ1QTDDZZ0h9bVCIEcy4v1MWUoPX18XDYaKy3u8bOE7=s0#w=175&h=225",
          "name": "Lance Fortnow"
        },
        {
          "bio": "H. Venkateswaran obtained his Ph.D. in Computer Science from the University of Washington in 1986.  He then joined the faculty of Georgia Institute of Technology as an Assistant Professor, where he has pursued his research interests in \nComplexity Theory, Information Security, and Parallel Computation.  A renowned teacher on campus, he was awarded \"The William A ?Gus? Baird Faculty Teaching Award\" in 2008.",
          "image": "https://lh6.ggpht.com/E4OTjpeu9RdAsmFNcxZTQzRGCM32AfM6Z54Go1S35uBBXv4CYZ__fPngxbIReUh-g0d3QTrXsV94T2UZr9Y=s0#w=140&h=198",
          "name": "Hariharan Venkateswaran"
        }
      ],
      "subtitle": "The Power and Limitation of Algorithms",
      "key": "ud061",
      "image": "https://lh6.ggpht.com/vYYjAYFZd3PyNKSsdHNQWCRx4BK4eNnc1-rEn956UjR2e1PyA9UMeFXE-Z08yNGaz4nPtZJR4nQcTe0WhwUl=s0#w=1724&h=1060",
      "expected_learning": "You will learn a wealth of tools and techniques that will help you recognize when problems you encounter in the real-world are intractable and when there an efficient solution. This can save you countless hours that otherwise would have been spent on a fruitless endeavor or in re-inventing the wheel.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Computability, Complexity & Algorithms",
      "related_degree_keys": [

      ],
      "required_knowledge": "Students are expected to have a solid grasp of the basics of discrete mathematics.  Discrete Mathematics and Its Applications by Ken Rosen provides an excellent background for this course. \n\nIf you answer ?no? to any of the following questions, it may be beneficial to acquire background knowledge concurrently or prior to taking the course.\n\n1. Can you show that the sum of the first n numbers is n(n+1)/2? Can you give the proof as an induction on n?\n2. Can you give an O(n log n) algorithm for sorting n numbers?\n3. Can you describe the difference between breadth-first and depth-first search?\n4. Given an nxn matrix A and an n-dimensional vector b, can you give a polynomial-time algorithm to find a vector x such that Ax=b?",
      "syllabus": "### Lesson 1: Computability\n* Languages & Countability\n* Turing Machines\n* The Church-Turing Thesis\n* Universality\n* Undecidability\n\n### Lesson 2: Complexity\n* P and NP\n* NP-Completeness\n* NP-Complete Problems\n* The Golden Ticket\n\n### Lesson 3: Algorithms\n* Dynamic Programming\n* Fast Fourier Transform\n* Maximum Flow\n* Maximum Bipartite Matching\n* Linear Programming\n* Duality\n* Randomized Algorithms\n* Approximation Algorithms",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/computability-complexity-algorithms--ud061?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh3.ggpht.com/Io-C7QzxN-8XpqpZzT7SFE_mcdlJd_xemjPCW8nY4hQzzStA6Vtfsdattuq3pFr3xysJWmluxjUFlZrZ5p4=s0#w=2340&h=484",
      "short_summary": "Learn tools and techniques that will help you recognize when problems you encounter are intractable and when there an efficient solution.",
      "slug": "computability-complexity-algorithms--ud061",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "",
      "summary": "<i>This class is offered as CS6505 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nIn this course, we will ask the big questions, ?What is a computer? What are the limits of computation? Are there problems that no computer will ever solve? Are there problems that can?t be solved quickly? What kinds of problems can we solve efficiently and how do we go about developing these algorithms?? Understanding the power and limitations of algorithms helps us develop the tools to make real-world computers smarter, faster and safer.",
      "expected_duration": 0
    },
    {
      "instructors": [
        {
          "bio": "Ashok Goel is a professor of Computer Science and Cognitive Science at Georgia Tech in the School of Interactive Computing. His lab, the Design & Intelligence Lab, is at the forefront of conducting research into computational design, discovery, and creativity. The goals of his research are to understand human creativity in conceptual design of complex systems as well as scientific problem solving, to develop interactive tools for aiding people in such creative tasks, and to invent computational systems that are themselves creative.",
          "image": "https://lh6.ggpht.com/FWTB_Iz25aXF3mIkvJ-eTohPXe5GAvusgBkroJxXNTlqmYndl23AsoB8Nph8uBMTcMx5DCTOAv3a4wvlCQ=s0#w=718&h=718",
          "name": "Ashok Goel"
        }
      ],
      "subtitle": "The Core of Artificial Intelligence",
      "key": "ud409",
      "image": "https://lh3.ggpht.com/-JBocyEV8fz8jHy4stIq_HVt-CqCNpvmxwUQuOT7UMiM5zRJ6-5lDI92eUL6Ibvogdhvq2TmpHeR58y9jQqh=s0#w=1724&h=1060",
      "expected_learning": "At the conclusion of this class, you will be able to accomplish three primary tasks. First, you will be able to design and implement a knowledge-based artificial intelligence agent that can address a complex task using the methods discussed in the course. Second, you will be able to use this agent to reflect on the process of human cognition. Third, you will be able to use both these practices to address practical problems in multiple domains.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Knowledge-Based AI: Cognitive Systems",
      "related_degree_keys": [

      ],
      "required_knowledge": "A good course on computer programming such as CS 1332 or Udacity?s CS 101 is beneficial for students. An introductory course on Artificial Intelligence, such as Georgia Tech's CS 3600 or CS 6601, is recommended but not required.\n\nTo succeed in this course, you should be able to answer 'Yes' to the following four questions:\n     \n1. Are you comfortable with computer programming?\n2. Are you familiar with concepts of data structures and object-oriented programming, such as inheritance and polymorphism?\n3. Are you familiar with concepts of algorithms, such as sorting and searching algorithms?\n4. Are you confident with either Java or Python?",
      "syllabus": "### Unit 1: Introduction to KBAI and Cognitive Systems.\n- Where Knowledge-Based AI fits into AI as a whole\n- Cognitive systems: what are they?\n- AI and cognition: how are they connected?\n\n### Unit 2: Fundamentals\n- Semantic Networks\n- Generate & Test\n- Means-Ends Analysis\n- Problem Reduction\n- Production Systems\n\n### Unit 3: Common Sense Reasoning\n- Frames\n- Understanding\n- Common Sense Reasoning\n- Scripts\n\n### Unit 4: Planning\n- Logic\n- Planning\n\n### Unit 5: Learning\n- Learning by Recording Cases\n- Incremental Concept Learning\n- Classification\n- Version Spaces & Discrimination Trees\n\n### Unit 6: Analogical Reasoning\n- Case-Based Reasoning\n- Explanation-Based Learning\n- Analogical Reasoning\n\n### Unit 7: Visuospatial Reasoning\n- Constraint Propagation\n- Visuospatial Reasoning\n\n### Unit 8: Design & Creativity\n- Configuration\n- Diagnosis\n- Design\n- Creativity\n\n### Unit 9: Metacognition\n- Learning by Correcting Mistakes\n- Meta-Reasoning\n- AI Ethics",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/knowledge-based-ai-cognitive-systems--ud409?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh5.ggpht.com/DV_nU5WyiUQQkG0YLTv9uvkEJMqYPmsTBSOdcq_vwRt23_yT3GoLDPCiNTODkLWUwv2UNyh1aaJjlHjQGm4=s0#w=4680&h=968",
      "short_summary": "The twin goals of knowledge-based artificial intelligence (AI) are to build AI agents capable of human-level intelligence and gain insights into human cognition.",
      "slug": "knowledge-based-ai-cognitive-systems--ud409",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "<i>This class is offered as CS7637 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nThis is a core course in artificial intelligence. It is designed to be a challenging course, involving significant independent work, readings, assignments, and projects. It covers structured knowledge representations, as well as knowledge-based methods of problem solving, planning, decision-making, and learning.\n\nThe class is organized around three primary learning goals. First, this class teaches the concepts, methods, and prominent issues in knowledge-based artificial intelligence. Second, it teaches the specific skills and abilities needed to apply those concepts to the design of knowledge-based AI agents. Third, it teaches the relationship between knowledge-based artificial intelligence and the study of human cognition.",
      "expected_duration": 7
    },
    {
      "instructors": [
        {
          "bio": "Tucker is a former USAF F-15 pilot and current professor of Interactive Computing at the Georgia Institute of Technology. Dr. Balch?s research centers on Machine Learning. He teaches courses in multi-robot systems, Artificial Intelligence and Finance. Balch has published over 120 research publications. His work has been covered by CNN, Institutional Investor, the Wall Street Journal and the New York Times.  Balch earned a Bachelor?s degree at Georgia Tech, a Master?s degree at UC Davis, and a Ph.D. at Georgia Tech.  His graduated students work at NASA JPL, CMU, Uber, Goldman Sachs, Morgan Stanley, Citadel, AQR, and Yahoo! Finance.",
          "image": "https://lh3.googleusercontent.com/fKpnncw-fN6dnPFIpRjlPyZaQ6vFZc82XpDlCD5NqwAXp04Rp-UHPHGaZsuuFDe2lAJQiKvKT284iiUXpEfT=s0#w=429&h=640",
          "name": "Tucker Balch"
        }
      ],
      "subtitle": "Offered at Georgia Tech as CS 7646",
      "key": "ud501",
      "image": "https://lh3.googleusercontent.com/sstOlcko2U-Ah4Ot8xu0I-6JLpzHVlvwwjCNQ9fq7GW6YOKxdii1gxgUs44bt5qsy5qTT7kDCRu2GHiFrw=s0#w=1355&h=776",
      "expected_learning": "#### By the end of this course, you should be able to:\n- Understand data structures used for algorithmic trading.\n- Know how to construct software to access live equity data, assess it, and make trading decisions.\n- Understand 3 popular machine learning algorithms and how to apply them to trading problems.\n- Understand how to assess a machine learning algorithm's performance for time series data (stock price data).\n- Know how and why data mining (machine learning) techniques fail.\n- Construct a stock trading software system that uses current daily data.\n\n#### Some limitations/constraints:\n- We use daily data. This is not an HFT course, but many of the concepts here are relevant.\n- We don't interact (trade) directly with the market, but we will generate equity allocations that you could trade if you wanted to.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Machine Learning for Trading",
      "related_degree_keys": [

      ],
      "required_knowledge": "Students should have strong coding skills and some familiarity with equity markets. No finance or machine learning experience is assumed.\n\nNote that this course serves students focusing on computer science, as well as students in other majors such as industrial systems engineering, management, or math who have different experiences. All types of students are welcome!\n\nThe ML topics might be \"review\" for CS students, while finance parts will be review for finance students. However, even if you have experience in these topics, you will find that we consider them in a different way than you might have seen before, in particular with an eye towards implementation for trading.\n\nProgramming will primarily be in Python. We will make heavy use of numerical computing libraries like NumPy and Pandas.",
      "syllabus": "This course is composed of three _mini-courses_:\n\n- Mini-course 1: Manipulating Financial Data in Python\n- Mini-course 2: Computational Investing\n- Mini-course 3: Machine Learning Algorithms for Trading\n\nEach mini-course consists of about 7-10 short lessons. Assignments and projects are interleaved.\n\n**Fall 2015 OMS students**: There will be two tests - one midterm after mini-course 2, and one final exam.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/machine-learning-for-trading--ud501?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh3.googleusercontent.com/9J8svpTASx1e3Wdk8Wk4Acq8MWODD2dcEjTwvwqqVz00Ok6z4ROGXE1htxhgkJ7PpnAHdFSEvv1IDUVa8PU=s0#w=1170&h=242",
      "short_summary": "Implement machine learning based strategies to make trading decisions using real-world data.",
      "slug": "machine-learning-for-trading--ud501",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This course introduces students to the real world challenges of implementing machine learning based trading strategies including the algorithmic steps from information gathering to market orders. The focus is on how to apply probabilistic machine learning approaches to trading decisions. We consider statistical approaches like linear regression, KNN and regression trees and how to apply them to actual stock trading situations.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Dr Prvulovic's research focuses on architectural (hardware) support for program monitoring, debugging, and security, particularly in multi-threaded and multi-core systems. In general, the goal of his research is to make both hardware and software more reliable and secure. He is the area coordinator for the Computer Architecture area in the School of Computer Science at Georgia Tech. Dr. Prvulovic received his Ph.D. from the University of Illinois at Urbana-Champaign in 2003. He is a Senior Member of ACM and IEEE and is currently serving as the Secretary-Treasurer of ACM SIGMICRO.",
          "image": "https://lh4.ggpht.com/MD0yCnEvPrPakbmtTJCEVd5FXldeF-icElFdlAo02iOru2oxJUuK5Cnzp8onJMnaLpn8Mx11hu7_voJGBQ=s0#w=2136&h=2372",
          "name": "Milos Prvulovic"
        }
      ],
      "subtitle": "Pipelines, Caches, and MultiCores",
      "key": "ud007",
      "image": "https://lh6.ggpht.com/B1ND8fPrO0w0c7DZKdolG_brq4519bpZD8c93pETdLHXJZ-RTwDV4U2ODrMjQGA3wsecR-AvfqQQGPY-xg=s0#w=1725&h=1060",
      "expected_learning": "You will explore the fascinating field of computer architecture, studying the many methods developed to enhance computer performance.  The trade-offs and compromises associated with each design and their effects on processor development is a captivating story that will make you a better computer scientist, regardless of your field of study.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "High Performance Computer Architecture",
      "related_degree_keys": [

      ],
      "required_knowledge": "You must be familiar with Assembly code, the C or C++ programming language, Unix or Linux, and the basics of pipelining.",
      "syllabus": "###Lesson 1: Introduction and Trends\n- Computer Architecture & Tech Trends\n- Moore's Law\n- Processor Speed, Cost, Power\n- Power Consumption\n- Fabrication Yield\n\n###Lesson 2: Performance Metrics and Evaluation\n\n- Measuring Performance\n- Benchmarks Standards\n- Iron Law of Performance\n- Amdahl's Law\n- Lhadma's Law\n\n###Lesson 3: Pipelining Review\n- Pipeline CPI\n- Processor Pipeline Stalls\n- Data Dependencies\n- Pipelining Outro\n\n###Lesson 4: Branches\n- Branch Prediction\n- Direction Predictor\n- Hierarchical Predictors \n- PShare\n\n###Lesson 5: Predication\n- If Conversion\n- Conditional Move\n- MOVc Summary\n\n###Lesson 6: Instruction Level Parallelism (ILP)\n- ILP Intro\n- RAW Dependencies \n- WAW Dependencies \n- Duplicating Register Values \n- Instruction Level Parallelism (ILP) \n \n###Lesson 7: Instruction Scheduling\n- Improving IPC\n- Tomasulo's Algorithm \n- Load and Store Instructions \n\n###Lesson 8: ReOrder Buffer\n- Exceptions in Out Of Order Execution \n- Branch Misprediction \n- Hardware Organization with ROB \n\n###Lesson 9: Memory Ordering\n- Memory Access Ordering\n- When Does Memory Write Happen \n- Out of Order Load Store Execution \n- Store to Load Forwarding \n- LSQ, ROB, and RS \n\n###Lesson 9: Memory\n- How Memory Works\n- One Memory Bit SRAM \n- One Memory Bit DRAM \n- Fast Page Mode \n- Connecting DRAM To The Processor  \n\n###Lesson 10: Multi-Processing \n- Flynn's Taxonomy of Parallel Machines \n- Multiprocessor Needs Parallel Programs! \n- Centralized Shared Memory \n- Distributed Shared Memory \n- Message Passing Vs Shared Memory \n- Shared Memory Hardware \n- SMT Hardware Changes \n- SMT and Cache Performance",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/high-performance-computer-architecture--ud007?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh4.ggpht.com/7PS97Ep-0v5syxUFf5asuuSSCfODvaGnVe0xUe8XJl5lCmIWNAQAwLn_VJzfLdCxEMsXLP26FxNHM607-A=s0#w=2340&h=484",
      "short_summary": "The HPCA course covers performance measurement, pipelining, and improved parallelism through various means.",
      "slug": "high-performance-computer-architecture--ud007",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "",
      "summary": "<i>This class is offered as CS6290 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nThe course begins with a lesson on performance measurement, which leads to a discussion on the necessity of performance improvement.\n\nPipelining, the first level of performance refinement, is reviewed. The weaknesses of pipelining will be exposed and explored, and various solutions to these issues will be studied. The student will learn hardware, software, and compiler based solutions to these issues.",
      "expected_duration": 0
    },
    {
      "instructors": [
        {
          "bio": "Rich Vuduc an associate professor in the School of Computational Science and Engineering (CSE) atGeorgia Tech. His research is in the area of high-performance computing.\n\nThis year, Professor Vuduc is also serving as both the Associate Chair of Academic Affairs in the School of CSE and as the Director of CSE Programs.\n\nResearch: The HPC Garage [@hpcgarage].\nProfessor Vuduc?s lab is developing automated tools and techniques to tune, to analyze, and to debug software for parallel machines, including emerging high-end multi/manycore architectures and accelerators. They focus on applying these methods to CSE applications, which include computer-based simulation of natural and engineered systems and data analysis.",
          "image": "https://lh3.googleusercontent.com/29xMVRMqnl3Emj5228eJczANpfFjxuYDk2QpmnWIDxZbJLjYuQmiz30cu62SlBi6x3h71QaIt9ORBgcIey7u=s0#w=200&h=250",
          "name": "Rich Vuduc"
        }
      ],
      "subtitle": "Offered at Georgia Tech as CS 6220",
      "key": "ud281",
      "image": "https://lh3.googleusercontent.com/dd4IV3owDGDCyA3rmrTcmTuTlFSinNXTcjkcyxxBhqGEeNobLr2Ol_qv75V_6V8y1pvD0fa4e9aGgZbyfKo=s0#w=1292&h=790",
      "expected_learning": "",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "High Performance Computing",
      "related_degree_keys": [

      ],
      "required_knowledge": "A ?second course? in algorithms and data structures, a la Georgia Tech?s\nCS 3510-B or Udacity?s Intro to Algorithms\n\n For the programming assignments, programming experience in a ?low-\nlevel? ?high-level? language like C or C++\n\n Experience using command line interfaces in *nix environments (e.g.,\nUnix, Linux)\n\nCourse readiness survey. \nYou should feel comfortable answering questions like those found in the Readiness Survey Course, \n<a href=\"https://www.udacity.com/course/viewer#!/c-ud266\" target=\"_blank\">HPC-0</a>",
      "syllabus": "The course topics are centered on three different ideas or extensions to the usual serial RAM model you encounter in CS 101. Recall that a serial RAM assumes a sequential or serial processor connected to a main memory.\n\n* Unit 1: The work-span or dynamic multithreading model\n\nIn this model, the idea is that there are multiple processors connected to the main memory. Since they can all ?see? the same memory, the processors can coordinate and communicate via reads and writes to that ?shared? memory.\n\nSub-topics include:\n\n** Intro to the basic algorithmic model\n** Intro to OpenMP, a practical programming model\n** Comparison-based sorting algorithms\n** Scans and linked list algorithms\n** Tree algorithms\n** Graph algorithms, e.g., breadth-first search\n\n* Unit 2: Distributed memory or network models\n\nIn this model, the idea is that there is not one serial RAM, but many serial RAMs connected by a network. In this model, each serial RAM?s memory is private to the other RAMs; consequently, the processors must coordinate and communicate by sending and receiving messages.\n\nSub-topics include:\n\n** The basic algorithmic model\n** Intro to the Message Passing Interface, a practical programming model\n** Reasoning about the effects of network topology\n** Dense linear algebra\n** Sorting\n** Sparse graph algorithms\n** Graph partitioning\n\n* Unit 3: Two-level memory or I/O models\n\nIn this model, we return to a serial RAM, but instead of having only a processor connected to a main memory, there is a smaller but faster scratchpad memory in between the two. The algorithmic question here is how to use the scratchpad effectively, in order to minimize costly data transfers from main memory.\n\nSub-topics include:\n\n** Basic models\n** Efficiency metrics, including ?emerging? metrics like energy and power\n** I/O-aware algorithms\n** Cache-oblivious algorithms",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/high-performance-computing--ud281?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "",
      "short_summary": "This course will give you solid foundations for developing, analyzing, and implementing parallel and locality-efficient algorithms.  Offered at Georgia Tech as CS6220",
      "slug": "high-performance-computing--ud281",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "The goal of this course is to give you solid foundations for developing, analyzing, and implementing parallel and locality-efficient algorithms. This course focuses on theoretical underpinnings. To give a practical feeling for how algorithms map to and behave on real systems, we will supplement algorithmic theory with hands-on exercises on modern HPC systems, such as Cilk Plus or OpenMP on shared memory nodes, CUDA for graphics co-processors (GPUs), and MPI and PGAS models for distributed memory systems.\n\nThis course is a graduate-level introduction to scalable parallel algorithms. ?Scale? really refers to two things: efficient as the problem size grows, and efficient as the system size (measured in numbers of cores or compute nodes) grows. To really scale your algorithm in both of these senses, you need to be smart about reducing asymptotic complexity the way you?ve done for sequential algorithms since CS 101; but you also need to think about reducing communication and data movement. This course is about the basic algorithmic techniques you?ll need to do so.\n\nThe techniques you?ll encounter covers the main algorithm design and analysis ideas for three major classes of machines: for multicore and many core shared memory machines, via the work-span model; for distributed memory machines like clusters and supercomputers, via network models; and for sequential or parallel machines with deep memory hierarchies (e.g., caches). You will see these techniques applied to fundamental problems, like sorting, search on trees and graphs, and linear algebra, among others. The practical aspect of this course is implementing the algorithms and techniques you?ll learn to run on real parallel and distributed systems, so you can check whether what appears to work well in theory also translates into practice. (Programming models you?ll use include Cilk Plus, OpenMP, and MPI, and possibly others.)",
      "expected_duration": 6
    },
    {
      "instructors": [
        {
          "bio": "After decades in the commercial Health Informatics (HIT) industry, Mark joined Georgia Tech in 2007.  In addition to teaching, he helps facilitate interdisciplinary research in healthcare delivery. He is involved with the Tennenbaum Institute in research exploring healthcare process mining. He is also involved in community outreach aimed at the wider and deeper adoption of HIT to improve the quality and efficiency of care delivery. He has authored two books on HIT, is an Associate Editor of the IEEE Journal of Biomedical and Health Informatics and a contributor to the Information Week HealthCare blog.\n\nMark received his BS degree from MIT and his MD degree from the Medical University of South Carolina (MUSC).",
          "image": "https://lh4.ggpht.com/FGGhFQ-Uzu6m-tETR1DwsKjXLokQVVopJ8HNXNxoOFKnXQj-kwPweWf3zyUvqrBEsROeZUvyR_yOkmj1tHQ=s0#w=300&h=300",
          "name": "Mark Braunstein"
        }
      ],
      "subtitle": "Applications and Analysis",
      "key": "ud809",
      "image": "https://lh4.ggpht.com/7s3hjNWMv_mWstvK72kQn-L-5QxkIoIxNUIt6PoYLtn9F_Rtk5FFn2emBuwBqccNTgmSSc0M9vatJnYKx9gQ=s0#w=872&h=536",
      "expected_learning": "Healthcare is the largest industry in the US.  Spurred by new federal programs and incentives, the adoption of health IT is growing very rapidly, leading to many new career and entrepreneurial opportunities. The increasing use of modern web, mobile and sensor technologies in health informatics is also growing rapidly and is leading to many new and innovative approaches.  Students who are trained and well-qualified in this field are in great demand.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Health Informatics in the Cloud",
      "related_degree_keys": [

      ],
      "required_knowledge": "The course is self-contained so there are no academic prerequisites. A knowledge of web programming (e.g. Java, Javascript, C++, C#) is required by at least some members of each team to do the team project.",
      "syllabus": "###Lesson 1: The US Healthcare System\nThis lesson will discuss unique and the complex nature of the US healthcare system: its key problems, the specific challenges presented by chronic disease, the major disconnect between the health system?s capabilities and the demands of chronic disease management, and the hope that a combination of new incentives, health IT adoption, and new models of care can bridge this disconnect leading to a more efficient, effective, safer and more patient-centered US system of care.\n###Lesson 2: Federal Policies & Initiatives\nThis lesson will focus on the important details of the specific programs that the federal government has put into place to spur health IT adoption by eligible providers and hospitals as well as the role played by financial incentives that reward performance, rather than the quantity of procedures. \n###Lesson 3: Health Information Exchange\nThis lesson will focus on the rationale for and the major challenges of health information exchange (HIE). We will discuss the various ways of classifying HIE, how to differentiate the various HIE architectures, and the Indiana Health Information Exchange as a premier example including descriptions of its key services. We will discuss new approaches and technologies with a particular emphasis on Direct HIE, a new technology based on secure email and encrypted attachments.\n###Lesson 4: Privacy, Security and Trust\nThis lesson focuses on the keys issues of privacy, security, and trust in a world of digital records and health information exchange. Students will understand the key role that patient engagement plays in chronic disease prevention and management and the concerns patients have about sharing their health data. They will also explore the various privacy consent models. Data segmentation will be discussed as a key challenge for obtaining patient consent under what may be the most acceptable model. The concept of public key infrastructure (PKI) including the roles of the public key, private key, registration authority and certificate authority will be covered.\n###Lesson 5A: Data Standards\nWe divide the discussion of standards into those for health data and those for achieving its sharing by fostering interoperability. This lesson  focuses on data standards after reviewing the rationale for standards and the evolutions that have been taking place in their use, technology and structure. Students will be able to recognize the difference between a classification and an ontology.  They will be familiar with the key data standards (including ICD, CPT, LOINC and SNOMED). They will also gain an overview of the differences between standards based on EDI/X12 and XML.\n###Lesson 5B: Interoperability Standards\nThis lesson builds on Lesson 5A on data standards to show how these data are transmitted within messages using HL7 and packaged into CCDA-based clinical documents for sharing via HIE. We?ll briefly introduce even more advanced standards with a particular emphasis on clinical decision support (CDS, an important technology for the future) and the key elements of and remaining challenges with standards to support CDS. We?ll also discuss more facile next generation approaches based on web technologies and approaches. \n###Lesson 6: Clinical Data Collection and Visualization Challenges\nStudents should understand the key roles that data plays in medical practice and the root causes of common data quality issues in general and the specific root causes of data quality issues with respect to electronic health records. They should understand the high level challenges of efficiently and accurately collecting high quality, comprehensive clinical data from physicians and of visualizing digital health data in a way that supports the provider?s mental model. They should understand the key roles that information technology plays in the future vision of healthcare.\n###Lesson 7: Empowering the Patient\nStudents should understand the key role that support for patients can play so they can achieve behavior change, adhere to their prescribed treatments and generate data to help their providers more continuously manage their chronic diseases. They should understand patient interests. They should understand the key information technology tools now available to patients including patient health records, portals, social networking, in home technologies and mobile devices and sensors. They should have a detailed functional understanding of personal health records and their potential as app platforms. They should understand the potential role of social networking in patient education and care management. They should understand the various telemedicine modalities being developed and offered for use by patients at home.\n###Lesson 8: Population Health Management\nStudents should understand the difference between individual patient management, population management and public health. They should understand the technologies for aggregating data, the kinds of data that are collected and the kinds of reports that are required for population and public health management.\n###Lesson 9: Data Query in a Federated Environment\nStudents should understand the challenges of data query and aggregation in an environment where care providers are using disparate and non-interoperable EHRs. They should be familiar with and understand the differences among the distributed query technologies. They should be familiar with the distributed query standards and the various open source query frameworks reviewed in this lesson.\n###Lesson 10: Big Data Meets Healthcare\nStudents should understand the concept of ?big data?; the common technical approaches to modeling and simulation and the common applications of each. They should be familiar with the specific case studies of analytic applications to healthcare problems as diverse as improved clinical decision support, understanding clinical processes, modeling care spaces and providing optimal patient-specific treatments.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/health-informatics-in-the-cloud--ud809?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh6.ggpht.com/K-elxed-Az5GGzJrKe_nkNDKNdA7VFpb4kGOf5RacCHXhYW3NxQIUUqhabBqis-MEyj6j1hROKu-fhDT4JI=s0#w=2340&h=484",
      "short_summary": "This survey course provides a broad, forward-facing overview of contemporary health informatics within the context of the US healthcare delivery system.",
      "slug": "health-informatics-in-the-cloud--ud809",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "<i>This class is offered as CS6440 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nThis is a survey course designed to provide a broad, forward-facing overview of contemporary health informatics, a specialized field of computing that seeks to improve the quality and efficiency of healthcare delivery. To understand health informatics (HIT) you also need to have at least a basic understanding of the complex and highly regulated US healthcare industry. The course is designed for students from diverse backgrounds and who have not been previously exposed to HIT. It is divided into three sections:\n\nThe US healthcare delivery and the key role of the federal government in promoting HIT adoption\n\nThe core technologies that drive all contemporary HIT systems and tools\n\nThe real world applications of HIT from electronic medical and personal health records to exploiting digital data aggregated from them for research and other purposes",
      "expected_duration": 5
    },
    {
      "instructors": [
        {
          "bio": "Nick Feamster is an associate professor in the College of Computing at Georgia Tech. He received his Ph.D. in Computer Science from MIT in 2005. His research focuses on many aspects of computer networking and networked systems, including the design, measurement, and analysis of network routing protocols, network operations and security, and anonymous communication systems. In 2008, he received the Presidential Early Career Award for Scientists and Engineers (PECASE) for his contributions to cybersecurity, notably spam filtering. His honors include the Technology Review 35 \"Top Young Innovators Under 35\" award, a Sloan Research Fellowship, the NSF CAREER award, the IBM Faculty Fellowship, and award papers at SIGCOMM 2006, NSDI 2005, and Usenix Security 2002 and 2001.",
          "image": "https://lh5.ggpht.com/EQzGD5x-gsn8-9s4HsbJDg32LBDw3vLtr7iOQq4skGYiGR6qLqukM8mlfztHHkfedK4WNPIW2V3l_vaGsoA=s0#w=426&h=426",
          "name": "Nick Feamster"
        }
      ],
      "subtitle": "Security and Software Defined Networking",
      "key": "ud436",
      "image": "https://lh3.ggpht.com/PwqnZYeOVbWr4a3Qn3WkmZNzRlf6acf7EbQoGCBAqrmn1pOFrsX5vVr4WUHGTOaqslvjDY864Q8X2-o9ENU=s0#w=1725&h=1060",
      "expected_learning": "Want to build on your Computer Networking knowledge or move into Network Engineering positions such as Systems Admin, Network Admin or Technical Operations (WebOps)? If so, this is the class for you.\n\nComputer Networking takes a hands-on approach to teaching very technical material, using Mininet (a network emulator) to show you how a computer network functions, what factors contribute to its efficiency and how to overcome inherent limitations.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Computer Networking",
      "related_degree_keys": [

      ],
      "required_knowledge": "The ideal preparation for this course would be the successful completion of an undergraduate level Computer Networking course. An understanding of the TCP/IP protocol and the its layer model is recommended. Basic knowledge of python (such as through <a href= \"https://www.udacity.com/course/cs101\">Intro to Computer Science</a>) is required.\n\nYou should be comfortable with the implementation of basic search algorithms and a working knowledge of Linux and virtual machines is recommended.",
      "syllabus": "### Lesson 1: Introduction\n\n- Computer Networking Overview\n- What This Class is Not About\n\n\n### Lesson 2: Architecture & Principles\n\n-\tA Brief History of the Internet\n-\tArchitectural Design Principles\n-\tPacket Switching\n-\tFile Transfer\n-\tEnd to End Argument Violations\n\n### Lesson 3: Switching\n\n-\tSwitching and Bridging\n-\tBootstrapping: Networking Two Hosts\n-\tARP: Address Resolution Protocol\n-\tInterconnecting LANs with Hubs\n-\tSwitches: Traffic Isolation\n-\tSpanning Tree\n-\tSwitches vs. Routers\n-\tBuffer Sizing for a TCP Sender\n\n\n### Lesson 4: Routing\n\n-\tInternet Routing\n-\tIntra-AS Topology\n-\tDistance-Vector Routing\n-\tLink State Routing\n-\tInterdomain Routing\n-\tIGP vs. iBGP\n-\tBGP Route Selection\n-\tMultiple Exit Discriminator (MEI)\n-\tInterdomain Routing Business Models\n\n\n### Lesson 5: Naming, Addressing & Forwarding\n\n-\tIP Addressing\n-\tPre-1994: ?Classful? Addressing\n-\tIP Address Allocation\n-\tClassless Interdomain Routing (CIDR)\n-\tMultihoming Frustrates Aggregation\n-\tAddress Lookup Using Tries\n-\tMemory Efficiency and Fast Lookup\n-\tAlternatives to LPM with Tries\n-\tNAT and IPv6\n-\tNetwork Address Translation (NAT)\n\n### Lesson 5.1: Router Design Basics\n\n-\tRouter Design\n-\tBasic Router Architecture\n-\tDecision: Crossbar Switching\n-\tSwitching Algorithm: Maximal Matching\n-\tHead of Line Blocking\n-\tScheduling and Fairness\n-\tMax-Min Fairness\n\n### Lesson 5.2: Domain Name System (DNS)\n\n-\tRecord Types\n-\tExamples (using ?dig?)\n-\tLookup IP Address\n\n### Lesson 6: Congestion Control & Streaming\n\n-\tCongestion Control\n-\tAIMD (TCP Congestion Control)\n-\tData Centers & TCP ?Incast?\n-\tBarrier Synchronization & Idle Time\n-\tMultimedia & Streaming\n-\tDigitizing Audio & Video\n-\tStreaming Video\n-\tSkype\n\n\n### Lesson 7: Rate Limiting and Traffic Shaping\n\n-\tTraffic Classification & Shaping\n-\tSource Classification \n-\tLeaky Bucket Traffic Shaping\n-\t(r, t) Traffic Shaping\n-\tShaping Bursty Traffic Patterns\n-\tPower Boost\n-\tEffects on Latency\n-\tBuffer Bloat\n-\tPacket Monitoring\n\n### Lesson 8: Content Distribution\n\n-\tThe Web and Caching\n-\tHTTP Requests\n-\tPersistent Connections\n-\tContent Distribution Networks (CDNs)\n-\tServer Selection\n-\tContent Routing\n-\tBit Torrent\n-\tSolution to Freeriding: ?Choking?\n-\tDistributed Hash Tables\n-\tConsistent Hashing\n\n### Lesson 9: Software Defined Networking\n\n-\tNetwork Management Overview\n-\tSoftware Defined Networking (SDN)\n-\tControl and Data Planes\n-\tDifferent SDN Controllers\n-\tNOX: Overview\n-\tRyu, Floodlight, Nox and Pox\n-\tCustomizing Control\n\n### Lesson 10: Traffic Engineering\n\n-\tTraffic Engineering Overview\n-\tInterdomain Traffic Engineering\n-\tMeasuring, Modeling and Controlling Traffic\n-\tLink Utilization Function\n-\tBGP in Interdomain Traffic Engineering\n-\tMultipath Routing\n-\tData Center Networking\n-\tValiant Load Balance\n-\tJellyfish Data Center Topology\n\n### Lesson 11: Network Security\n\n-\tInternet is Insecure\n-\tResource Exhaustion \n-\tRouting Security\n-\tOrigin and Path Authentication\n-\tDNS Security\n-\tDNS Cache Poisoning\n\n### Lesson 11.1: Internet Worms\n\n-\tViruses and Internet Worms\n-\tInternet Worm Lifecyle\n-\tFirst Worm: ?Morris? Worm\n-\tWorm Outbreaks in Detail \n-\tModeling Fast-Spreading Worms\n\n### Lesson 11.2: Spam\n\n-\tSpam\n-\tIP Blacklisting\n\n### Lesson 11.3: Denial of Service (DoS) Attacks\n\n-\tTCP 3-Way Handshake\n-\tInferring Denial of Service Activity using Backscatter\n-\tAutomated DoS Attack Mitigation\n-\tMTPCP",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/computer-networking--ud436?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Web Development",
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh6.ggpht.com/75-re6CeBrGq3I5BnqAZXnflSNz2bywhosDxGrEMwrN1aiajVO3DzYMIWgfBYaOISw-CTqOMzPCvGlf_Kg=s0#w=4680&h=968",
      "short_summary": "This is an advanced Computer Networking course that delves into the latest concepts and tools used by the CN industry.",
      "slug": "computer-networking--ud436",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "<i>This class is offered as CS6250 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nThis course covers advanced topics in Computer Networking such as Software-Defined Networking (SDN), Data Center Networking and Content Distribution. The course is divided into three parts:\n\nPart 1 is about the implementation, design principles and goals of a Computer Network and touches upon the various routing algorithms used in CN (such as link-state and distance vector). \n\nPart 2 talks about resource control and content distribution in Networking Applications. It covers Congestion Control and Traffic Shaping.\n\nPart 3 deals with the operations and management of computer networks encompassing SDN's (Software Defined Networks), Traffic Engineering and Network Security.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Irfan Essa is a Professor in the School of Interactive Computing (iC) and Associate Dean in the College of Computing (CoC), at the Georgia Institute of Technology (GA Tech), in Atlanta, Georgia, USA. Professor Essa works in the areas of Computer Vision, Computer Graphics, Computational Perception, Robotics and Computer Animation, Machine Learning, and Social Computing, with potential impact on Video Analysis and Production (e.g., Computational Photography & Video, Image-based Modeling and Rendering, etc.) Human Computer Interaction, Artificial Intelligence, Computational Behavioral/Social Sciences, and Computational Journalism research.  He has published over 150 scholarly articles in leading journals and conference venues on these topics and several of his papers have also won best paper awards. He has been awarded the NSF CAREER  and was elected to the grade of IEEE Fellow. He has held extended research consulting positions with Disney Research and Google Research and also was an Adjunct Faculty Member at Carnegie Mellon?s Robotics Institute. He joined GA Tech Faculty in 1996 after his earning his MS (1990), Ph.D. (1994), and holding research faculty position at the MIT Media Lab (1988-1996).",
          "image": "https://lh6.ggpht.com/31bt5YKgcnjN5xueMm5MRq0XCiY6vsCKf-gVBgk_UeaEyMS0o3en_DzGu3xx60j8YCL6Dihom-KKR2JHNjQ=s0#w=512&h=512",
          "name": "Irfan Essa"
        }
      ],
      "subtitle": "Offered at Georgia Tech as CS 6475",
      "key": "ud955",
      "image": "https://lh3.ggpht.com/NPkAVmaCxDtgPa217cAkhz8ncvLs9zKQVbfqeYwIXJ9GBuICYSI74-41Wy6p867bmRsZDdzOwOEbm79V8TE=s0#w=1060&h=651",
      "expected_learning": "You will undertake a hands-on approach over the entire term using computational techniques, merged with digital imaging processes to produce photographic artifacts. In addition to understanding how various elements of the computational photography pipeline function together to produce novel - and sometimes stunning - results, you will be given ample opportunity to appreciate and critique artifacts produced/curated by your peers.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Computational Photography",
      "related_degree_keys": [

      ],
      "required_knowledge": "Students should be familiar with:\n\n- College-level linear algebra and calculus: Knowledge of matrices, vectors, differentiation and integration, although the focus will be more on understanding and applying mathematical structures - not necessarily deriving your own;\n- Physics: Vectors, optics;\n- Probability theory: Distributions, density functions.\n\nProgramming assignments for this course can be completed either using Python-OpenCV (recommended platform) or Matlab/Octave. Working knowledge of either Python or Matlab would thus be required.",
      "syllabus": "Please refer to the [course schedule](https://docs.google.com/spreadsheet/pub?key=0AqyqgGWSjCbpdFFqWXJiZ01vNW15UXlwaUtTZE84MWc&output=html) for detailed syllabus set to a suggested timeline for Spring 2015, along with assignment due dates and additional materials.\n\nHere is a brief outline of the topics covered:\n\n### Module 1 - Introduction\n- Introduction\n- What is Computational Photography\n- Dual Photography\n- Panorama\n- Why Study Computational Photography\n\n### Module 2 - Digital Imaging\n- What is a Digital Image\n- Point Processes\n- Smoothing\n- Blending Modes\n- Convolution and Cross-Correlation\n- Gradients\n- Edges\n\n### Module 3 - Cameras\n- Cameras\n- Lenses\n- Exposure\n- Sensor\n\n### Module 4 - Comp Vision to Comp Photo\n- Fourier Transform\n- Blending\n- Pyramids\n- Cuts\n- Features\n\n### Module 5 - Applications\n- Panorama\n- HDR\n- Time Lapse\n- Procam Systems\n- Mosaics\n\n### Module 6 - Light Field\n- Lightfield\n- Lightfield Camera\n\n### Module 7 - Blur / De-Blur\n- Lucy-Richardon Blur\n- Flutter Shutter\n\n### Module 8 - Video\n- Video\n- Video Textures\n- Video Stabilization\n\n### Module 9 - Closing Thoughts\n\n---\nFurther resources:\n\n- [Spring 2015 course website](https://www.udacity.com/admin/tools/content-editor#!/c-ud955): Course information, assignments, academic policies, grading scheme.\n- [Piazza forum](https://piazza.com/class/i4fj9alolja61a): Discussions, announcements, clarifications.\n- [T-Square site](https://t-square.gatech.edu/portal/site/gtc-cd36-2625-55b0-b0e6-d1c0d4eb36af): Assignment submissions.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/computational-photography--ud955?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh6.ggpht.com/MrvxuPHoayP0pl3y5SMc8rJj7PPJEEUkL0ee1vtG8CDRgJ2GIwLdqdCm14cZVUGb9kZx6IehK29CC1EhFWI3=s0#w=2340&h=484",
      "short_summary": "This class explores how computation impacts the entire workflow of photography, which is traditionally aimed at capturing light from a 3D scene to form a 2D image.",
      "slug": "computational-photography--ud955",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This class explores how computation impacts the entire workflow of photography, which is traditionally aimed at capturing light from a 3D scene to form a 2D image. A detailed study of the perceptual, technical and computational aspects of forming pictures, and more precisely the capture and depiction of reality on a (mostly 2D) medium of images is undertaken over the entire term. The scientific, perceptual, and artistic principles behind image-making will be emphasized, especially as impacted and changed by computation.\n\nTopics include the relationship between pictorial techniques and the human visual system; intrinsic limitations of 2D representations and their possible compensations; and technical issues involving capturing light to form images. Technical aspects of image capture and rendering, and exploration of how such a medium can be used to its maximum potential, will be examined. New forms of cameras and imaging paradigms will be introduced.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Alessandro (Alex) Orso is a Professor in the College of Computing at Georgia Tech. He received his M.S. and Ph.D. degrees from Politecnico di Milano, Italy. Alex's area of research is software engineering, with emphasis on software testing and program analysis, and he has been teaching software engineering related classes in both academia and industry for over 15 years (and in three different languages). His interests include the development of techniques and tools for improving software reliability, security, and trustworthiness, and the validation of such techniques on real-world systems.",
          "image": "https://lh4.ggpht.com/XA7t1gZdsKirwBKHkc3acjJsBp4qk4ZEJshAxYEF2Poi3eFHu_3ZLSmF_tceuJXX1JmydByZMbVGH_GcYio=s0#w=484&h=582",
          "name": "Alex Orso"
        }
      ],
      "subtitle": "From Idea to Product",
      "key": "ud805",
      "image": "https://lh4.ggpht.com/ghBERRE992L2Ueec3QyDH5xPVoNztaQvTTZ9POSDbZRAmYXoFiGN2TROmzJnP8hWIB05NM219nDWQrnSVw=s0#w=1724&h=1060",
      "expected_learning": "Software engineering isn?t just about programming. It isn?t just about building a technology stack.\n\nThis course introduces the idea of software engineering as an iterative, systematic process. You will learn to use Github and Eclipse as you get introduced to the development life cycle, design processes and software testing. \n\nSoftware Development Processes will show you the skills and processes needed to complement technical understanding of software products in order to make you a more effective developer in an engineering team.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Software Development Process",
      "related_degree_keys": [

      ],
      "required_knowledge": "A strong familiarity with Android development (perhaps through [Developing Android Apps](https://www.udacity.com/course/ud853)) is expected.",
      "syllabus": "### Lesson 1: Introduction and Overview\n\n- Importance of Software Engineering\n- Discipline of Software Engineering\n- The Software Crisis\n- Software Phases\n\n### Lesson 2: Life Cycle Models\n\n- Introduction with Barry Bohem\n- Requirements Engineering\n- Design\n- Maintenance \n- Software Process Model Introduction\n- Waterfall Process\n- Spiral Process\n- Evolutionary Prototyping Process\n- Rational Unified Process \n- Agile Process\n- Choosing a Model\n- Lifecycle Documents\n\n\n### Lesson 3: Integrated Development Environment\n\n- Eclipse Introduction\n- IDE Overview\n- Plug-Ins\n- Eclipse Demo: Create Java Project\n- Eclipse Demo: Create a Class\n- Eclipse Demo: Run Configuration\n- Eclipse Demo: Debugging\n\n\n### Lesson 4: Version Control Systems\n\n- Interview with John Britton\n- Version Control System Introduction\n- Two Main Types of VCS\n- Introduction to Git\n- Git Workflow\n- Git Demo: Intro to Git\n- Git Demo: Git + Eclipse\n- Git Demo: Github\n- Git Recap: Local Repositories\n- Git Recap: Remote Repositories\n\n\n### Lesson 5: Requirements Engineering\n\n- Interview with Jane Cleland-Huang\n- General RE Definition\n- Software Intensive Systems\n- Functional and Nonfunctional Requirements\n- User and System Requirements\n- Modeling Requirements\n- Analyzing Requirements\n- Requirements Prioritization\n- Requirements Engineering Process\n\n\n### Lesson 6: OO Software and UML\n\n- Object Orientation Introduction\n- UML Structural Diagrams: Class Diagrams\n- Class Diagram: Creation Tips\n- UML Structural Diagrams: Component Diagram\n- UML Structural Diagram: Deployment Diagram\n- UML Behavioral Diagram: Use Case\n- Use Case Diagram: Creation Tips\n- UML Behavioral Diagrams: Sequence\n- UML Behavioral Diagrams: State Transition Diagram\n\n### Lesson 7: Software Architecture\n\n- Interview with Nenad Medvidovic \n- What is Software Architecture?\n- Prescriptive vs. Descriptive Architecture \n- Architectural Evolution\n- Architectural Degradation \n- Architectural Recovery\n- Architectural Elements\n- Components, Connectors, and Configuration\n- Deployment Architectural Perspective\n\n### Lesson 8: A Tale of Analysis and Design \n\n- Analyzing Requirements\n- Refining Classes and Attributes\n- Adding Attributes\n- Identifying Operations\n- Refining the Class Diagram\n\n### Lesson 9: Design Patterns\n\n- Patterns Catalogue\n- Pattern Format\n- Factory Method Pattern\n- Strategy Pattern\n- Choosing a Pattern\n- Negative Design Patterns\n\n\n### Lesson 10: Unified Software Process\n\n- Use-Case Driven\n- Inception Phase\n- Elaboration Phase\n- Construction Phase\n- Transition Phase\n- Phases and Iterations\n\n### Lesson 11: General Concepts\n\n- Failure, Fault and Error\n- Verification Approaches\n- Pros and Cons of Approaches\n- Testing Introduction\n- Testing Granularity Levels\n- Alpha and Beta Testing\n- Black and White Box Testing Introduction\n\n### Lesson 12: Black-Box Testing\n\n- Systematic Functional Testing Approach\n- Test Data Selection\n- Category Partition Method\n- Produce and Evaluate Test Case Specifications\n- Generate Test Cases from Test Case Specifications\n- Model Based Testing\n- Finite State Machines\n\n### Lesson 13: White-Box Testing\n\n- Coverage Criteria Intro\n- Statement Coverage\n- Control Flow Graphs\n- Test Criteria Subsumption\n- MC/DC Coverage\n\n### Lesson 14: Agile Development Methods\n\n- Cost of Change\n- Agile Software Development\n- Extreme Programming (XP)\n- XP?s Values and Principles\n- Test First Development\n- Refactoring\n- Pair Programming\n- Continuous Integration\n- Testing Strategy\n- High Level Scrum Process\n\n### Lesson 15: Software Refactoring\n\n- Reasons to Refactor\n- Refactoring Demo\n- Refactoring Risks\n- Cost of Refactoring\n- When Not to Refactor",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/software-development-process--ud805?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Software Engineering",
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh4.ggpht.com/NjWk465Bc6rVVGeh2nLZLNxbYwrudFYKz5ayGRFrd0Rr1PwDP-ket4xjpnsRWQJeInYG2dOKQPryj6lgizk=s0#w=4680&h=968",
      "short_summary": "Software Development Processes explores requirements engineering, architecture and design, testing, and software quality in general.",
      "slug": "software-development-process--ud805",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "<i>This class is offered as CS6300 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nIn SDP, you will learn how to select and implement the ideal software process for your development project. Through Professor Orso's engaging examples and interviews with industry insiders, you will learn both conceptual and practical aspects of software engineering. The course covers requirements engineering, architecture and design, testing and maintenance, and software quality in general. \n\nThe goal of this class is to equip you with the skills necessary to define requirements, set up an integrated development environment (IDE), learn Git (and Github!) and use Unified Modeling Language (UML) to design and build an Android application. We will also examine several testing practices and refactoring techniques that are helpful before the launch of your software project. \n\nWhile everyone working with software should have these skills, they are particularly important for Software Engineers and Engineering Managers.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Dr. Spencer Rugaber is a faculty member in the College of Computing at the Georgia Institute of Technology. His research interests are in the area of Software Engineering, specifically reverse engineering and program comprehension, software evolution and maintenance and software design. Dr. Rugaber has served as Program Director for the Software Engineering and Languages Program at the U. S. National Science Foundation and as as Vice-Chairman of the IEEE Technical Committee on Reverse Engineering.",
          "image": "https://lh6.ggpht.com/P2xRmO92Sn3OMJsOgVOmXR_F6u9uRGcDqi8yD8uvKLjBZ5vZoktykAQL7iR5s3UJfP30Q2yrp9nxwQzRAQ=s0#w=750&h=750",
          "name": "Spencer Rugaber"
        },
        {
          "bio": "Eric Feron has been the Dutton-Ducoffe Professor of Aerospace Software Engineering at the Georgia Institute of Technology since 2005. Prior to that, he was on the faculty of MIT's department of Aeronautics and Astronautics from 1993 until 2005. He holds his BS, MS and PhD degrees from Ecole Polytechnique, France, Ecole Normale Suprieure, France and Stanford University, United States. Eric Feron's interests are to use fundamental concepts of control systems, optimization and computer science to address important problems in aerospace engineering, including: Aerobatic control of unmanned aerial vehicles, multi-agent operations, including air traffic control systems and aerospace software system certification. Eric Feron has published two books and several research papers; his former research students are distributed throughout academia, government and industry. He is an advisor to the Academy of Technologies, France. When he is not in his office, Eric Feron may be found sailing along the coast of Florida.\nhttp://www.feron.org/Eric/",
          "image": "https://lh4.ggpht.com/Xs5gY8PjTRQXOV-2g_MPZ4FIEaIhYzvfPGOWkcXF2F2dW2sWjsfIfDjHPs4Rha2DBfsv--y22s-u-tDTxDs=s0#w=100&h=100",
          "name": "Eric Feron"
        }
      ],
      "subtitle": "Offered at Georgia Tech as CS 6310",
      "key": "ud821",
      "image": "https://lh3.ggpht.com/5ZaG0rk58jrfNdi0S89uZ4PfA-ae6dxhQYv1Zp3jktqqhiHf9XwSSaoVt6_0l-D0qrZwPOf52hGDIY40bMJP=s0#w=1725&h=1060",
      "expected_learning": "This course will equip students with the skills and knowledge necessary to accomplish the following objectives:\n\n- Express the analysis and design of an application using UML\n- Specify functional semantics of an application using OCL\n- Specify and evaluate software architectures\n- Select and use appropriate architectural styles\n- Understand and apply object-oriented design techniques\n- Select and use appropriate software design patterns\n- Understand and perform a design review",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Software Architecture & Design",
      "related_degree_keys": [

      ],
      "required_knowledge": "Students are expected to have completed an undergraduate software engineering course or have industry experience in software development. Additionally all students must follow the policies listed on the [Course Wiki](https://www.udacity.com/wiki/saad).\n\nFor other requirements, see [Udacity's Technology Requirements](https://www.udacity.com/tech-requirements).",
      "syllabus": "The [Course Wiki](https://www.udacity.com/wiki/saad) serves as the syllabus for Software Architecture and Design. But, for a high-level view of the course, we have listed the lessons:\n\n### Part 1:  Introduction\n\n- Lesson 1: Introduction\n- Lesson 2: Text Browser Exercise (Analysis)\n- Lesson 3: Design Concepts\n\n### Part 2:  UML and Analysis\n\n- Lesson 1: Review of UML\n- Lesson 2: Object Oriented Analysis Exercise\n- Lesson 3: UML Class Models\n- Lesson 4: Design Studies\n- Lesson 5: Library Exericse (UML)\n- Lesson 6: Formal Specification\n- Lesson 7: OCL\n- Lesson 8: Library Exercise (OCL)\n- Lesson 9: Behavior Modeling\n- Lesson 10: Clock Radio Exercise\n\n### Part 3: Software Architecture\n\n- Lesson 1: KWIC Exercise\n- Lesson 2: Overview of Software Architecture\n- Lesson 3: Architectural Views\n- Lesson 4: Text Browser Exercise (Architecture)\n- Lesson 5: Non-Functional Requirements? and Architectural Styles\n- Lesson 6: Connectors\n- Lesson 7: Acme\n- Lesson 8: Refinement\n- Lesson 9: Middleware\n- Lesson 10: Guest Interview: LayerBlox\n\n### Part 4: Software Design\n\n- Lesson 1: Components\n- Lesson 2: Coffee Maker Exercise\n- Lesson 3: Object Design\n- Lesson 4: Design Patterns\n- Lesson 5: Design Principles\n- Lesson 6: Design Reviews\n- Lesson 7: Design Review Exercise",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/software-architecture-design--ud821?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh5.ggpht.com/rSvibDbIj3iw2npwUSF6aAO4b-k33h6jFRCxxmPzTP_RK40fC8Bd1JQ6jySzgutNMTVUaDo9fxzmJuQ2lQ=s0#w=2340&h=484",
      "short_summary": "Software Architecture and Design teaches the principles and concepts involved in the analysis and design of large software systems.",
      "slug": "software-architecture-design--ud821",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Software Architecture and Design teaches the principles and concepts involved in the analysis and design of large software systems. This course is split into four sections: (1) Introduction, (2) UML and Analysis, (3) Software Architecture, and (4) Software Design.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Sebastian Thrun is a Research Professor of Computer Science at Stanford University, a Google Fellow, a member of the National Academy of Engineering and the German Academy of Sciences. Thrun is best known for his research in robotics and machine learning, specifically his work with self-driving cars.",
          "image": "https://lh4.ggpht.com/DG-7wffxjR7WqOHdXavbgsNlJ7ZKL2nuhY7hDiSijK7xISk3mCTgdM-9_JUGRjI-qfTk1iJCL5axjZEZDQ=s0#w=200&h=200",
          "name": "Sebastian Thrun"
        }
      ],
      "subtitle": "Programming a Robotic Car",
      "key": "cs373",
      "image": "https://lh4.ggpht.com/dTaG60Lui_XeUUEDkZsIp7-RP7g6SLNWyHG9bbaZG2yDp24Mnc6R2tjzME5WNLlJdi6IJQM-YCwO_gEzug=s0#w=436&h=268",
      "expected_learning": "This course will teach you probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics.\n\nAt the end of the course, you will leverage what you learned by solving the problem of a runaway robot that you must chase and hunt down!",
      "featured": false,
      "project_name": "Track and Capture a Runaway Robot",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=g-fk3RQiw5Q"
      },
      "title": "Artificial Intelligence for Robotics",
      "related_degree_keys": [

      ],
      "required_knowledge": "Success in this course requires some programming experience and some mathematical fluency. \n\nProgramming in this course is done in Python. We will use some basic object-oriented concepts to model robot motion and perception. If you don?t know Python but have experience with another language, you should be able to pick up the syntax fairly quickly. If you have no programming experience, you should consider taking Udacity?s <a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Introduction to Computer Science</a> course before attempting this one.\n\nThe math used will be centered on probability and linear algebra. You don?t need to be an expert in either, but some familiarity with concepts in probability (e.g. probabilities must add to one, conditional probability, and Bayes? rule) will be extremely helpful. It is possible to learn these concepts during the course, but it will take more work. Knowledge of linear algebra, while helpful, is not required.",
      "syllabus": "### Lesson 1: Localization \n\n-\tLocalization\n-\tTotal Probability\n-\tUniform Distribution\n-\tProbability After Sense\n-\tNormalize Distribution\n-\tPhit and Pmiss\n-\tSum of Probabilities\n-\tSense Function\n-\tExact Motion\n-\tMove Function\n-\tBayes Rule\n-\tTheorem of Total Probability\n\n### Lesson 2: Kalman Filters\n\n-\tGaussian Intro\n-\tVariance Comparison\n-\tMaximize Gaussian\n-\tMeasurement and Motion\n-\tParameter Update\n-\tNew Mean Variance\n-\tGaussian Motion\n-\tKalman Filter Code\n-\tKalman Prediction\n-\tKalman Filter Design\n-\tKalman Matrices\n\n### Lesson 3: Particle Filters\n\n-\tSlate Space\n-\tBelief Modality\n-\tParticle Filters\n-\tUsing Robot Class\n-\tRobot World\n-\tRobot Particles\n\n### Lesson 4: Search\n\n-\tMotion Planning\n-\tCompute Cost\n-\tOptimal Path\n-\tFirst Search Program\n-\tExpansion Grid\n-\tDynamic Programming\n-\tComputing Value\n-\tOptimal Policy\n\n### Lesson 5: PID Control\n\n-\tRobot Motion\n-\tSmoothing Algorithm\n-\tPath Smoothing\n-\tZero Data Weight\n-\tPid Control\n-\tProportional Control\n-\tImplement P Controller\n-\tOscillations\n-\tPd Controller\n-\tSystematic Bias\n-\tPid Implementation\n-\tParameter Optimization\n\n### Lesson 6: SLAM (Simultaneous Localization and Mapping)\n\n-\tLocalization\n-\tPlanning\n-\tSegmented Ste\n-\tFun with Parameters\n-\tSLAM\n-\tGraph SLAM\n-\tImplementing Constraints\n-\tAdding Landmarks\n-\tMatrix Modification\n-\tUntouched Fields\n-\tLandmark Position\n-\tConfident Measurements\n-\tImplementing SLAM\n\n### Runaway Robot Final Project",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/artificial-intelligence-for-robotics--cs373?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Software Engineering",
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh4.ggpht.com/gf28Wow_JdX5nEBm_6pPA8rjUPOr6vugMIbWnJx5gvj2PsyovjZR1kc4Kgxc8MEtOLfJhTANFdmrZg3AqQ=s0#w=4680&h=968",
      "short_summary": "Learn how to program all the major systems of a robotic car. Topics include planning, search, localization, tracking, and control.",
      "slug": "artificial-intelligence-for-robotics--cs373",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars.\n\nThis course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Aaron Bobick, PhD, joined Washington University in St. Louis as Dean of the School of Engineering & Applied Science and the James M. McKelvey Professor July 1, 2015. Prior to Washington University, he was a professor and founding chair of the School of Interactive Computing at the Georgia Institute of Technology, where he was a member of the faculty since 1999.  He has B.Sc. degrees from MIT in Mathematics (1981) and Computer Science (1981) and a Ph.D. from MIT in Cognitive Science (1987). He joined the MIT Media Laboratory faculty in 1992 where he was a pioneer in the area of action recognition by computer vision. In 1999 Prof. Bobick moved to Georgia Tech where he became the Director of the GVU Center, an internationally known research center in computer vision, graphics, ubiquitous computing, and HCI. In 2005 the School of Interactive Computing was created with Prof. Bobick serving as the founding Chair. Prof. Bobick is both an IEEE Fellow and an ACM Distinguished Scientist. He has served as a senior area chair for most international computer vision conferences including serving as Program Chair of IEEE Conference on Computer Vision and Pattern Recognition. He has also served on the advisory board or boards of directors of a variety of surveillance-focused computer vision and medical imaging technology companies.",
          "image": "https://lh4.ggpht.com/3jK_dQ9E9v1fmLRJdqY1PJ1xGCJ4X8MoY0JoOd43iRQfrbokgHNHP8LX-LhHQjZkETiX1aeco93WkwtDIx4=s0#w=600&h=600",
          "name": "Aaron Bobick"
        },
        {
          "bio": "Irfan Essa is a Professor in the School of Interactive Computing (iC) and Associate Dean in the College of Computing (CoC), at the Georgia Institute of Technology (GA Tech), in Atlanta, Georgia, USA. Professor Essa works in the areas of Computer Vision, Computer Graphics, Computational Perception, Robotics and Computer Animation, Machine Learning, and Social Computing, with potential impact on Video Analysis and Production (e.g., Computational Photography & Video, Image-based Modeling and Rendering, etc.) Human Computer Interaction, Artificial Intelligence, Computational Behavioral/Social Sciences, and Computational Journalism research.  He has published over 150 scholarly articles in leading journals and conference venues on these topics and several of his papers have also won best paper awards. He has been awarded the NSF CAREER  and was elected to the grade of IEEE Fellow. He has held extended research consulting positions with Disney Research and Google Research and also was an Adjunct Faculty Member at Carnegie Mellon?s Robotics Institute. He joined GA Tech Faculty in 1996 after his earning his MS (1990), Ph.D. (1994), and holding research faculty position at the MIT Media Lab (1988-1996).",
          "image": "https://lh6.ggpht.com/31bt5YKgcnjN5xueMm5MRq0XCiY6vsCKf-gVBgk_UeaEyMS0o3en_DzGu3xx60j8YCL6Dihom-KKR2JHNjQ=s0#w=512&h=512",
          "name": "Irfan Essa"
        }
      ],
      "subtitle": "Offered at Georgia Tech as CS 6476",
      "key": "ud810",
      "image": "https://lh3.googleusercontent.com/uWE0231t3xM35vp8r30Nd2D3mXcX8fetc_5riLYaETXj0tC1f9OD5rF1ZMIZGsODc-yf6AdLgEZg97cgN0bA=s0#w=1440&h=885",
      "expected_learning": "Images have become ubiquitous in computing. Sometimes we forget that images often capture the light reflected from a physical scene. This course gives you both insight into the fundamentals of image formation and analysis, as well as the ability to extract information much above the pixel level. These skills are useful for anyone interested in operating on images in a context-aware manner or where images from multiple scenarios need to be combined or organized in an appropriate way.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Introduction to Computer Vision",
      "related_degree_keys": [

      ],
      "required_knowledge": "- Data structures: You'll be writing code that builds representations of images, features, and geometric constructions.\n- A good working knowledge of Matlab and/or Python with NumPy. The lecture videos use Matlab for occasional demonstration because the instructor is too old to change. Problem sets will be done in Matlab or Python. As mentioned in the resources note below, you can use either Matlab or the open source version Octave.\n- This course has more math than many CS courses: Linear algebra, vector calculus, and linear algebra (that is not a typo).\n- No prior knowledge of vision is assumed though any experience with Signal Processing is helpful.",
      "syllabus": "A brief outline of units is given below, grouped into 10 parts:\n\n### 1\tIntroduction\n- 1A\tIntroduction\n\n### 2\tImage Processing for Computer Vision\n- 2A\tLinear image processing\n- 2B\tModel fitting\n- 2C\tFrequency domain analysis\n\n### 3\tCamera Models and Views\n- 3A\tCamera models\n- 3B\tStereo geometry\n- 3C\tCamera calibration\n- 3D\tMultiple views\n\n### 4\tImage Features\n- 4A\tFeature detection\n- 4B\tFeature descriptors\n- 4C\tModel fitting\n\n### 5\tLighting\n- 5A\tPhotometry\n- 5B\tLightness\n- 5C\tShape from shading\n\n### 6\tImage Motion\n- 6A\tOverview\n- 6B\tOptical flow\n\n### 7\tTracking\n- 7A\tIntroduction to tracking\n- 7B\tParametric models\n- 7C\tNon-parametric models\n- 7D\tTracking considerations\n\n### 8\tClassification and Recognition\n- 8A\tIntroduction to recognition\n- 8B\tClassification: Generative models\n- 8C\tClassification: Discriminative models\n- 8D\tAction recognition\n\n### 9\tUseful Methods\n- 9A\tColor spaces and segmentation\n- 9B\tBinary morphology\n- 9C\t3D perception\n\n### 10\tHuman Visual System\n- 10A\tThe retina\n- 10B\tVision in the brain\n\n---\n**GT OMSCS Students**\n\nNote: Please refer to your course website/schedule for further details, assignments, etc.\n\n**Spring 2015 resources** (old):\n\n- [Schedule](https://docs.google.com/spreadsheets/d/1ecUGIyhYOfQPi3HPXb-7NndrLgpX_zgkwsqzfqHPaus/pubhtml): Suggested pace, assignments, deadlines, references.\n- [Course website](http://www.cc.gatech.edu/~afb/classes/CS4495-Spring2015-OMS/): Course information, problem sets, academic policies, grading scheme.\n- [Piazza forum](https://piazza.com/class/i4fze20e9lh1o9): Discussions, announcements, clarifications. \n- [T-Square site](https://t-square.gatech.edu/portal/site/gtc-4a26-e369-5db2-8cec-fb426ed49513): Problem set submissions.\n\nNote: This course was previously offered as CS 4495.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/introduction-to-computer-vision--ud810?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https:https://lh3.googleusercontent.com/6O1QTIeMjkmTlyGgXtEskz69mdi8gkKjHrXpCIle2l2BBxsXPe0DX6Eq61HPbGNe-ddyN37CQ0ugiOa-hz8=s0#w=1170&h=242",
      "short_summary": "This course provides an introduction to computer vision including fundamentals, methods for application and machine learning classification.",
      "slug": "introduction-to-computer-vision--ud810",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This course provides an introduction to computer vision including fundamentals of image formation, camera imaging geometry, feature detection and matching, multiview geometry including stereo, motion estimation and tracking, and classification. We?ll develop basic methods for applications that include finding known models in images, depth recovery from stereo, camera calibration, image stabilization, automated alignment (e.g. panoramas), tracking, and action recognition.  We focus less on the machine learning aspect of CV as that is really classification theory best learned in an ML course.\n\nThe focus of the course is to develop the intuitions and mathematics of the methods in lecture, and then to learn about the difference between theory and practice in the problem sets. All algorithms work perfectly in the slides. But remember what [Yogi Berra](http://yogiberramuseum.org/just-for-fun/yogisms/) said: In theory there is no difference between theory and practice. In practice there is. (Einstein said something similar but who knows more about real life?) In this course you do not, for the most part, apply high-level library functions but use low to mid level algorithms to analyze images and extract structural information.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "David Joyner completed his Ph.D. in Human-Centered Computing at Georgia Tech specializing in delivering automated feedback and assessment to students in exploratory learning environments. He joined Udacity to develop exercises, projects, and (one day!) entire courses that adapt to the learner's ability and progress.",
          "image": "https://lh5.ggpht.com/eMuemBjuntlJbFjcaFSi63n1GoIwgCrmLSLdH5KCsUOpvquDRDayJbSRafDoQJ2fQ2xPCthXZKBDwUDKYzr4=s0#w=2000&h=2000",
          "name": "David Joyner"
        }
      ],
      "subtitle": "Offered at Georgia Tech as CS6460",
      "key": "ud915",
      "image": "https://lh3.googleusercontent.com/ghpGxX7Tl2qgIiGFWqbC9YUTgi0lZczirI5CRtbeFvFtCiilon6wuOvp45NE2vVZH4s9UOi9o4lfiIOBcG0=s0#w=1214&h=808",
      "expected_learning": "This class is built on a number of pedagogical strategies, including project-based learning, authenticity, and apprenticeship. The ultimate goal, supported by these strategies, is that through this class you will make an actual contribution to the field of educational research, and start a project that could be continued even after the semester is over through academic publications, ongoing research programmes, start-up businesses, or deployment within the OMSCS program.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Educational Technology",
      "related_degree_keys": [

      ],
      "required_knowledge": "In order to succeed in this class, you should be able to answer yes to the following questions:\n\n - Have you already fulfilled the foundational requirement for the program?\n    Are you comfortable with writing several essays throughout the course of the class, including personal reflections, article responses, project proposals, and project reports?\n - Are you comfortable with a class that requires significant participation via forum interactions and peer-to-peer feedback opportunities?\n - Are you comfortable working in a group; or, alternatively, are you comfortable taking on a significantly-sized project on your own?\n - Are you passionate about education, and ideally, do you already have some preliminary ideas regarding what tools you might like to build or questions you might like to research as part of this class?\n - Are you comfortable with a class built on large, open-ended, student-driven projects rather than smaller, more narrowly-defined assignments and exams?\n\nNote that prior experience with EdTech is not required beyond your prior OMS coursework. Note also that because they project is very open-ended, you'll be able to define a project that is realistic within your technical qualifications. So, no specific programming knowledge is required. If you choose more of a research-oriented track, you may not need to do any programming at all.",
      "syllabus": "A learning goal is what you should know by the end of the class. The broad learning goal for this class is that, by the end of the class, you will have the requisite knowledge to make a real contribution to the Educational Technology field.\n\nEven established experts in the field do not know everything, however, and neither will you. Instead, by the end of this class, you will have sufficient knowledge to contribute to the field in some way, though not every way. This means the learning goal of the class is determined in part by your own goals in taking this class:\n\n - Are you interested in understanding how technology can help education more theoretically? Then your learning goals would include knowledge of research methodologies, promising pedagogical strategies, and current theories in the community.\n - Are you interested in designing technologies that can help learners learn better? Then your learning goals would include knowledge of pedagogical strategies, current state-of-the-art tools, and the open problems in education and technology.\n - Are you interested in evaluating existing technologies? Then your learning goals would include knowledge of research methodologies in user testing, current state-of-the-art tools, and broader issues surrounding the impact of such tools.\n - Are you interested in contributing to the education enterprise more broadly, even if it isn't at the point of learning? Then your learning goals would include knowledge of the current problems in the field, broader issues surrounding the use of tools in supporting education, and the present tools that address those problems.\n\nBy achieving these learning goals, you will end the class with the knowledge necessary to contribute to the portion of educational technology in which you are most interested.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/educational-technology--ud915?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "",
      "short_summary": "This class is an an introductory course about educational technology offered as CS6460 at Georgia Tech where it is a part of the Online Masters Degree (OMS).",
      "slug": "educational-technology--ud915",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "<i>This class is offered as CS6460 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Credit for taking this course is conferred only on those that enroll in the degree. The text in the following sections comes from the syllabus for CS6460, located [here](https://www.udacity.com/wiki/ud915).</i>\n\nThis class is simultaneously an introductory course about educational technology and an advanced, project-oriented class on designing or researching technology's intersection with education. As such, the course provides information about a large number of topics within educational technology, including pedagogical strategies, research methodologies, current tools, open problems, and broader issues. The scope of the material provided goes beyond what any one person could reasonably learn in a semester. Instead, you will select those areas that appeal to you or that support your ultimate project ideas. For example, if you're interested in research, you may focus on the applicable research methodologies to your chosen area of investigation, relevant pedagogical strategies or theories, and the current state-of-the-art within that community.  If you're interested in design, you may focus on the relevant pedagogical strategies or theories for your chosen domain, the current popular tools within that domain, and open problems that need to be addressed.",
      "expected_duration": 16
    },
    {
      "instructors": [
        {
          "bio": "Charles Isbell is a Professor and Senior Associate Dean at the School of Interactive Computing at Georgia Tech. His research passion is artificial intelligence, particularly on building autonomous agents that must live and interact with large numbers of other intelligent agents, some of whom may be human. Lately, he has turned his energies toward adaptive modeling, especially activity discovery (as distinct from activity recognition), scalable coordination, and development environments that support the rapid prototyping of adaptive agents. He is developing adaptive programming languages, and trying to understand what it means to bring machine learning tools to non-expert authors, designers and developers. He sometimes interacts with the physical world through racquetball, weight-lifting and Ultimate Frisbee.",
          "image": "https://lh4.ggpht.com/BWYEYDvfZfN8Rg_BvReeoHnor_vbN9MCGWCWHMal7cCE8XoK9iq8a4C-KQxn-LeK-S5rpAlCuRTTMPp2B-jL=s0#w=425&h=425",
          "name": "Charles Isbell"
        },
        {
          "bio": "Michael Littman is a Professor of Computer Science at Brown University.  He also teaches Udacity?s Algorithms course (CS215) on crunching social networks.  Prior to joining Brown in 2012, he led the Rutgers Laboratory for Real-Life Reinforcement Learning (RL3) at Rutgers, where he served as the Computer Science Department Chair from 2009-2012.  He is a Fellow of the Association for the Advancement of Artificial Intelligence (AAAI), served as program chair for AAAI's 2013 conference and the International Conference on Machine Learning in 2009, and received university-level teaching awards at both Duke and Rutgers. Charles Isbell taught him about racquetball, weight-lifting and Ultimate Frisbee, but he's not that great at any of them. He's pretty good at singing and juggling, though.",
          "image": "https://lh6.ggpht.com/_tRBHjrD523dV4IEQqR6DVDtzofvJqw7iYeLaG-U1HhgB8w1nsmBENnGPh4GkFuNvM0frkYcCHJWK-8MDV61=s0#w=321&h=321",
          "name": "Michael Littman"
        }
      ],
      "subtitle": "Offered at Georgia Tech as CS 8803",
      "key": "ud600",
      "image": "https://lh3.googleusercontent.com/pt1vxMCUDY1FFAyiff0s7ZrIivaUhYvNz3wP3RrkLLYScqh3lVWlqGEnRLKjgzIZC8yHP4XAguxIR-8ZE6A=s0#w=1287&h=782",
      "expected_learning": "This course will prepare you to participate in the reinforcement learning research community. You will also have the opportunity to learn from two of the foremost experts in this field of research, Profs. Charles Isbell and Michael Littman.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Reinforcement Learning",
      "related_degree_keys": [

      ],
      "required_knowledge": "Before taking this course, you should have taken a graduate-level machine-learning course and should have had some exposure to reinforcement learning from a previous course or seminar in computer science (students who have completed <a href=\"http://www.udacity.com/course/ud675\">CS 7641</a> will be well prepared for this course).\n\nAdditionally, you will be programming extensively in Java during this course. If you are not familiar with Java, we recommend you review Udacity's <a href=\"http://www.udacity.com/course/cs046\">Intro to Java Programming</a> course materials to get up to speed beforehand.",
      "syllabus": "* Reinforcement Learning Basics\n* Introduction to BURLAP\n* TD Lambda\n* Convergence of Value and Policy Iteration\n* Reward Shaping\n* Exploration\n* Generalization\n* Partially Observable MDPs\n* Options\n* Topics in Game Theory\n* Further Topics in RL Models",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/reinforcement-learning--ud600?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Data Science",
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh3.googleusercontent.com/q3B6U4FIKtIiglN3RrPTecVUxKB14hiKl-omg1kzSIcmdu8wTo4dvtUbjJfkIDLqW_nPIhT39UqScnpdUQU=s0#w=4680&h=968",
      "short_summary": "Study machine learning at a deeper level and become a participant in the reinforcement learning research community.",
      "slug": "reinforcement-learning--ud600",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "You should take this course if you have an interest in machine learning and the desire to engage with it from a theoretical perspective. Through a combination of classic papers and more recent work, you will explore automated decision-making from a computer-science perspective. You will examine efficient algorithms, where they exist, for single-agent and multi-agent planning as well as approaches to learning near-optimal decisions from experience. At the end of the course, you will replicate a result from a published paper in reinforcement learning.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Chris Pryby is a Course Developer for the Georgia Tech Online Master's Degree program and is passionate about working to build the future of online education. He has bachelor's degrees from UGA in mathematics and computer science and a doctorate in mathematics from Georgia Tech. Chris has also been active in martial arts since 2011, and he holds a first-degree black belt in hapkido.",
          "image": "https://lh5.ggpht.com/WJ6AgbySX9lOYeqOCs2SQXlPCkXJcKWvdW8mQuhWVdCj_RyRsKRREbPzGf8Ty3vY878z4TVEBrGpaRPT98A=s0#w=2000&h=2000",
          "name": "Chris Pryby"
        }
      ],
      "subtitle": "A Brief Refresher (with Python!)",
      "key": "ud953",
      "image": "",
      "expected_learning": "You should take this course if:\n\n - You want a refresher on the basics of linear algebra or want to learn them for the first time\n - You want to see how linear algebra can be applied to real-world problems.\n - You want to learn linear algebra in the context of programming.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Linear Algebra Refresher Course",
      "related_degree_keys": [

      ],
      "required_knowledge": "The course has no formal prerequisites except experience with some programming language. A familiarity with high-school algebra and trigonometry will also be useful.",
      "syllabus": "### Lesson 1: Vectors\nYou will begin by learning about the basic operations on vectors (one of the fundamental objects of study in linear algebra). You will code a library of functions to perform operations on vectors that you will use in later lessons.\n\n### Lesson 2: Intersections\nYou will learn the geometric and algebraic interpretation of intersections of \"flat\" objects such as lines and planes and how they are used to solve real-world problems. You will also write your own algorithm to find the intersections of sets of lines and planes.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/linear-algebra-refresher-course--ud953?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "",
      "short_summary": "Learn linear algebra by doing: you will code your own library of linear algebra functions!",
      "slug": "linear-algebra-refresher-course--ud953",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "",
      "summary": "This mini-course is intended for students who would like a refresher on the basics of linear algebra. The course attempts to provide the motivation for \"why\" linear algebra is important in addition to \"what\" linear algebra is.\n\nStudents will learn concepts in linear algebra by applying them in computer programs. At the end of the course, you will have coded your own personal library of linear algebra functions that you can use to solve real-world problems.",
      "expected_duration": 0
    },
    {
      "instructors": [
        {
          "bio": "Shannon is Director of Education at MongoDB, managing MongoDB University's in-person training and free online courses. Prior to joining MongoDB, Shannon was an Associate Professor of Computer Science at Drew University with research interests in user experience, information science, and the semantic web. For the past several years, Shannon has divided his time between academia and industry. He has trained software engineers at Goldman Sachs, designed text-retrieval systems at Morgan Stanley, and built many trading and analytics applications at boutique firms in the financial industry.",
          "image": "https://lh5.ggpht.com/ECvn5UF3nKvyX0RDE-7lZD65L5yTlOxGeIkq1D4Ts2BH-V5-PCMopIwoE9IrDZ_DtZOIEFTyPdEphKNvKw=s0#w=200&h=200",
          "name": "Shannon Bradshaw"
        }
      ],
      "subtitle": "Data Manipulation and Retrieval",
      "key": "ud032",
      "image": "https://lh3.ggpht.com/ll9ungBQPIwG1u5WHYyB_q-CO6gAzJC-fT3xotaS5DV3UbNZ7Xdz6b5T3Jpl7aEfmVEY2gjvkkt7KzWVeIo=s0#w=1724&h=1060",
      "expected_learning": "At the end of the class, students should be able to:\n\n*   Programmatically extract data stored in common formats such as csv, Microsoft Excel, JSON, XML and scrape web sites to parse data from HTML.\n*   Audit data for quality (validity, accuracy, completeness, consistency, and uniformity) and critically assess options for cleaning data in different contexts. \n*   Store, retrieve, and analyze data using MongoDB.\n\n<br />\nThis course concludes with a final project where students incorporate what they have learned to address a real-world data analysis problem.",
      "featured": false,
      "project_name": "Add to OpenStreetMap",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Data Wrangling with MongoDB",
      "related_degree_keys": [

      ],
      "required_knowledge": "The ideal student should have the following skills:\n\n*   Programming experience in Python or a willingness to read a little documentation to understand examples and exercises throughout the course.\n*   The ability to perform rudimentary system administration on Windows or Unix\n\nAt least some experience using a unix shell or Windows PowerShell will be helpful, but is not required. \n\nNo prior experience with databases is needed.  \n\n**About MongoDB**  \n*This course is developed in conjunction with MongoDB, Inc., the originator and primary contributor to the open source database <a href=\"https://github.com/mongodb\" target=\"_blank\"> MongoDB</a>. MongoDB is the leading NoSQL database. Designed for how we build and run applications today, MongoDB empowers organizations to be more agile and scalable. It enables new types of applications, better customer experience, faster time to market and lower costs.*",
      "syllabus": "### Lesson 1: Data Extraction Fundamentals\n\n- Assessing the Quality of Data\n- Intro to Tabular Formats\n- Parsing CSV\n- Parsing XLS with XLRD\n- Intro to JSON\n- Using Web APIs\n\n### Lesson 2: Data in More Complex Formats\n\n- Intro to XML\n- XML Design Principles\n- Parsing XML\n- Web Scraping\n- Parsing HTML\n\n\n### Lesson 3: Data Quality \n\n- What is Data Cleaning?\n- Sources of Dirty Data\n- Measuring Data Quality\n- A Blueprint for Cleaning\n- Auditing Validity \n- Auditing Accuracy\n- Auditing Completeness\n- Auditing Consistency\n- Auditing Uniformity\n\n### Lesson 4: Working with MongoDB\n\n- Data Modelling in MongoDB\n- Introduction to PyMongo\n- Field Queries\n- Projection Queries\n- Getting Data into MongoDB\n- Using mongoimport\n- Operators like $gt, $lt, $exists, $regex\n- Querying Arrays and using $in and $all Operators\n- Changing entries: $update, $set, $unset\n\n### Lesson 5: Analyzing Data\n\n- Examples of Aggregation Framework \n- The Aggregation Pipeline\n- Aggregation Operators: $match, $project, $unwind, $group\n- Multiple Stages Using a Given Operator\n\n### Lesson 6: Case Study - OpenStreetMap Data\n\n- Using iterative parsing for large datafiles\n- Open Street Map XML Overview\n- Exercises around OpenStreetMap data\n- Final Project Instructions",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/data-wrangling-with-mongodb--ud032?utm_medium=referral&utm_campaign=api",
      "project_description": "Use important skills from data munging to improve OpenStreetMaps data for a part of the world that you care about and give back to the community.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh5.ggpht.com/qeCf6nazB7BWSdHvcW8ldywfblLGcv9Fkw8_jeVfT5Bf2DrQPjnuHrem2wo3oyif0NuU47yMcX67ceH5hq4=s0#w=130&h=60",
          "name": "MongoDB"
        }
      ],
      "tracks": [
        "Data Science",
        "Software Engineering"
      ],
      "banner_image": "https://lh4.ggpht.com/qu1npHHU4BMh7nSfMGanVGTIpCQZ8MdvrPzY_1M2plyszfsgzFma_B12ZwZ7QrDhyOst7pUJJIoQquUYKw=s0#w=1170&h=242",
      "short_summary": "Data Scientists spend most of their time cleaning data. In this course, you will learn to convert and manipulate messy data to extract what you need.",
      "slug": "data-wrangling-with-mongodb--ud032",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this course, we will explore how to wrangle data from diverse sources and shape it to enable data-driven applications. Some data scientists spend the bulk of their time doing this!\n\nStudents will learn how to gather and extract data from widely used data formats. They will learn how to assess the quality of data and explore best practices for data cleaning. We will also introduce students to MongoDB, covering the essentials of storing data and the MongoDB query language together with exploratory analysis using the MongoDB aggregation framework.\n\nThis is a great course for those interested in entry-level data science positions as well as current business/data analysts looking to add big data to their repertoire, and managers working with data professionals or looking to leverage big data.\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd002\">Data Analyst</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Don M. Dini has been practicing, teaching, and writing about data science for over ten years. He studied computer science and artificial intelligence at University of Illinois at Urbana-Champaign and University of Southern California. While at USC he was a lecturer in computer science and worked on applying AI to various real world problems, such as understanding city populations through simulation, and systems to provide security against unknown attackers, which have since been used at LAX, the US coast guard, among other institutions. Today Don is a data scientist at AT&T where he works on creating the next generation of communication networks, and creating models to understand human communication. In addition Don is an instructor of Kung Fu, and teaches classes in Palo Alto, CA.",
          "image": "https://lh6.ggpht.com/0k6uyqzeUnKTMSxKCQcIDhrxWz9hguNd_wavjluv_7eChcMGXBM2BXXphqze4IsDsTEDh5OZvrouSVpa0qg=s0#w=2205&h=2227",
          "name": "Don Dini"
        },
        {
          "bio": "Rishiraj Pravahan is a data scientist working for AT&T. Prior to joining AT&T. Rishiraj worked for the ATLAS experiment at CERN where he was part of the team that discovered the Higgs Boson. While at CERN, he worked on constructing, commissioning and calibrating the ATLAS detector as well as on software techniques to analyze the massive dataset from the Large Hadron Collider to search for new physics.  \nHe has also been a passionate teacher and advocate for science through public talks and seminars in the US, Europe, India and Latin America. His current work involves, understanding networks, privacy and security of customer data, collection, storage and analysis of sensor data and making advances in the frontiers of statistics and machine learning. In his spare time he loves to read, play pool, cook, travel and learn about other cultures.",
          "image": "https://lh6.ggpht.com/0aHfWdn7_AXVoSxk5isyJu6fUP_lV9dP2nD1KuFw4pIxr30O1bArwJGnWqPO_XBE2qeI_gacUvamjx7ULnAW=s0#w=2134&h=2134",
          "name": "Rishi Pravahan"
        }
      ],
      "subtitle": "Advanced Techniques for Analyzing Data",
      "key": "ud919",
      "image": "https://lh4.ggpht.com/kYr0sxkZKUC3-xlCQHRB1aH9Sr7BibEsBSNLPLJykneum-CnGeecsH-10yzsbbnLYMcM9-uIoGWacJ7HHw=s0#w=1071&h=659",
      "expected_learning": "Many of you may have already taken a course in machine learning or data science or are familiar with machine learning models.\n\nIn this course we will take a more general approach, walking through the questioning, modeling and validation steps of the model building process. \n\nThe goal is to get you to practice thinking in depth about a problem and coming up with your own solutions. Many examples we will attempt may not have one correct answer but will require you to work through the problems applying the methods we hope to illustrate throughout this class.",
      "featured": false,
      "project_name": "Identify Hacking Attempts",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Model Building and Validation",
      "related_degree_keys": [

      ],
      "required_knowledge": "This is an advanced course, and the ideal students for this class are prepared individuals who have:\n\n1. Python programming knowledge, familiarity with python tools like Ipython Notebook and data analysis libraries like Scikit-learn, Scipy, and Pandas\n2. Knowledge of descriptive, inferential, and predictive statistics\n3. Knowledge of calculus, especially derivatives and integrals\n4. Knowledge of basic matrix algebra - matrices, vectors, determinant, identity matrix, multiplication, inverse\n5. Taken Intro to Machine learning and have understanding of common supervised learning and unsupervised learning algorithms, such as SVM and k-means clustering",
      "syllabus": "### Lesson 1 - Introduction to the QMV Process\nLearn about the Question, Modeling, and Validation (QMV) process of data analysis. Understand the basics behind each step and apply the QMV process to analyze on how Udacity employees choose candies!\n\n### Lesson 2 - Question Phase\nWe will drill in on the questioning phase of the QMV process. We?ll teach you how to turn a vague question into a statistical one that can be analyzed with statistics and machine learning. You will also analyze a Twitter dataset and try to predict when a person will tweet next! \n\n### Lesson 3 - Modeling Phase\nBuilding upon lesson 2, you will learn how to build rigorous mathematical, statistical, and machine learning models so you can make accurate predictions. You look through the recently released U.S. medicare dataset for anomalous transactions.\n\n### Lesson 4 - Validation Phase\nSo how do you tell if your model is doing well? In this lesson, we will teach you some of the fundamental and important metrics that you can use to grade the performance of the models that you?ve build. You will analyze the AT&T connected cars data set and see if you can tell which driver is which by analyzing their driving patterns.\n\n### Final Project - Identify Hacking Attempts from Network Flow Logs\n\nYou will create a program that examines log data of net flow traffic, and produces a score, from 1 to 10, describing the degree to which the logs suggest a brute force attack is taking place on a server.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/model-building-and-validation--ud919?utm_medium=referral&utm_campaign=api",
      "project_description": "Create a program that examines log data of net flow traffic, and produces a score, from 1 to 10, describing the degree to which the logs suggest a hacking attempt.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh6.ggpht.com/gMNRaCIUrZaeSZjBQnBD7Cc54N0Ykk0stm-rMKqZcvNW6AnATbJY2NgRdyeVy0Hiq3xT5MmoSSdflMFo-NY=s0#w=130&h=60",
          "name": "AT&T"
        }
      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh3.ggpht.com/-YwZl4GyWW8MDUKHn-dY8HNPTDVzUpvJpwW8u8PKkC1ypMAoCt4SeBnbdQg3OaUEBIpSHetN1LqVuG2L8iVr=s0#w=4680&h=968",
      "short_summary": "This course will teach you how to start from scratch in understanding and paying attention to what is important in the data and how to answer questions about data",
      "slug": "model-building-and-validation--ud919",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "This course will teach you how to start from scratch in answering questions about the real world using data. Machine learning happens to be a small part of this process. The model building process involves setting up ways of collecting data, understanding and paying attention to what is important in the data to answer the questions you are asking, finding a statistical, mathematical or a simulation model to gain understanding and make predictions. \n\nAll of these things are equally important and model building is a crucial skill to acquire in every field of science. The process stays true to the scientific method, making what you learn through your models useful for gaining an understanding of whatever you are investigating as well as make predictions that hold true to test. \n\nWe will take you on a journey through building various models. This process involves asking questions, gathering and manipulating data, building models, and ultimately testing and evaluating them.",
      "expected_duration": 8
    },
    {
      "instructors": [
        {
          "bio": "Vincent Vanhoucke is a Principal Research Scientist at Google, working with the Google Brain team on deep learning research and infrastructure. He completed his Ph.D. at Stanford University on speech recognition, and now focusses his research on image and video understanding as well as mobile and robotic perception.",
          "image": "https://lh3.googleusercontent.com/8zTyeWKYxkbyKy3_-21hkrMEClqt2effcVItDB5GZpvmtjjcl_7WFiLKNhJOaaMH1aGOvAuFzODPwzncZ_-Z=s0#w=427&h=427",
          "name": "Vincent Vanhoucke"
        }
      ],
      "subtitle": "Take machine learning to the next level",
      "key": "ud730",
      "image": "https://lh3.googleusercontent.com/pfUiqEYS6oUORAgBnWqm2666udJRH4d1S9ZSdhMlRWEp2LkHvUX5TBbkKPcakRkKMnTmciXkZzJVX2ZsJg=s0#w=1200&h=738",
      "expected_learning": "Deep learning methods are becoming exponentially more important due to their demonstrated success at tackling complex learning problems. At the same time, increasing access to high-performance computing resources and state-of-the-art open-source libraries are making it more and more feasible for enterprises, small firms, and individuals to use these methods. \n\nMastering deep learning accordingly positions you at the very forefront of one of the most promising, innovative, and influential emergent technologies, and opens up tremendous new career opportunities. For Data Analysts, Data Scientists, Machine Learning Engineers, and students in a Machine Learning/Artificial Intelligence curriculum, this represents a rarefied opportunity to enhance your Machine Learning portfolio with an advanced, yet broadly applicable, collection of vital techniques.",
      "featured": true,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=Kl5TAFus4-Y"
      },
      "title": "Deep Learning",
      "related_degree_keys": [

      ],
      "required_knowledge": "This is an intermediate to advanced level course. Prior to taking this course, and in addition to the prerequisites and requirements outlined for the Machine Learning Engineer Nanodegree program, you should possess the following experience and skills:\n\n- Minimum 2 years of programming experience (preferably in Python)\n- Git and GitHub experience (assignment code is in a GitHub repo)\n- Basic machine learning knowledge (especially supervised learning)\n- Basic statistics knowledge (mean, variance, standard deviation, etc.)\n- Linear algebra (vectors, matrices, etc.)\n- Calculus (differentiation, integration, partial derivatives, etc.)",
      "syllabus": "**Lesson 1: From Machine Learning to Deep Learning**\n\n- Understand the historical context and motivation for Deep Learning.\n- Set up a basic supervised classification task and train a black box classifier on it.\n- Train a logistic classifier ?by hand?Optimize a logistic classifier using gradient descent, SGD, Momentum and AdaGrad.\n\n**Lesson 2: Deep Neural Networks**\n\n- Train a simple deep network.\n- Effectively regularize a simple deep network.\n- Train a competitive deep network via model exploration and hyperparameter tuning.\n\n**Lesson 3: Convolutional Neural Networks**\n\n- Train a simple convolutional neural net.\n- Explore the design space for convolutional nets.\n\n**Lesson 4: Deep Models for Text and Sequences**\n\n - Train a text embedding model.\n - Train a LSTM model.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/deep-learning--ud730?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh3.googleusercontent.com/-wAssFJ46nfGPtxb0f6nI8Md1WnqV65-GStZyjpVbVmmhNgKP8PWvB8xFEfA-MoAwRXXKPuMIuzsJouZTlji=s0#w=2400&h=540",
      "short_summary": "Learn how to apply deep learning to solve complex problems. Train and test your models in TensorFlow, including convolutional and recurrent neural networks.",
      "slug": "deep-learning--ud730",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "**Machine learning** is one of the fastest-growing and most exciting fields out there, and **deep learning** represents its true bleeding edge. In this course, you?ll develop a clear understanding of the motivation for deep learning, and design intelligent systems that learn from complex and/or large-scale datasets. \n\nWe?ll show you how to train and optimize basic neural networks, convolutional neural networks, and long short term memory networks. Complete learning systems in TensorFlow will be introduced via projects and assignments. You will learn to solve new classes of problems that were once thought prohibitively challenging, and come to better appreciate the complex nature of human intelligence as you solve these same problems effortlessly using deep learning methods. \n\nWe have developed this course with Vincent Vanhoucke, Principal Scientist at Google, and technical lead in the Google Brain team.\n\n***Note**: This is an intermediate to advanced level course offered as part of the [Machine Learning Engineer Nanodegree](https://www.udacity.com/course/machine-learning-engineer-nanodegree--nd009) program. It assumes you have taken a first course in machine learning, and that you are at least familiar with supervised learning methods.*",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Don is the author of <a href=\"http://www.amazon.com/gp/product/0465050654/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0465050654&linkCode=as2&tag=udacity-20\">The Design of Everyday Things</a>.  He is both a businessperson (he has worked as a VP at Apple, an Executive at HP and UNext) and an academic who has been a faculty member at Harvard, UC San Diego, Northwestern, and the Korea Advanced Institute of Science and Technology (KAIST). He is a member of the National Academy of Engineering, an IDEO fellow, and a trustee of IIT?s Institute of Design. He can be found at www.jnd.org.",
          "image": "https://lh3.ggpht.com/zgOHg0aHyR8RWqi92zzO5Iy0wHcyBwDBYl8ivEx17q1pmS09K1bLbjLJhPoaugZI2uBBo2rWXe2dp4sJxA=s0#w=270&h=270",
          "name": "Don Norman"
        },
        {
          "bio": "Kristian Simsarian is a design leader, educator and consultant. He is currently the founder and chair of the undergraduate Interaction Design program at California College of the Arts (CCA). Kristian co-founded the Software Experiences practice at IDEO as an Associate Partner, and led design innovation initiatives for many of the world?s most impactful organizations, including: Microsoft, Nokia, Lily, Pfizer, Samsung, Yahoo!, XBOX, SAP, AT&T, Procter & Gamble, the FBI and the National Institutes of Health. After a decade at IDEO he shifted his focus to education while continuing as an IDEO Fellow and independent consultant. As co-teacher of this course, he brings the first steps of actually taking action and becoming a designer yourself.",
          "image": "https://lh3.ggpht.com/iBSSqtDJQ8Wcbcl1bb9jt6nsfRiPdeZPQewkcsfTqfOTWbIa2nsgQQDXBbbTHdI4mKsSADUnAJesrptawpxe=s0#w=200&h=200",
          "name": "Kristian Simsarian"
        }
      ],
      "subtitle": "Principles of Design",
      "key": "design101",
      "image": "https://lh3.ggpht.com/DbM6XZ7d1YBNVsdieedaRqEjGrJWNgwKFss7yIqNGDZpnd6O6YbJH1FcIb6SgGdGf3VGm85itUNyMi7-Jy0=s0#w=436&h=268",
      "expected_learning": "This course will provide you with the knowledge needed to start recognizing the role of design in today?s world, and to start making better design decisions in your own life. In addition to learning basic design concepts such as affordances and signifiers, you will also gain practice in observing and applying design principles.",
      "featured": false,
      "project_name": "Design the UI for a Time Bank",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to the Design of Everyday Things",
      "related_degree_keys": [

      ],
      "required_knowledge": "There are no prerequisites for the course; it?s for anyone curious about basic design principles.",
      "syllabus": "Lesson 1: Affordances and Signifiers (4 hours)\n\nLesson 2: Conceptual Models and the System Image (4 hours)\n\nLesson 3: Gulfs of Evaluation and Execution (1 hour)\n\nFinal Project: Design the User Interface (UI) for a Timebank (7 hours) \n\n*The times include watching instructional videos, completing the course exercises, and finishing projects. In total, this course should take an average of 16 hours.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-the-design-of-everyday-things--design101?utm_medium=referral&utm_campaign=api",
      "project_description": "Synthesize principles from the course to design a user interface for a mobile time-bank app that allows people to exchange time for completing tasks.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Non-Tech"
      ],
      "banner_image": "https://lh6.ggpht.com/Qn26jiZ9r-90AoLyhVvqYKAqY7dhglB9UOhOVxZCU8APmC4Wa1mZbTLP5sIj202aubiAj0TuKV4sDI9KYgM=s0#w=4680&h=968",
      "short_summary": "This course will provide you with the insight to start recognizing the role of design in today?s world, and to start making better design decisions in your own life.",
      "slug": "intro-to-the-design-of-everyday-things--design101",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "Everyone designs. Design occurs anytime you deliberately change an environment to make things better. When you decide what seat to take in an auditorium you?re designing your experience. When you rearrange the furniture in a room or draft an email, you?re designing. \n\nThis course provides a summary of key concepts from the first two chapters of <a href=\"http://www.amazon.com/gp/product/0465050654/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0465050654&linkCode=as2&tag=udacity-20\">The Design of Everyday Things</a>  (Revised and Expanded Edition, November 2013) by Don Norman. It?s intended to be enjoyable and informative for anyone curious about design: everyday people, technical people, designers, and non-designers alike.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Chris Wilson is an Open Web Platform Developer Advocate at Google working on Chrome.  He began working on web browsers in 1993 when he co-authored the original Windows version of NCSA Mosaic, went on to Microsoft to work on Internet Explorer for fifteen years, and joined Google in 2010.  He has a particular interest in enabling awesome user experiences on the web platform, and is a long-time participant in various web standards working groups.",
          "image": "https://lh5.ggpht.com/xR8bjg7ECQKxjJlxGcibsWcx5gw5W5FBzET1Orfw557IoYKHX0E8Mgv5osw5yZld5mOP2EsHOME6PP7m0g=s0#w=512&h=512",
          "name": "Chris Wilson"
        },
        {
          "bio": "Peter Lubbers is a Program Manager at Google in the Chrome Developer Relations team and lives and breathes HTML5. He is the co-author of Pro HTML5 Programming (Apress) and the founder of the San Francisco HTML5 User Group, the largest HTML5 User Group in the world. A native of the Netherlands, Peter served as a Special Forces commando in the Royal Dutch Green Berets. In his spare time Peter likes jumping out of planes, bungee-jumping, and running ultra-marathons.",
          "image": "https://lh5.ggpht.com/Lk1Ia93wwl1UrEWWlQw5hS34XhsVlel2IYrnYCXTmSG9U9Ox8_eIqMfplBNfsmRV4gJ63oZBh-k1qBRM-SI=s0#w=236&h=236",
          "name": "Peter Lubbers"
        }
      ],
      "subtitle": "Building Mobile Web Experiences",
      "key": "cs256",
      "image": "https://lh5.ggpht.com/IKdCmTWn8a2nMhlwMYzryvzRN5CUZAOBr4tDrEAbszV7TIFe9pRAInA4kkYcgTXwrifJsBEsq1agTueuu-g=s0#w=436&h=268",
      "expected_learning": "After completing this class, you?ll have built a web application with a first-class mobile experience. You?ll understand what it takes to build great web experiences on mobile devices, have gained experience with the tools you need to test performance, and be able to apply your knowledge to your own projects in the future.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=bFmMT2ZDQ8M"
      },
      "title": "Mobile Web Development",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course is for experienced front-end web developers who?d like to learn what it takes to create [great](http://www.chrome.com/racer) [mobile](http://sketchpad.io) experiences. In order to succeed in this class, you should be comfortable with HTML, CSS, and Javascript, and should have experience creating web apps, either professionally or for fun. You don't need to know any specific HTML5 extras or APIs, we'll cover any of those that we need as the course progresses.",
      "syllabus": "In this course, you will learn how to build web experiences that adapt to the different screen sizes and capabilities that mobile devices offer, and how to scalably optimize media for mobile and desktop.  We will cover programming touch interaction, as well as how to optimize form field input for mobile devices and use APIs like geolocation and the accelerometer, and ensuring your web experiences work great when network conditions are sub-optimal.  Finally, you?ll gain the tools to investigate performance in mobile applications, with a strong understanding of mobile networking, battery usage patterns and optimizing paint techniques to build smooth animations on mobile.\n\n### Lesson 01: Syllabus\nWe?ll start with a high-level overview of the course and what to expect in it. We?ll also go into more depth on what we mean by mobile web development, and why you should care about it.\n\n### Lesson 02: Mobile Development Tools\nWorkflow and tooling is incredibly important for building great web apps, and this carries over to mobile web development. This lesson will show you how to use the Chrome Developer Tools to develop for the mobile web.\n\n### Lesson 03: Mobile UX and Viewport\nDesigning for the mobile web is all about a smooth user experience. This lesson will get you thinking about how to achieve that on mobile, and we?ll introduce the first of many tools you need to achieve this: the viewport.\n\n### Lesson 04: Fluid Design\nMobile means lots of different devices and form factors. We?ll discuss how to make your site responsive, clean, and user-friendly on multiple devices and layouts.\n\n### Lesson 05: Media Queries\nSometimes different devices call for fundamentally different layouts. This lesson will teach you how to achieve this using media queries.\n\n### Lesson 06: Responsive Images\nMedia requirements are different in mobile - network constraints and very high resolution screens set up a conflict that can be challenging.  We?ll talk about how best to integrate media into your mobile web applications, and adaptively scaling images based on the environment.\n\n### Lesson 07: Optimizing Performance\nUsers expect a fast, seamless experience on mobile. We?ll go over optimizing various performance metrics to improve that experience, such as network, cpu, rendering, and battery performance.\n\n### Lesson 08: Touch\nTouch input is fundamentally different from mouse input, and requires you to think about your user interactions differently. We?ll go over UX concerns with touch-based interaction, and how to design user interactions that work across devices.\n\n### Lesson 09: Input\nUsing a keyboard on mobile is awful. We?ll discuss ways to improve it, using semantic input for form data, and other user input options on mobile.\n\n### Lesson 10: Device Access\nMobile devices have a full array of sensors typically unavailable on desktop. We?ll talk about camera access, geolocation, and other sensors and feedback you have access to on mobile.\n\n### Lesson 11: Offline and Storage\nIt?s an unfortunate reality that mobile users aren?t always online. We?ll go over using the local cache as well as local storage APIs to give your users a great offline (and partially-online) experience as well.\n\n### Lesson 12: Wrap-up\nWe?ll finish up the class by talking briefly about other topics to consider, such as app experience, monetization, deployment and distribution. We?ll also point you to other resources to look at moving forward in your career.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/mobile-web-development--cs256?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh6.ggpht.com/mtT_3mCOWwToCNi4g-MFR0M8mheMa1b4KndiDk4r5kJvK9LQI73Sv2EEC0x9YCX4SL3Ko5hxIPPPPsoTTCdp=s0#w=4680&h=968",
      "short_summary": "In this course, you'll learn how to build great mobile web experiences. We'll cover performance issues on mobile, and how to make use of mobile sensors.",
      "slug": "mobile-web-development--cs256",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "So you?ve heard mobile is kind of a big deal, and you?re not sure how to transform your traditional desktop-focused web apps into fast, effective mobile experiences. This course is designed to teach web developers what they need to know to create great cross-device mobile web experiences. This course will focus on building mobile web apps, which will work across multiple platforms including Android, iOS, and others.",
      "expected_duration": 6
    },
    {
      "instructors": [
        {
          "bio": "Ilya Grigorik is a web performance engineer at Google and the author of High Performance Browser Networking (O'Reilly). When he's not optimizing web performance, he is likely found working on new performance or analytics related open source projects, launching fun projects like <a href=\"http://www.vimgolf.com\" target=\"_blank\">vimgolf.com</a>, or optimizing his triathlon times. Prior to focusing on web performance, Ilya spent 5 years measuring and optimizing performance of social campaigns - he was the founder of PostRank, which was acquired and integrated into Google Analytics. In short, he likes to optimize and make things fast.",
          "image": "https://lh5.ggpht.com/84uIfgiRRMGSTRtIqaLwt7nxvcyXEKC0SQxmaB_sF-_NNOMerCgGaS7BXcOwP7G7jlZKvsh6IIzxRvdsCU9b=s0#w=400&h=400",
          "name": "Ilya Grigorik"
        },
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "The Critical Rendering Path",
      "key": "ud884",
      "image": "https://lh6.ggpht.com/f_0W8h__3G99CWTjnMjD8BUKm7yp2-wJyApLtTwFoFtlal2ULf_JgHIsOQq2NiYfKOdMlXlMHDKNo5XVZLs=s0#w=1757&h=1080",
      "expected_learning": "From Ilya Grigorik's [High Performance Browser Networking](http://www.google.com/url?q=http%3A%2F%2Fchimera.labs.oreilly.com%2Fbooks%2F1230000000545%2Findex.html&sa=D&sntz=1&usg=AFQjCNGqIsrSJdHvrYxIgEbLW577cvRxSA \"High Performance Browser Networking\"):\n\n\"The emergence and the fast growth of the web performance optimization (WPO) industry within the past few years is a telltale sign of the growing importance and demand for speed and faster user experiences by the users. And this is not simply a psychological need for speed in our ever accelerating and connected world, but a requirement driven by empirical results, as measured with respect to the bottom-line performance of the many online businesses:\n\n* Faster sites lead to better user engagement.\n* Faster sites lead to better user retention.\n* Faster sites lead to higher conversions.\n\nSimply put, speed is a feature.\"\n\n### Project\nYou will optimize an online portfolio for speed, which you can share with the world to showcase your skills!\n\nMaking a great first impression is absolutely key and an online portfolio can help you stand apart from the crowd. We?ll give you a template for a modern, mobile-friendly portfolio which you?ll be able to completely customize so that it shows off your work and your skills the way you want. But before you show it off to the world, you?ll practice your web performance skills by optimizing the portfolio to render as fast as possible.",
      "featured": false,
      "project_name": "Website Optimization",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=v5us0j3QmW4"
      },
      "title": "Website Performance Optimization",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course is for any and all web developers, whether you started learning about HTML, CSS and JavaScript recently or have been building websites since the nineties!\n\nMost importantly, you should be able to explain the overall purpose of HTML, CSS and JavaScript with respect to website structure. In addition, you should be comfortable reading and writing HTML documents and modifying JavaScript files.\n\nThis course is taught with <a href=\"https://www.google.com/intl/en_us/chrome/browser/\" target=\"_blank\">Google Chrome</a> and <a href=\"http://www.google.com/intl/en/chrome/browser/canary.html\" target=\"_blank\">Google Chrome Canary</a>.",
      "syllabus": "### Overview\nThroughout the course, you?ll build a performance toolbox to help you build faster website experiences by taking advantage of PageSpeed Insights recommendations and measuring page performance on mobile and desktop with Chrome Developer Tools.\n\nThis class contains an introductory lesson, two primary lessons and a final project. Before diving into optimizations, you?ll build an understanding of how browsers convert HTML, CSS and JavaScript into websites. Along the way, you?ll practice measuring performance using the same tools Google engineers use.\n\nThen comes the really fun part: optimization! You?ll learn about easy-to-implement performance gains and develop a simple and powerful model for uncovering optimization opportunities.\n\nYou?ll put your newfound performance skillset to the test with the final project, where you?ll be optimizing your own online portfolio website!\n\n##Lessons\n###Lesson 0 (20 minutes)\nYou can?t optimize what you can?t measure, so in this lesson you?ll learn how to open Chrome Developer Tools to measure the performance of mobile and desktop websites.\n\n###Lesson 1 (60 minutes)\nOptimizing any website?s performance requires a strong understanding of how browsers build websites from HTML, CSS and JavaScript. You?ll start by breaking down the **Critical Rendering Path** - the steps the browser has to take to render a page. You?ll get an understanding of how:\n\n* **HTML** is converted to the **Document Object Model (DOM)**.\n* **CSS** is converted to the **CSS Object Model (CSSOM)**.\n* the browser runs **layout** to determine the position and size of elements before **painting** pixels on the screen.\n\nThroughout the lesson, you?ll learn how to take advantage of the Timeline view in **Chrome Developer Tools** to measure each and every step?s performance on mobile and desktop.\n\n###Lesson 2 (90 minutes)\nYou?ll explore easy HTML, CSS and JavaScript optimizations with significant performance implications, some of which are as simple as adding a single attribute to an HTML tag! Along the way, you?ll be developing the skills to help you diagnose opportunities for optimizations, including:\n\n* building **quick and dirty** diagrams of the Critical Rendering Path.\n* identifying **three key metrics** to triangulate potential performance bottlenecks.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/website-performance-optimization--ud884?utm_medium=referral&utm_campaign=api",
      "project_description": "Optimize a provided website with a number of optimization- and performance-related issues so that it achieves a target PageSpeed score and runs at 60 frames per second.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh4.ggpht.com/tLVuOAJWUxC6mLib6f7JTMkkopSrzIGp6JCrMmRX7ufuRgYLdbgQPnzEqqaPOmtZYxGYSe_TuCR8AZ-OI7E=s0#w=4680&h=968",
      "short_summary": "Learn how browsers convert HTML, CSS and JavaScript into websites while you experiment with Chrome Developer Tools to measure and optimize website speed!",
      "slug": "website-performance-optimization--ud884",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "You will learn how to optimize any website for speed by diving into the details of how mobile and desktop browsers render pages.\n\nIn this short course, you?ll learn about the Critical Rendering Path, or the set of steps browsers must take to convert HTML, CSS and JavaScript into living, breathing websites. From there, you?ll start exploring and experimenting with tools to measure performance and simple strategies to deliver the first pixels to the screen as early as possible. You?ll learn how to dive into recommendations from [PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/ \"PageSpeed Insights\") and the Timeline view of Google Chrome?s Developer Tools to find the data you need to achieve immediate performance boosts!\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> Nanodegree.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Andy Brown is a Lead Instructor at Udacity. He has a degree in physics from MIT, and has devoted his time after graduating to teaching and learning. Since joining Udacity in 2012, Andy has helped design dozens of classes. He loves exploring this new educational medium by creating innovative and engaging courses. When he?s not figuring out the best ways to transform minds, you can find Andy on his bike or in his car, exploring the amazing experiences that his new California home has to offer.",
          "image": "https://lh6.ggpht.com/gzcZTQuXefPLSSaKithiGKzP5vcc_Gs-CbJjmuCTIn-YLsjzjvyWyBwnDXa-dVOf9EbOX03va4jFTdD4_w=s0#w=1800&h=1800",
          "name": "Andy Brown"
        },
        {
          "bio": "Sarah is a Stanford grad with a BS and MS in Computer Science, and spent a lot of her time at Stanford TAing CS courses.  She then spent two years working at Google before deciding to follow her passion for teaching by joining Udacity.  In her spare time, Sarah enjoys performing musical theatre, making sorbet from locally grown fruit, and rock climbing.",
          "image": "https://lh5.ggpht.com/s53FL7Mo8adGee0UvyAfVV2M73_ek5pP5gOs4soRO_-hBYy5EmMbtfk1HuCvA5yuAbKyihN04vXbsDxCBlY=s0#w=4007&h=4000",
          "name": "Sarah Spikes"
        }
      ],
      "subtitle": "Your Tiles. Your Styles.",
      "key": "ud248",
      "image": "https://lh4.ggpht.com/kJEnfqhPvtm4m3EneSZ4fWYGS8lW4YNhEjk6zPkyrQaBUHc-2Y_ElDic99NHI0h-UBLXVbRCjFybFvrWxdk=s0#w=970&h=485",
      "expected_learning": "**In this course, you'll learn:**\n\n* How a computer program works (specifically small web applications like the 2048 game).\n* What HTML, CSS, and Javascript are and how they interact to make a functioning web application.\n* How to make small changes to HTML and CSS files that have **very large** changes in a program (large enough to turn the original 2048 game into a drastically different <a href=\"http://2048-class.github.io/2048/\" target=\"_blank\">Udacity version</a>).\n* How to use Github to make a copy of an open-source program, make changes to that copy, create your own version, and then host that version so you can share it with your friends.\n* Why open-source is such an amazing idea :)",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=915_kRZ6Hfc"
      },
      "title": "Make Your Own 2048",
      "related_degree_keys": [

      ],
      "required_knowledge": "Nothing! \n\nReally. This course is for complete beginners. It is designed to help someone who has never seen computer code take their first steps into the world of programming and web-development.",
      "syllabus": "### Lesson 1: Exploring the HTML and CSS\nYou will create our own version of 2048 by making changes to the existing HTML and CSS files. Within 10 minutes, you'll have your own game. Within an hour, you're friends will be playing **your** 2048 game (fun bonus: your game will be totally mobile-friendly). The topics we'll cover are:\n\n* What is open source? \n* What is HTML? What is CSS? Javascript? \n* How do these three interact to lead to a fully functioning web/mobile app?\n* What is Github?\n* How do I get someone else's code, make changes, and create my own version?\n* How do I host and share my game?",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/make-your-own-2048--ud248?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [

      ],
      "banner_image": "https://lh6.ggpht.com/B1RP3M4ix4ci0mRVdw416va2XUh-AawyATAFkcFakg1lqcNRRTtmkFbx15em3cxAmfogB0z7113fVJctfg=s0#w=970&h=485",
      "short_summary": "Ten minutes into this class you'll make your own completely personalized version of the insanely addictive game 2048. Even if you've never coded before. Pretty cool, no?",
      "slug": "make-your-own-2048--ud248",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "days",
      "summary": "Ten minutes into this class you will make your own completely personalized version of the insanely addictive game <a href=\"http://gabrielecirulli.github.io/2048/\" target=\"_blank\">2048</a>. Even if you've never coded before. Pretty cool, no?\n\nYou'll do this by making small (but important) modifications to the source code for the original 2048 game. If this sounds intimidating, don't worry. We'll teach you the basics of HTML and CSS and how they interact with Javascript (don't worry if that sentence doesn't mean anything to you yet. It will soon).\n\nThe purpose of this class is to have fun learning how to quickly and easily take an existing open source program, make some changes, and create something that looks and feels completely new. The game you create will be mobile friendly (you can play it on your phone!) and totally shareable.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Colt McAnlis is a Developer Advocate at Google focusing on Performance and Gaming; Before that, he was a graphics programmer in the games industry working at <a href=\"http://goo.gl/TfRlw\" target=\"_blank\">Blizzard</a>, <a href=\"http://goo.gl/6w5AMB\" target=\"_blank\">Microsoft</a>, and <a href=\"http://goo.gl/1RyVsu\" target=\"_blank\">Petroglyph</a>. He?s been an Adjunct Professor at <a href=\"http://goo.gl/4wHn51\" target=\"_blank\">SMU Guildhall</a>, a <a href=\"http://goo.gl/vaWjc\" target=\"_blank\">UDACITY</a> instructor, and a <a href=\"http://goo.gl/di4Osg\" target=\"_blank\">Book Author</a>. Recently, he?s been teaching Android Devs the <a href=\"http://goo.gl/4ZJkY1\" target=\"_blank\">Zen of Performance</a>. When he's not working with developers, Colt spends his time preparing for an invasion of giant ants from outer space.\n\nYou can follow him on G+ (+Colt McAnlis) or Twitter (@duhroach)",
          "image": "https://lh3.ggpht.com/fqXCAak3vE6L4YY-_JjvhpftvEduRczdO1JUlFz8OAFBIgobjI3bc1cI7akEmwe9gKOieAdCJn29refQ0w=s0#w=285&h=285",
          "name": "Colt McAnlis"
        },
        {
          "bio": "Peter Lubbers is a Program Manager at Google in the Chrome Developer Relations team and lives and breathes HTML5. He is the co-author of Pro HTML5 Programming (Apress) and the founder of the San Francisco HTML5 User Group, the largest HTML5 User Group in the world. A native of the Netherlands, Peter served as a Special Forces commando in the Royal Dutch Green Berets. In his spare time Peter likes jumping out of planes, bungee-jumping, and running ultra-marathons.",
          "image": "https://lh5.ggpht.com/Lk1Ia93wwl1UrEWWlQw5hS34XhsVlel2IYrnYCXTmSG9U9Ox8_eIqMfplBNfsmRV4gJ63oZBh-k1qBRM-SI=s0#w=236&h=236",
          "name": "Peter Lubbers"
        }
      ],
      "subtitle": "Building High Performance Web Apps",
      "key": "cs255",
      "image": "https://lh5.ggpht.com/C-c9-2x5jVtuwhzNRR-RzDnp_5sAHFTaKeySuZYlUZDv0P4GTKCA4wsS_PLuT7MokRAKaZ1o9JmsY2eTUJc0=s0#w=436&h=268",
      "expected_learning": "At the end of this course, you'll understand how to develop an HTML5 game. \nYou will gain familiarity with HTML5 features such as 2D canvas and techniques for improving performance.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=F3JeV756B7w"
      },
      "title": "HTML5 Game Development",
      "related_degree_keys": [

      ],
      "required_knowledge": "Knowledge of HTML, Javascript, and how the web works is necessary for this course. There is an optional lesson on the specific parts of Javascript and the DOM that you'll need for this class as a refresher, but this is not an introductory course on Javascript.",
      "syllabus": "### Lesson 0\nOptional HTML/Javascript crash course\n\n### Lesson 1\nIntroduction to Canvas rendering\n\n### Lesson 2\nAtlases\n\n### Lesson 3\nMap rendering\n\n### Lesson 4\nBasic Input, handling events\n\n### Lesson 5\nThe entity hierarchy\n\n### Lesson 6\nBox2D, and using external libraries\n\n### Lesson 7\nAdding sound\n\n### Lesson 8\nAsynchronous Loading\n\n### Supplementary Materials\n![Alt text](https://s3.amazonaws.com/udacity-hosted-downloads/A9781430266976-3d.png)\n\n\n[Link to download free chapters](http://bit.ly/1i3rk63)",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/html5-game-development--cs255?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh4.ggpht.com/WJVBXaHIXBSp3RECYt66FI3LHOgxll6b9b-7tCs2roVYTrAQr2qNgiWrODfs__ZydPfCGX_-xNptuPS3FUZ-=s0#w=4680&h=968",
      "short_summary": "Learn how to build high-performance web games with HTML5. We'll port industry-standard development techniques to the web and use them to create a game.",
      "slug": "html5-game-development--cs255",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "David Evans is a Professor of Computer Science at the University of Virginia where he teaches computer science and leads <a href=\"http://www.jeffersonswheel.org/\" target=\"_blank\">research in computer security</a>. He is the author of an <a href=\"http://www.computingbook.org/\" target=\"_blank\">introductory computer science textbook</a> and has won Virginia's highest award for university faculty. He has PhD, SM, and SB degrees from MIT.",
          "image": "https://lh6.ggpht.com/1x-8cXA7JU8bNOy4xf1TyroDZlbI1aWDpeq2fjUcjEhEhfGyF5RBoS4yRjop22RBOfWNmtoyf67trTmcQg-6=s0#w=137&h=137",
          "name": "Dave Evans"
        }
      ],
      "subtitle": "Science of Secrets",
      "key": "cs387",
      "image": "https://lh4.ggpht.com/5VkY7VUpL3oGc1MTj01krvUZfEXbR_OGt07C_WQAq84m-q8aAMcFWgmmyeotMR0IfCordz07ffCA1T6YXgbp=s0#w=436&h=268",
      "expected_learning": "Explore how secrets are written and shared, as well as what can go wrong when cryptography is misused or implemented badly.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=HlNDXiVnhqI"
      },
      "title": "Applied Cryptography",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course, as well as some understanding of probability and theory of computation and algorithm analysis.",
      "syllabus": "### Lesson 1: Perfect Ciphers\n\nWhat makes certain ciphers perfect, how the Lorenz Cipher was broken\n\n### Lesson 2: Symmetric Encryption\n\nSending messages when two people share a secret\n\n### Lesson 3: Key Exchange\n\nTechniques to establish a shared secret\n\n### Lesson 4: Asymmetric Encryption\n\nExchanging information using public key cryptosystems\n\n### Lesson 5: Public Key Protocols\n\nEncrypted key exchange, certificates, secure commerce\n\n### Lesson 6: Using Cryptographic Primitives\n\nHow cryptography can be useful for anonymizing communication, voting, and digital cash\n\n### Lesson 7: Secure Computation\n\nComputing without exposing data",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/applied-cryptography--cs387?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh6.ggpht.com/174Pycf1xsgQw8LFqOJs0t4wMcUSZ_KYbQpL1hhtsVIRRMJqC9K3biUSFjjGpz-qyhRhK8yotUGLeJdYIWY=s0#w=4680&h=968",
      "short_summary": "Cryptography is present in everyday life, from paying with a credit card to using the telephone.  Learn all about making and breaking puzzles in computing.",
      "slug": "applied-cryptography--cs387",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Cryptography is present in everyday life, from paying with a credit card to using the telephone. Learn all about making and breaking puzzles in computing.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Sebastian Thrun is a Research Professor of Computer Science at Stanford University, a Google Fellow, a member of the National Academy of Engineering and the German Academy of Sciences. Thrun is best known for his research in robotics and machine learning, specifically his work with self-driving cars.",
          "image": "https://lh4.ggpht.com/DG-7wffxjR7WqOHdXavbgsNlJ7ZKL2nuhY7hDiSijK7xISk3mCTgdM-9_JUGRjI-qfTk1iJCL5axjZEZDQ=s0#w=200&h=200",
          "name": "Sebastian Thrun"
        }
      ],
      "subtitle": "Making Decisions Based on Data",
      "key": "st101",
      "image": "https://lh5.ggpht.com/TeJwuxZIGGaiuAVtTI69tdHKrrs9DOBNgvBHe487ISVN38fGJ-TMDlffwmQd_ObDe4f_FQeLatO3tziADw=s0#w=436&h=268",
      "expected_learning": "<p>This course will cover visualization, probability, regression and other topics that will help you learn the basic methods of understanding data with statistics. </p>",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=bAkFZtE6XVQ"
      },
      "title": "Intro to Statistics",
      "related_degree_keys": [

      ],
      "required_knowledge": "<p>This course does not require any previous knowledge of statistics. Basic familiarity with algebra such as knowing how to compute the mean, median and mode of a set of numbers will be helpful. </p>",
      "syllabus": "### Lesson 1: Visualizing relationships in data\n\nSeeing relationships in data and predicting based on them; Simpson's paradox\n\n### Lesson 2: Probability \n\nProbability; Bayes Rule; Correlation vs. Causation\n\n### Lesson 3: Estimation \n\nMaximum Likelihood Estimation; Mean, Median, Mode; Standard Deviation, Variance\n\n### Lesson 4: Outliers and Normal Distribution \n\nOutliers, Quartiles; Binomial Distribution; Central Limit Theorem; Manipulating Normal Distribution\n\n### Lesson 5: Inference\n\nConfidence intervals; Hypothesis Testing\n\n### Lesson 6: Regression\n\nLinear regression; correlation\n\n### Lesson 7: Final Exam",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-statistics--st101?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh4.ggpht.com/aX2xeWRHOrh_ligARa1eTHKaGU_EXqAYPRalgH_m43lSeIwKp-cBMeDJIzAtH0aVrBfCjlRPwAGIF15Dg0A=s0#w=4680&h=968",
      "short_summary": "Get ready to analyze, visualize, and interpret data! Thought-provoking examples and chances to combine statistics and programming will keep you engaged and challenged.",
      "slug": "intro-to-statistics--st101",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Kelly Vetter is an instructor at Wake Technical Community College.  She has a B.S. in Mathematics Education and a Certificate in E-Learning from North Carolina State University. She has taught math for a total of 17 years and has been teaching developmental math for 12 of those years.  She has taught in various formats including the classroom, online, and hybrid courses.",
          "image": "https://lh4.ggpht.com/iQmu1sGxFH1190MjG7wYJR_xHKzRbhhYr8IuXo5hAlhtWx8kz7tRGtgYmKn3nZTie5i1VtIgA0NmK5lNosiZ=s0#w=3000&h=3000",
          "name": "Kelly Vetter"
        },
        {
          "bio": "Sue Ann Austin is an instructor at Wake Technical Community College.  She has taught developmental math for 4 years and prior to that was a high school math teacher.  She has a B.S. in Applied Mathematics from Carnegie-Mellon University and completed the NC Teach program at North Carolina State University.  She was a software engineer for 15 years prior to entering the field of education.",
          "image": "https://lh5.ggpht.com/Unz9qs6gK0epvDZ0aVnIZJfGhxEWvMoD60bnJ_9S0AnPsGLPU56SyUITGqka2dNHGwVd1G5Osip9Otb43mE=s0#w=3000&h=3000",
          "name": "Sue Ann Austin"
        }
      ],
      "subtitle": "A Quick Refresher",
      "key": "ma004",
      "image": "https://lh6.ggpht.com/6x6Voubq_rHHA3etDwFYP_44ZvSrY-gEb3V6iYmLoF2YDGAH18vm-anCt_UrYH-PCer0OCQKIC8w6_mVuLo=s0#w=436&h=268",
      "expected_learning": "At the end of this course students will have reviewed the core topics of introductory algebra. Students will be comfortable with the concepts and procedures of introductory algebra, and be able to apply their knowledge to other coursework and real-world problems.\n\nDuring this course, you will review \n\nInteger operations including addition, subtraction, multiplication, division, and absolute value.\nEvaluating using order of operations.\nAssociative and Commutative properties.\nPerimeter and area of rectangles, triangles, squares, and circles.\nFraction operations including simplifying, adding, subtracting, multiplying, and dividing.\nConverting between fractions, decimals, and percents.\nRounding decimals to appropriate place value.\nConverting between standard notation and scientific notation.\nRates and ratios.\nUnit conversions.\nSimplifying and evaluating algebraic expressions.\nUsing the Pythagorean Theorem.\nSolving and graphing linear equations.\nWriting linear equations.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=FmoieXyYaVE"
      },
      "title": "Intro Algebra Review",
      "related_degree_keys": [

      ],
      "required_knowledge": "This is a review course, it is expected that students will have some previous knowledge of most topics covered in the course.\n\n<br>\n<br>\nMade possible through a grant from the Bill and Melinda Gates Foundation.",
      "syllabus": "Topic 1: Integer Operations\n\n- Properties of Integers\n- Absolute Value\n- Adding, Subtracting, Multiplying & Dividing\n- Order of Operations\n- Perimeter and Area of Rectangles, Squares & Triangles\n\nTopic 2: Fractions and Decimals\n\n- Simplifying Fractions\n- Mathematical Operations with Fractions\n- Rounding Decimals\n- Decimals and Applications\n- Fraction to Decimal Conversion\n- Scientific Notation\n\nTopic 3: Rates, Ratios, and Conversions\n\n- Ratios\n- Rates\n- Unit Conversions\n- Percents\n\nTopic 4: Algebraic Expressions and Equations\n\n- Algebraic Expressions\n- Solving a Linear Equation\n- Pythagorean Theorem\n\nTopic 5: Graphing Linear Equations\n\n- Graphing a Linear Equation\n- Slope of a Line\n- Writing a Linear Equation\n- Slope and Slope-Intercept Form",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-algebra-review--ma004?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Non-Tech"
      ],
      "banner_image": "https://lh6.ggpht.com/2GvPe2yH9IeLTB0r73J5qPjXl2Ik_vuh3ywuMKSkRQf8IfI2LNAZRHg4B-sbGKxHGwsIHexYZ7nNpDxUL_4=s0#w=4680&h=968",
      "short_summary": "A brief review of introductory algebra topics including integer operations, scientific notation, algebraic expressions, linear equations, and graphing.",
      "slug": "intro-algebra-review--ma004",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "This course provides a brief review of introductory algebra topics. Topics to be covered include integer operations, order of operations, perimeter and area, fractions and decimals, scientific notation, ratios and rates, conversions, percents, algebraic expressions, linear equations, the Pythagorean theorem, and graphing.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Julie Sliva Spitzer is a Professor of Mathematics Education in the Mathematics Department at San Jose State University, where she primarily works with prospective mathematics teachers on pedagogy. Her primary area of interest is in teaching mathematics to special education students. She is excited to help increase access to further education through this course.",
          "image": "https://lh5.ggpht.com/1E5wcpVXsRLK4mCYa4bNqvSBddJH1a9onde7ap3199AyXk5qwsyll__X6-hbegomkKorYoRYdOI_O1wrhg=s0#w=200&h=200",
          "name": "Julie Sliva Spitzer"
        }
      ],
      "subtitle": "Bringing Symbols to Life",
      "key": "ma008",
      "image": "https://lh5.ggpht.com/HAd0NKxmFBEQUW4ZtRbw3uKUyrt5-NGYTwF7-2QoZjAK0wOOA8iKp-_Pjsyh9z7h210KsLewhtfLV5VGfQ=s0#w=436&h=268",
      "expected_learning": "In this course, you will learn...  \n\n  - To translate word problems into mathematical expressions or equations\n  - To manipulate algebraic expressions and solve equations\n  - To graph different types of functions and to understand the relationship between a function?s graph and its equation\n  - To model growth and decay",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=tOETs-1ml60"
      },
      "title": "College Algebra",
      "related_degree_keys": [

      ],
      "required_knowledge": "Basic arithmetic - addition, subtraction, multiplication and division of positive and negative numbers.  \n<br>",
      "syllabus": "The following topics will be covered. There will be two midterms and one  final exam. There are no deadlines unless you are in the SJSU Plus-Udacity for-credit program. \n\nLesson 1: Number    \nLesson 2: Expressions    \nLesson 3: Polynomials    \nLesson 4: Equations    \nLesson 5-1: Coordinates    \nLesson 5-2: Distance    \nLesson 5-3: Midpoints And Slope    \nLesson 6-1: Slope And Equations    \nLesson 6-2: Points    \nLesson 7: Forms of the Equation of a Line    \nLesson 8: Inequalities And Absolute Value    \nLesson 9: More Inequalities And Equations    \nLesson 10: Parabolas    \nLesson 11: Factoring    \nLesson 12: Quadratic and Rational Inequalities    \nLesson 13: More Parabolas    \nLesson 14: Completing the Square    \nLesson 15: Quadratic Formula    \nLesson 16: Complex Numbers    \nLesson 17: Functions    \nLesson 18: Domain and Range    \nLesson 19: Behavior of Functions    \nLesson 20: Factor Theorem    \nLesson 21: Rational Zero Test    \nLesson 22: Intermediate Value Theorem    \nLesson 24: Asymptotes    \nLesson 25: Slant Asymptotes    \nLesson 26: Transformations    \nLesson 29: Exponential Functions    \nLesson 30: Scientific Notation    \nLesson 31: Logarithmic Functions    \nLesson 32: Log Properties    \nLesson 33: Solving Exponential and Logarithmic Equations    \nLesson 34: Population, Scrolls and Sound",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/college-algebra--ma008?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/y2vNv1jlkBGooQdU5iP8AbAnlF17d1ur3etXFuWN5xhkLC_MIT-NtjAHBXMf3pg1Oz6voFNjqZWa1QQ6sd3K=s0#w=250&h=60",
          "name": "San Jose State University"
        }
      ],
      "tracks": [
        "Non-Tech"
      ],
      "banner_image": "https://lh3.ggpht.com/K40yfj5_gcmalKkWS3Tw8El--JfeEuug-JxuZSPtQ2tSKTJ1_MlvSei1cq14oexgCi9HBpXofhuv1bToZg=s0#w=4680&h=968",
      "short_summary": "Gain an in-depth understanding of algebraic principles and learn how to use them to solve problems you may meet in everyday life.",
      "slug": "college-algebra--ma008",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Math is everywhere. In this class, you?ll gain an in-depth understanding of algebraic principles, many of which you may have seen before, and learn how to use them to solve problems that we encounter in everyday life.  The online version of College Algebra will cover all of the topics that you would see in more traditional class formats, but it will present the material in a way that we hope you?ll find fresh and interesting. You will learn about functions, polynomials, graphing, complex numbers, exponential and logarithmic equations, and much more, all through exploring real-world scenarios.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Sandra DeSousa is an Adjunct Instructor of Mathematics at San Jose State University and San Jose City College. She has been teaching developmental math for the last 6 years (in both small classrooms and large lecture halls). Teaching algebra to her struggling students is her favorite because she loves when they ?get it.? She is always trying new and different teaching methods to help her students succeed and is very excited to work with Udacity.",
          "image": "https://lh6.ggpht.com/G332gaFzAQSyBwA9aIrzj25PQKH2NfcGpwbL5aAb9Hx9JHdSqA7s0ymbp5jJKnSM9ZGgIQ42abiWAuusGFU=s0#w=300&h=300",
          "name": "Sandra DeSousa"
        }
      ],
      "subtitle": "Patterns and Problems",
      "key": "ma006",
      "image": "https://lh3.ggpht.com/rn3G8eo7AcAany1s2pLJZLZhwzoPGRocmxcMxMaT-nng8SA2-Md544lS0aVNeGFYmDbQbVEXWF-I9fAfevM=s0#w=436&h=268",
      "expected_learning": "<p>Understand and develop the language, models, and tools for math reasoning.\n</p>\n<p>\nReason with numbers and units to solve problems.\n</p>\n<p>\nIdentify, analyze, extend, and create patterns and functions.\n</p>\n<p>\nMake connections about relations and functions through multiple representations: graphs, charts, tables, equations.\n</p>\n<p>\nApply mathematical reasoning and logic to solve equations and write equivalent forms.\n</p>",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=JDlu4CM9bDg"
      },
      "title": "Visualizing Algebra",
      "related_degree_keys": [

      ],
      "required_knowledge": "<p>\nAlmost nothing! Students should know their multiplication tables (1-12) and be proficient with adding and subtracting integers (for example, -7 - 16). A pencil and paper will be a student?s best aid rather than a calculator. \n</p>",
      "syllabus": "Unit 1 - Review of Foundations \n\nUnit 2 - Equations and Inequalities \n\nUnit 3 - Graphs of Linear Equations \n\nUnit 4 - Systems of Equations \n\nUnit 5 - Exponents and Polynomials \n\nUnit 6 - Factoring \n\nUnit 7 - Rational Expressions \n\nUnit 8 - Rational Exponents and Radicals \n\nUnit 9 - Solving Quadratic Equations \n\nUnit 10 - Quadratic Equations and Applications \n\nUnit 11 - Conic Sections \n\nUnit 12 - Inverses, Exponentials, and Logarithms",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/visualizing-algebra--ma006?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/y2vNv1jlkBGooQdU5iP8AbAnlF17d1ur3etXFuWN5xhkLC_MIT-NtjAHBXMf3pg1Oz6voFNjqZWa1QQ6sd3K=s0#w=250&h=60",
          "name": "San Jose State University"
        }
      ],
      "tracks": [
        "Non-Tech"
      ],
      "banner_image": "https://lh5.ggpht.com/xwnm0fDCJAr08hEZ2n-dd-Tbs0ixP4DNQZ7qgT_1xoYbdm1JsIs_BfBPfwgJ2NvG_yyDsY56_OKrxch6gqo=s0#w=4680&h=968",
      "short_summary": "Learn the basics of Algebra through intuition and problem solving! From fractions to factors to functions, we?ll cover a breadth of topics.",
      "slug": "visualizing-algebra--ma006",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Throughout this course, we will use algebra to quantify and describe the world around us. Have you ever wondered how many songs can fit onto your flash drive? By the end of the course, you?ll have stronger skills for modeling problems, analyzing patterns, and using algebra to arrive at conclusions.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "John Regehr is a computer science professor at the University of Utah. His research is on making software fail and on making software that fails less often. Lately, he is obsessed with compiler bugs and integer overflow problems.",
          "image": "https://lh3.ggpht.com/DOKbjucHqG_s9dQAcjI5_ezmtyjgo4wUxt_j5a9hIFMgB_Bl3oYEmfYDn3WEM1O_ji1qaSfNgXroxEA4NsfE=s0#w=137&h=137",
          "name": "John Regehr"
        }
      ],
      "subtitle": "How to Make Software Fail",
      "key": "cs258",
      "image": "https://lh4.ggpht.com/5ikgV5XANy8ChkjUqGy4YG-4MCiREXo-SZ7p7YEFqCqIpmJ34TqTofWjG8Nz6RlxzNmgtDQxAeLeLsbE-8Kh=s0#w=436&h=268",
      "expected_learning": "<p>This course will teach you how to think like a software tester, how to find bugs in code earlier, and write better code.</p>",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=e06Vo9rba3k"
      },
      "title": "Software Testing",
      "related_degree_keys": [

      ],
      "required_knowledge": "<p>Programming experience is required.</p>",
      "syllabus": "### Lesson 1: Domains, Ranges, Oracles, and Kinds of Testing\n\nHow to think about the different elements of software testing\n\n### Lesson 2: Code Coverage\n\nHow to find parts of a program that need more testing\n\n### Lesson 3: Random Testing\n\nHow to automatically generate test cases that break code in unexpected ways\n\n### Lesson 4: Advanced Random Testing\n\nHow to engineer a sophisticated random test case generator\n\n### Lesson 5: Consequences\n\nHow to deal with lots of bugs, how to take a big input that triggers a bug and make it smaller, how to report a bug, and more!\n\n### Lesson 6: Conclusion",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/software-testing--cs258?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh5.ggpht.com/VOURMePQYZaZ8SG6g6Wp9WqiiWcLGFcaHT4Q7DGjcnEI0ArMb726RzbkZ7jvUwNzNsW2_0QiaqpQep9fYd4=s0#w=4680&h=968",
      "short_summary": "Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.",
      "slug": "software-testing--cs258",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Michael Littman is a Professor of Computer Science at Brown University. He also teaches Udacity?s Machine Learning courses: Supervised Learning, Unsupervised Learning and Reinforcement Learning. \n\nPrior to joining Brown in 2012, he led the Rutgers Laboratory for Real-Life Reinforcement Learning (RL3) at Rutgers, where he served as the Computer Science Department Chair from 2009-2012. He is a Fellow of the Association for the Advancement of Artificial Intelligence (AAAI), served as program chair for AAAI's 2013 conference and the International Conference on Machine Learning in 2009. \n\nMichael has received university-level teaching awards at both Duke and Rutgers.",
          "image": "https://lh3.ggpht.com/Pi1wwxLjjxX8MrILL4oWe-R8elf1Lbi6ASu_PIl1s2kQGnAUkv74LqCpiKm3uhoVQV07YzFlsRR3PMCFc-4=s0#w=137&h=137",
          "name": "Michael Littman"
        }
      ],
      "subtitle": "Social Network Analysis",
      "key": "cs215",
      "image": "https://lh4.ggpht.com/XYlScEjY8t3gmrnlodRerH8kpnQAxnG8ofy9aj8hJHm44-HvyISIs32YY2rQKNTA3sYN4yXuegk7nNjtPg=s0#w=436&h=268",
      "expected_learning": "By the end of this class you will understand key concepts needed to devise new algorithms for graphs and other important data structures and to evaluate the efficiency of these algorithms.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=-jTyn7xuyvE"
      },
      "title": "Intro to Algorithms",
      "related_degree_keys": [

      ],
      "required_knowledge": "This class assumes an understanding of programming at the level of CS101, including the ability to read and write short programs in Python; it also assumes a comfort level with mathematical notation at the level of high school Algebra II or the SATs.",
      "syllabus": "### Lesson 1: A Social Network Magic Trick\n\nObjective: Become familiar with Algorithm Analysis. \n\n- Eulerian Path\n- Correctness of Na?ve\n- Russian Peasants Algorithm\n- Measuring Time\n- Steps for Naive, Steps for Russian\n- Divide and Conquer\n\n### Lesson 2: Growth Rates in Social Networks\n\nObjective: Use mathematical tools to analyze how things are connected.\n\n- Chain, Ring and Grid Networks\n- Big Theta \n- Planar Graphs\n- Nodes, Edges, Regions\n- Growth Rate of Edges in Planar Graph\n- Hypercube\n- Randomly Generated Graphs\n- N Squared\n- Tangled Hypercube\n\n### Lesson 3: Basic Graph Algorithms\n\nObjective: Find the quickest route to Kevin Bacon. \n\n- Properties of Social Networks\n- Clustering Coefficient\n- Connected Components\n- Running Time of Connected Components\n- Checking Pairwise Connectivity\n- Pairwise Shortest Path\n- Depth vs. Breadth First Search\n- Recursion Replacement\n- Marvel ?Social? Network\n- Finding Bridge Edges\n\n### Lesson 4: It?s Who You Know\n\nObjective: Learn to keep track of your Best Friends using heaps.\n\n- Degree Centrality\n- Top K Via Partitioning\n- Three Partitioning Cases\n- Properties of a Heap \n- Patch Up a Heap\n- Down Heapify\n- Heap Sort\n\n### Lesson 5: Strong and Weak Bonds\n\nObjective: Work with Social Networks that have edge weights.\n\n- Make a Tree\n- Strength of Connections\n- Weighted Social Networks\n- How to Find the Shortest Path\n- Dijkstra?s Shortest Path Algorithm\n- Floyd-Warshall Intro\n- Randomizing Clustering Coefficient \n- Bounds on the Estimate\n\n### Lesson 6: Hardness of Network Problems\n\nObjective: Explore what it means for a Social Network problem to be \n\"harder\" than other.\n\n- Tetristan\n- Exponential Running Time \n- Degrees of Hardness\n- Reduction: Long and Simple Path\n- Polynomial Time Decidable Problems\n- Non-deterministic Polynomial Time Decidable Problem\n- Clique Problem in NP\n- Find the Strangers\n- Graph Coloring is NP-Complete\n\n\n### Lesson 7: Review and Application\n\n- Interview with Peter Winker (Professor, Dartmouth College) on Names and Boxes Problem && Puzzles and Algorithms\n\n- Interview with Tina Eliassi-Rad (Professor, Rutgers University) on \nStatistical Measures in Network && Social Networks in Security and Protests\n\n- Interview with Andrew Goldberg (Principal Researcher, Microsoft Research) on Practical Algorithms\n\n- Interview with Vukosi Marivate (Graduate Student, Rutgers University) on Social Algorithms\n\t\n- Interview with Duncan Watts (Principal Researcher, Microsoft) on Pathway That Can Use Two Nodes\t\n\n- Intro to Graph Search Animation",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-algorithms--cs215?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh4.ggpht.com/drkbdrNDT-HUpCwIYPPoRov88_HMk5t3UUi9bqUs0PrVKcYkgRZa-C23gkEpck7nvqxdHWAf01iLsO6GXbs=s0#w=4680&h=968",
      "short_summary": "This class will give you an introduction to the design and analysis of algorithms, enabling you to analyze networks and discover how individuals are connected.",
      "slug": "intro-to-algorithms--cs215",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected. ",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Eric Haines is a Senior Principal Engineer at Autodesk, Inc., working on a next-generation interactive rendering system for computer-aided design applications. He is a coauthor of the book <a href=\"http://www.amazon.com/gp/product/1568814240/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=1568814240&linkCode=as2&tag=udacity-20\" target=\"_blank\">?Real-Time Rendering?</a>, a founder and editor of the Journal of Computer Graphics Techniques, and maintainer of the Graphics Gems code repository, among other activities. He received an MS from the Program of Computer Graphics at Cornell in 1985.",
          "image": "https://lh3.ggpht.com/vq-7WUaFW9-vMnLSyRR2PxX6XFPKKRNztmtSpT7MKT3zRYsVDIjbiipkgUN3lKMxd5ExJMvFYC7pK04GKwc=s0#w=339&h=339",
          "name": "Eric Haines"
        }
      ],
      "subtitle": "Creating Virtual Worlds",
      "key": "cs291",
      "image": "https://lh6.ggpht.com/bhgSqT5HG44uWr9Yiz7dD8OKlAKPBuKIAhOCNP5Er0O3bBQrWVaiFQycsILakHPQ3XLltvqVDcN3FOSVkdk=s0#w=436&h=268",
      "expected_learning": "By the end of this class you will know enough to make an animated 3D demo program that runs in a web browser, while also understanding the basic principles of how realistic computer images are generated.\n\nYou will also have a portfolio of small interactive programs that run in any web browser that supports WebGL.",
      "featured": false,
      "project_name": "Create Your Own 3D Scene with WebGL",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=Vl0hmKg1pVw"
      },
      "title": "Interactive 3D Graphics",
      "related_degree_keys": [

      ],
      "required_knowledge": "**Knowing how to program in some language is all you?ll need to get started**. Some knowledge of JavaScript is useful later on if you wish to make your projects more interactive and engaging. Familiarity with vectors and matrices will ease your way but is not critical.\n\nTo be able to see the interactive demos and do programming assignments you need a browser that supports **WebGL** technology. An up to date version of Chrome or Firefox will work (see our [FAQ](https://www.udacity.com/tech-requirements) for more information). You can test if your browser supports this technology by visiting the [WebGL project homepage](http://get.webgl.org). \n\nAlmost all programming will be done in JavaScript using [three.js library/API](http://en.wikipedia.org/wiki/Threejs).\n\n\n<br>\n**About Autodesk**\n\n*This course is developed in conjunction with Autodesk, a worldwide leader in 3D design, engineering, and entertainment software.  <a href=\"http://www.autodesk.com\" target=\"_blank\">http://www.autodesk.com</a>*",
      "syllabus": "### Lesson 1: Introduction\n\nMotivation and a trip down the graphics pipeline, laying out the fundamental processes\n\n### Lesson 2: Points, Vectors, and Meshes\n\nThe basics of 3D geometry definition\n\n### Lesson 3: Colors and Materials\n\nColor representation, material computations, transparency\n\n### Lesson 4: Transforms\n\nTranslation, scale, rotate and how to properly combine all these\n\n### Lesson 5: Matrices\n\nTransform representation and how to fully control these\n\n### Lesson 6: Lights\n\nDirectional and point light sources\n\n### Lesson 7: Cameras\n\nHow the camera is defined\n\n### Lesson 8: Textures and Reflections\n\nColor and opacity textures, along with reflection and normal mapping\n\n### Lesson 9: Shader Programming\n\nAn introduction to programming vertex and pixel shaders\n\n### Lesson 10: Interaction and Animation\n\nHow to select and make objects move",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/interactive-3d-graphics--cs291?utm_medium=referral&utm_campaign=api",
      "project_description": "Create an  interactive 3D program of your choice.",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/pESJJJY8LlYcxVwoIywCYt4tv7PnZqiPQRAfbjg8nPV59QFvfRwUdf5nCdyk6-wIRAz0TpEOFfjGLW1bnxrO=s0#w=130&h=60",
          "name": "Autodesk"
        }
      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh4.ggpht.com/XKw2aUbKzNpO1pN_zRaSEnZi0DY8SrDCfqN__N78cUZnIWaUzGKEUNteLORfoYhjJffxJC_o7QzWyzDAug=s0#w=4680&h=968",
      "short_summary": "This course will teach you the principles of 3D computer graphics: meshes, transforms, lighting, animation, and making interactive 3D applications run in a browser.",
      "slug": "interactive-3d-graphics--cs291",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Westley Weimer is a Professor of Computer Science at the University of Virginia where he teaches computer science and leads research in <a href=\"http://www.cs.virginia.edu/~weimer/\" target=\"_blank\">programming languages and software engineering</a>. He has won three awards for teaching and over half a dozen \"best paper\" awards for research. He has MS and PhD degrees from the University of California at Berkeley.",
          "image": "https://lh3.ggpht.com/CcJtdHWmyIwp58LdhkZHSurAPYBYZyk2iAM4LCsXyFnKCD96o37pTa7IRpOLjyWaDSeLqH4IteA8FlOU5kfq=s0#w=200&h=200",
          "name": "Westley Weimer"
        }
      ],
      "subtitle": "Building a Web Browser",
      "key": "cs262",
      "image": "https://lh4.ggpht.com/TPffw_nig2w-w-ibEys-6iIZqJUXv3ceWraNtZAEY-kFz8XMUh_jqi7sOiuJLeJ0N-NCyFTMjwpLOUIQOwk=s0#w=436&h=268",
      "expected_learning": "Take this class and learn how to build your own simple web browser complete with the ability to parse and understand HTML and JavaScript.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=cn83Tm1jNSo"
      },
      "title": "Programming Languages",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.",
      "syllabus": "### String Patterns\n\nFinding and specifying classes of strings using regular expressions\n    \n### Lexical Analysis\n\nBreaking strings down into important words\n    \n### Grammars\n\nSpecifying and deconstructing valid sentences\n    \n### Parsing\n\nTurning sentences into trees\n    \n### Interpreting\n\nSimulating programs\n    \n### Building a Web Browser\n\nInterpreting HTML and JavaScript\n    \n### Wrap-up\n\nExam testing your knowledge",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/programming-languages--cs262?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh3.ggpht.com/3RmrqNzJD_BW6P5Z5MolpaZ7TvkdDMT5AcOXe3WucBuz3RZKStiQeZcnjDs0oWSvcqAb9zDBGydEz1BwJOZ4=s0#w=4680&h=968",
      "short_summary": "This course is an introduction to the fundamentals of programming languages. Concepts include how to specify and process valid strings, sentences and program structures.",
      "slug": "programming-languages--cs262",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures. ",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Peter Norvig is Director of Research at Google Inc. He is also a Fellow of the American Association for Artificial Intelligence and the Association for Computing Machinery. Norvig is co-author of the popular textbook Artificial Intelligence: A Modern Approach. Prior to joining Google he was the head of the Computation Sciences Division at NASA Ames Research Center.",
          "image": "https://lh3.ggpht.com/Zvo2V0Xfae4jg2m3kMd221NocS56nliQwvXD38f9RredHSaS7QcoaOXL4wDQIcYeI32ISsIPZwur2JY_=s0#w=266&h=266",
          "name": "Peter Norvig"
        }
      ],
      "subtitle": "Programming Principles",
      "key": "cs212",
      "image": "https://lh3.ggpht.com/M8Ws2Jr9z9HYIcvev27ZNt1Fb2XsFNkD6qtQnYHzVyUPu-oqAU7Da2YD1vzxbLu302cg_77xmqaX0VCvNAk=s0#w=436&h=268",
      "expected_learning": "Move along the path towards becoming an expert programmer! In this class you will practice going from a problem description to a solution, using a series of assignments. During office hours segments, Peter will also share his own personal tips and tricks for approaching programming problems - and his techniques may surprise you!",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Design of Computer Programs",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course is intended for experienced Python programmers; students should be familiar with the Python syntax, as well as familiar with the following programming concepts: data structures, basic algorithms, and lambda functions.\n\nThis course is intended to challenge you. Be ready to struggle (and learn)!",
      "syllabus": "### Lesson 1: Winning Poker Hands\n\nSteps of the design process; Developing for clarity and generality; \nArguments for program correctness; Experimentation and simulation.; \nDesign tradeoffs; Simplicity and Clarity. Decomposition and composability.\n                \n### Lesson 2: Back of the Envelope\n\n\nBack of envelope calculations; When to use brute force and when to be \nclever; The Zebra puzzle; Generator expressions; Permutations and \ncombinations. Cryptarithmetic; Recursive and wishful thinking; Longest palindrome \nsubstring algorithm.\n                \n### Lesson 3: Regular Expressions, other languages and interpreters                \n\nDefining the language of regular expressions; Interpreting the language; \nDefining the set of strings matched by a regular expression;  \nOther languages.\n                \n### Lesson 4: Dealing with complexity through search\n                \n\nSearch: finding your way with a flashlight or boat; pouring water. \nAnalyzing the efficiency of an algorithm; Recurrence relations; Matching \ndata types with algorithms.\n### Lesson 5: Dealing with uncertainty through probability\n                \n\nProbability: the game of Pig; Maximizing expected utility to optimize strategy. \n  \n### Lesson 6: Word Games                \n\nManaging complexity; Large sets of words; Appropriate data structures; Word games. \n                \n### Lesson 7: Conclusion\n\nInterviews and Practice Exam",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/design-of-computer-programs--cs212?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh3.ggpht.com/_XeMzzYyjih_n8agpgbabjUiqjDKzZMloD7liBjzjO82ZkRYSAG6UY_qaCQYh0iu2QnUyvfYjXT_Pf-8fQ=s0#w=1170&h=422",
      "short_summary": "Learn how to model problems, and how to optimize performance by using some of the advanced features of Python.",
      "slug": "design-of-computer-programs--cs212",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you?ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "J?rn Loviscach is a professor of technical mathematics and computer engineering. In a former life, he was a professor of computer graphics, animation, and simulation, worked as editor and senior editor for several computer magazines. For three years he also served as deputy editor-in-chief of <a href=\"http://www.heise.de/ct/\" target=\"_blank\">c?t Magazin f?r Computertechnik</a>, a renowned German biweekly. His research integrates human-computer interaction, visual computing, and audio and music computing. Both as a researcher and as a practitioner he is interested in applying digital media to education. He has published over 1800 video lectures on his YouTube channel on mathematics and computer science, and his channel is one of the most popular of its kind in Germany.",
          "image": "https://lh3.ggpht.com/pbUJo1ZU6smV90AX4TTxh-1h9h_DEkJbicC-Z9TIfz1ezLHC8w_VxJLqueipJKIb2pwZR1NyBJClKrd8vH4=s0#w=133&h=133",
          "name": "J?rn Loviscach"
        }
      ],
      "subtitle": "Making Math Matter",
      "key": "cs222",
      "image": "https://lh6.ggpht.com/ECYZkX-7ISq3MJdRY-vsyvz7OZTz7GwmpX_CFb8Z2MiI6PAFHWm12xyh_hegFepPRK8L7XK_2rRaiA-s7A=s0#w=436&h=268",
      "expected_learning": "<p>By the end of this course, you'll develop an intuition for the use of differential equations in the applied sciences. You'll also learn how to build mathematical models for systems of differential equations using a variety of techniques. Along the way, you'll learn how to translate mathematical expressions into Python code and solve some really cool problems!</p>",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=CWyJDfkP8T4"
      },
      "title": "Differential Equations in Action",
      "related_degree_keys": [

      ],
      "required_knowledge": "<p>You'll need a basic knowledge of programming in Python for this course, around the level of <a href=\"http://www.udacity.com/overview/Course/cs101/CourseRev/apr2012\">Intro to Computer Science</a>. An understanding of Python packages, as discussed in <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Foundations with Python</a>, will also be helpful.</p>\n \n<p>In addition, you'll need to feel comfortable with trigonometry at the high school level, as well as basic vector algebra. This class will primarily involve solving differential equations numerically rather than analytically, but some exposure to <a href=\"http://www.khanacademy.org/math/calculus/\" target=\"_blank\">calculus</a> and physics at the level of <a href=\"https://www.udacity.com/course/ph100\" target=\"_blank\">Intro to Physics</a> wouldn't hurt.</p> \n\n<p>Most of all, bring with you a love of learning and problem solving!</p>",
      "syllabus": "### Lesson 1: Rescuing Apollo 13, Part 1\n\nIntroduction to the Forward Euler Method\n\n### Lesson 2: Rescuing Apollo 13, Part 2\n\nComparing solvers, Heun?s Method, and the Symplectic Euler Method\n\n### Lesson 3: Analyzing the Spread of Diseases\n\nImplicit methods and stiffness\n\n### Lesson 4: There?s Plenty of Fish in the Sea?\n\nStability, sensitivity, and optimization\n\n### Lesson 5: Antilock Brake Systems\n\nFriction, equilibria, and control theory\n\n### Lesson 6: The Path of a Forest Fire\n\nPartial differential equations and heat conduction\n\n### Lesson 7: Advanced Applications of Numerical Methods\n\nChaos, software, and predictive capability",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/differential-equations-in-action--cs222?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Non-Tech"
      ],
      "banner_image": "https://lh5.ggpht.com/FYlBDA8_eRTCMuc-ZlG55qHjR9IYH-t1y1z06h3NPyfiRrCtK4Cg-RRY5yydzvg49ko-eCJ6lVzSPO8wVWG-=s0#w=1170&h=422",
      "short_summary": "Write Python code to find numerical solutions to systems of differential equations. The models you create will fight wildfires, bring spaceships back to earth, and more!",
      "slug": "differential-equations-in-action--cs222",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this course, you'll hone your problem-solving skills through learning to find numerical solutions to systems of differential equations. You'll write code in Python to fight forest fires, rescue the Apollo 13 astronauts, stop the spread of epidemics, and resolve other real-world dilemmas.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Andreas Zeller is a computer science professor at Saarland University, Germany. His research centers on programmer productivity: What can be done to ease the life and work of programmers? Among Linux and Unix programmers, he is best known for GNU DDD, a debugger front-end with built-in data visualization. Among academics and advanced professionals, Zeller is best known for Delta Debugging, a technique that automatically isolates failure causes for computer programs.",
          "image": "https://lh4.ggpht.com/M6OI-M4c9-y1GAfqwDYmmCb1W3QYPt7mx2s7uOTHY8sx7HJFqfcWcF-70xGSK05PVdLIdVK5gmJlVlftaY_5=s0#w=150&h=150",
          "name": "Andreas Zeller"
        }
      ],
      "subtitle": "Automating the Boring Tasks",
      "key": "cs259",
      "image": "https://lh5.ggpht.com/K8Fm7x8PB9bmLOscL4Mt-wTyFU0y2NF1B06wGOrgXDkEfcoNb4KXPJp9IXaB06MctgT06VOn7d1Y6_EyUxs=s0#w=436&h=268",
      "expected_learning": "At the end of this course you will have a solid understanding about systematic debugging, will know how to automate debugging and will have built several functional debugging tools in Python.",
      "featured": false,
      "project_name": "Build Your Own Debugger",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=pklED4UfODg"
      },
      "title": "Software Debugging",
      "related_degree_keys": [

      ],
      "required_knowledge": "Basic knowledge of programming and Python at the level of Udacity CS101 or better is required. Basic understanding of Object-oriented programming is helpful.",
      "syllabus": "### Lesson 1: How Debuggers work\n\nTheory: Scientific method and its application to debugging.  \nFun fact: First bug in the history of computer science.  \nPractice: Building a simple tracer.\n\n### Lesson 2: Asserting Expectations\n\nTheory: Assertions in testing and in debugging.  \nFun fact: The most expensive bug in history.  \nPractice: Improving the tracer.\n\n### Lesson 3: Simplifying Failures\n\nTheory: Strategy of simplifying failures. Binary search. Delta debugging principle.  \nFun fact: Mozilla bugathon.  \nPractice: Building a delta debugger.\n\n### Lesson 4: Tracking Origins\n\nTheory: Cause-effect chain. Deduction. Dependencies. Slices.  \nFun fact: Sherlock Holmes and Doctor Watson.  \nPractice: Improving the delta debugger.\n\n### Lesson 5: Reproducing Failures\n\nTheory: Types of bugs (Bohr bug, Heisenbug, Mandelbug, Schrodinbug). Systematic reproduction process.  \nFun fact: Mad laptop bug.  \nPractice: Building a statistic debugging tool.\n\n### Lesson 6: Learning from Mistakes\n\nTheory: Bug database management. Classifying bugs. Bug maps. Learning from mistakes.   \nFun fact: Programmer with the most buggy code.  \nPractice: Improving your tools and practicing on a real world bug database.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/software-debugging--cs259?utm_medium=referral&utm_campaign=api",
      "project_description": "Put all the things you learned in this course together and finish a complete debugger that you can use on other projects",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh6.ggpht.com/nMdcBp-dUbKYNytkhi9yl1OApp6Ig4zDjC1pjPAyIw_PVegaXF9-9kHIvE_qGQULE4ZKg3N77viBmvhJqKk=s0#w=1170&h=422",
      "short_summary": "In this course you will learn how to debug programs systematically using scientific methods and build several automated debugging tools in Python.",
      "slug": "software-debugging--cs259",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Sebastian studied Bioinformatics at Universit?t T?bingen and holds a Ph.D. from Universit?t Jena in Germany, where his research focused on finding efficient algorithms for computationally hard problems on biological networks. After several years of strategic consulting for pharma companies and financial services, he's currently working with Seven Bridges Genomics, a big data bioinformatics startup. He is also well-known for his TED Talks, especially the one on the statistics of TED Talks..",
          "image": "https://lh3.ggpht.com/Md1Kx40zWMm6K8WtVcjH-1mbISwfQownUN-Lz-DpKMZH3hjgEHlZa0MVc44ct_ZyjxZvVir_siiJF1-f514=s0#w=800&h=800",
          "name": "Sebastian Wernicke"
        }
      ],
      "subtitle": "Dealing with Challenging Problems",
      "key": "cs313",
      "image": "https://lh5.ggpht.com/vb0Pb3pzliCuiVgmwpE0JI9Ktgzmf4x-7AY4t6N7Uqvdw720eadz8Vwhx_47L8ZQet_rE9Ghce8Z-aOGLGU=s0#w=436&h=268",
      "expected_learning": "<p>At the end of this course, you will have a solid understanding of theoretical computer science. This will not only allow you to recognize some of the most challenging algorithmic problems out there, but also give you powerful tools to deal with them in practice.</p>",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=AZ9B1kTW5FA"
      },
      "title": "Intro to Theoretical Computer Science",
      "related_degree_keys": [

      ],
      "required_knowledge": "<p>You should have a basic understanding of algorithms (such as <a href=\"https://www.udacity.com/course/cs215\">CS215</a>) and programming (such as <a href=\"https://www.udacity.com/course/cs101\">CS101</a>). No prior knowledge about theoretical computer science required!</p>",
      "syllabus": "### Lesson 1: Challenging Problems\n\nAn introduction to tough problems and their analysis\n\n### Lesson 2: Understanding Hardness\n\nWhat we mean when a problem is ?hard? and the concept of NP-completeness\n\n### Lesson 3: Showing Hardness\n\nTools to let you recognize and prove that a problem is hard\n\n### Lesson 4: Intelligent Force\n\nSmart techniques to solve problems that should ? theoretically ? be impossible to solve\n\n### Lesson 5: Sloppy Solutions\n\nGaining speed by accepting approximate solutions\n\n### Lesson 6: Poking Around\n\nWhy randomness can be of help ? sometimes. An introduction to complexity classes.\n\n### Lesson 7: Ultimate Limits\n\nProblems that no computer can ever solve. In theory.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-theoretical-computer-science--cs313?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh3.ggpht.com/Y68B-xZgBJ02ciLVeNVPR_fsUYYuUaQY7-0cA6T3r2Ecx-Yd--14Hdh5728YroN2cozZfbWRczOXOJgJk3g=s0#w=1170&h=422",
      "short_summary": "Learn the basic concepts in theoretical computer science. Discover what they imply for solving tough computational challenges.",
      "slug": "intro-to-theoretical-computer-science--cs313",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Michael Littman is a Professor of Computer Science at Brown University.  He also teaches Udacity?s Algorithms course (CS215) on crunching social networks.  Prior to joining Brown in 2012, he led the Rutgers Laboratory for Real-Life Reinforcement Learning (RL3) at Rutgers, where he served as the Computer Science Department Chair from 2009-2012.  He is a Fellow of the Association for the Advancement of Artificial Intelligence (AAAI), served as program chair for AAAI's 2013 conference and the International Conference on Machine Learning in 2009, and received university-level teaching awards at both Duke and Rutgers. Charles Isbell taught him about racquetball, weight-lifting and Ultimate Frisbee, but he's not that great at any of them. He's pretty good at singing and juggling, though.",
          "image": "https://lh6.ggpht.com/_tRBHjrD523dV4IEQqR6DVDtzofvJqw7iYeLaG-U1HhgB8w1nsmBENnGPh4GkFuNvM0frkYcCHJWK-8MDV61=s0#w=321&h=321",
          "name": "Michael Littman"
        },
        {
          "bio": "Charles Isbell is a Professor and Senior Associate Dean at the School of Interactive Computing at Georgia Tech. His research passion is artificial intelligence, particularly on building autonomous agents that must live and interact with large numbers of other intelligent agents, some of whom may be human. Lately, he has turned his energies toward adaptive modeling, especially activity discovery (as distinct from activity recognition), scalable coordination, and development environments that support the rapid prototyping of adaptive agents. He is developing adaptive programming languages, and trying to understand what it means to bring machine learning tools to non-expert authors, designers and developers. He sometimes interacts with the physical world through racquetball, weight-lifting and Ultimate Frisbee.",
          "image": "https://lh4.ggpht.com/BWYEYDvfZfN8Rg_BvReeoHnor_vbN9MCGWCWHMal7cCE8XoK9iq8a4C-KQxn-LeK-S5rpAlCuRTTMPp2B-jL=s0#w=425&h=425",
          "name": "Charles Isbell"
        }
      ],
      "subtitle": "Supervised, Unsupervised & Reinforcement",
      "key": "ud262",
      "image": "https://lh3.ggpht.com/qYa_klGgwhsrYg9HIo6U7ln4B10p1zJvNy5i_0iyowC8RiRMJ8c2mfJToAqOA8SRS36ziDkGmluycIj-GQ=s0#w=1150&h=706",
      "expected_learning": "You will learn about and practice a variety of Supervised, Unsupervised and Reinforcement Learning approaches. \n\nSupervised Learning is an important component of all kinds of technologies, from stopping credit card fraud, to finding faces in camera images, to recognizing spoken language. Our goal is to give you the skills that you need to understand these technologies and interpret their output, which is important for solving a range of data science problems. And for surviving a robot uprising.\n\nClosely related to pattern recognition, Unsupervised Learning is about analyzing data and looking for patterns. It is an extremely powerful tool for identifying structure in data. This section focuses on how you can use Unsupervised Learning approaches -- including randomized optimization, clustering, and feature selection and transformation -- to find structure in unlabeled data.\n\nReinforcement Learning is the area of Machine Learning concerned with the actions that software agents ought to take in a particular environment in order to maximize rewards. You can apply Reinforcement Learning to robot control, chess, backgammon, checkers, and other activities that a software agent can learn. Reinforcement Learning uses behaviorist psychology in order to achieve reward maximization. This section also includes important Reinforcement Learning approaches like Markov Decision Processes and Game Theory.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Machine Learning",
      "related_degree_keys": [

      ],
      "required_knowledge": "A strong familiarity with Probability Theory, Linear Algebra and Statistics is required. An understanding of [Intro to Statistics](https://www.udacity.com/course/st101), especially [Lessons 8, 9 and 10](https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822), would be helpful.\n\nStudents should also have some experience in programming (perhaps through [Introduction to CS](https://www.udacity.com/course/cs101)) and a familiarity with Neural Networks (as covered in [Introduction to Artificial Intelligence](https://www.udacity.com/course/cs271)).",
      "syllabus": "###Supervised Learning\n- Lesson 0: Machine Learning is the ROX\n- Lesson 1: Decision Trees\n- Lesson 2: Regression and Classification\n- Lesson 3: Neural Networks\n- Lesson 4: Instance-Based Learning\n- Lesson 5: Ensemble B&B\n- Lesson 6: Kernel Methods and Support Vector Machines (SVM)s\n- Lesson 7: Computational Learning Theory\n- Lesson 8: VC Dimensions\n- Lesson 9: Bayesian Learning\n- Lesson 10: Bayesian Inference\n\n###Unsupervised Learning\n- Lesson 1: Randomized optimization\n- Lesson 2: Clustering\n- Lesson 3: Feature Selection\n- Lesson 4: Feature Transformation\n- Lesson 5: Information Theory\n\n###Reinforcement Learning\n- Lesson 1: Markov Decision Processes\n- Lesson 2: Reinforcement Learning\n- Lesson 3: Game Theory\n- Lesson 4: Game Theory, Continued",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/machine-learning--ud262?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Data Science",
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh3.ggpht.com/dwxey9JbdCOxTqrLCwfmHEKWLHM6Y54cyqsiAMMlEcmx7hhnlE-7B31_fzxggqmLD0QEI5FtNteIHiZEmuUW=s0#w=4680&h=968",
      "short_summary": "In this course, you'll learn how to apply Supervised, Unsupervised and Reinforcement Learning techniques for solving a range of data science problems.",
      "slug": "machine-learning--ud262",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "<i>This class is offered as CS7641 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nMachine Learning is a graduate-level course covering the area of Artificial Intelligence concerned with computer programs that modify and improve their performance through experiences. \n\nThe first part of the course covers Supervised Learning, a machine learning task that makes it possible for your phone to recognize your voice, your email to filter spam, and for computers to learn a bunch of other cool stuff.\n\nIn part two, you will learn about Unsupervised Learning. Ever wonder how Netflix can predict what movies you'll like? Or how Amazon knows what you want to buy before you do? Such answers can be found in this section!\n\nFinally, can we program machines to learn like humans? This Reinforcement Learning section will teach you the algorithms for designing self-learning agents like us!",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Andy Brown is a Lead Instructor at Udacity. He has a degree in physics from MIT, and has devoted his time after graduating to teaching and learning. Since joining Udacity in 2012, Andy has helped design dozens of classes. He loves exploring this new educational medium by creating innovative and engaging courses. When he?s not figuring out the best ways to transform minds, you can find Andy on his bike or in his car, exploring the amazing experiences that his new California home has to offer.",
          "image": "https://lh6.ggpht.com/gzcZTQuXefPLSSaKithiGKzP5vcc_Gs-CbJjmuCTIn-YLsjzjvyWyBwnDXa-dVOf9EbOX03va4jFTdD4_w=s0#w=1800&h=1800",
          "name": "Andy Brown"
        }
      ],
      "subtitle": "Landmarks in Physics",
      "key": "ph100",
      "image": "https://lh6.ggpht.com/9xDuLEr_4CuXcBZVbMQPagaUOvdUOH_T8V4I9Nm9XvDogvR4_yudI60v5_0tWedKx2LInYQiV6KOGqNPXuo=s0#w=436&h=268",
      "expected_learning": "<p>This unique class gives you the chance to see the sites where physics history was made and learn some of the subject's most captivating concepts.</p>",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=cuKmcq6pu9s"
      },
      "title": "Intro to Physics",
      "related_degree_keys": [

      ],
      "required_knowledge": "<p>This course is suitable for anyone; a basic understanding of algebra is suggested.</p>",
      "syllabus": "### Lesson 1: How can we measure the circumference of the Earth?\n\nBasics of geometry and trigonometry\n\n### Lesson 2: How do objects move?\n\nData analysis and kinematics\n\n### Lesson 3: What causes motion?\n\nForces, acceleration, and Newton?s Laws\n\n### Lesson 4: How can we use motion?\n\nWork, energy, and simple machines\n\n### Lesson 5: How can we determine our longitude at sea?\n\nSimple harmonic motion\n\n### Lesson 6: What is electricity?\n\nCharge and electric fields\n\n### Lesson 7: What is left to discover?\n\nModern physics and open questions",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-physics--ph100?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Non-Tech"
      ],
      "banner_image": "https://lh4.ggpht.com/oBjt3byeKLwq96h0G-xq1FVbAKSDznwNmAW5bD-VQ-2JKnwfZBP3lBg53-3zE2TH_tZtKx3tdpgrAd3SKs8=s0#w=1170&h=422",
      "short_summary": "Go to the places where big physics discoveries were made in the past and make them yourself. You?ll visit Italy, the Netherlands, and the UK as you learn basic physics.",
      "slug": "intro-to-physics--ph100",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Study physics abroad in Europe -- virtually! Learn the basics of physics on location in Italy, the Netherlands and the UK, by answering some of the discipline's major questions from over the last 2000 years. ",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Originally from North Carolina, Matt is a science lover and strong supporter of scientific skepticism. He plays the piano, studies philosophy, and is still waiting for a virtual reality version of the Legend of Zelda. Matt has been involved extensively in biomedical research and teaching at all levels, from elementary to college. After receiving an International Baccalaureate diploma in high school, Matt studied biology and Hispanic studies at East Carolina University. He then earned his PhD in cell and molecular biology from Duke University before accepting a postdoctoral fellowship at the University of California San Francisco.",
          "image": "https://lh5.ggpht.com/yzCy7kjQM-yNOuRQd-gvbhak_38Jev_qOj8qeY0g2ZAH3KjGVMOBxGRpNx3HzzcR-3MXeziHfuSO-iQ70TQ=s0#w=1924&h=1924",
          "name": "Matthew Cook"
        },
        {
          "bio": "Lauren Castellano earned her MA in Experimental Psychology from San Jose State University and her BA in Psychology from the University of Nevada Las Vegas. She has been a teaching assistant for three years. She is passionate about teaching psychology because she believes it applies to everything we do and anyone can benefit from learning about psychology. Lauren is also passionate about traveling and scuba diving; she is a certified rescue diver and a dive master candidate.",
          "image": "https://lh3.ggpht.com/IR8KdVyBES5rdmFgWddMqnCeSNG6IsTIkbJv-ninVoV_4A6uJbahOyN5rei4dKDElY8rbzw7QcjejOoz0GM=s0#w=477&h=477",
          "name": "Lauren Castellano"
        },
        {
          "bio": "Joanna Mountain is a human geneticist who studies the connections between genetics and a broad range of diseases, the prehistory underlying human genetic diversity, and the nature of the relationship between genetic diversity and categories of race and ethnicity. Joanna earned her PhD in Genetics from Stanford University. Currently she is Senior Director of Research at 23andMe, a personal genetics company.",
          "image": "https://lh6.ggpht.com/WEfpVZXaEfw31yeg8GWdIcp8fl6Inu22SyCkDauEhFhoEmhtXDwE7g2B9kZUIR9Bt3e3cZQ5jNPYd40vgJY=s0#w=300&h=300",
          "name": "Joanna Mountain"
        },
        {
          "bio": "Originally from Germany, Uta Francke received her MD from the University of Munich and then specialized in medical genetics, diagnosing and treating people with genetic disorders. She has carried out laboratory research in both humans and mice, and she has taught clinical and molecular genetics at UCSD, Yale and Stanford University. She currently is Senior Medical Director at 23andMe, a personal genetics company.",
          "image": "https://lh6.ggpht.com/ArcSOlVgZwfQHIWI0ig5LeQef6vNhgXJPUEZ_iChDEdkGYQRcZNkyPEtCTeoAp7GDxWbOUlUa2kWdWyabm8=s0#w=126&h=126",
          "name": "Uta Francke"
        },
        {
          "bio": "The scientists at 23andMe are experts in population, medical and computational genetics, biomedical informatics, reproductive biology, personalized medicine, and pharmacology.  They share a passion for helping people understand their genetic information and gain deeper insights into their health, ancestry, and traits.  On any given day, they can be found furthering genetic research, making scientific discoveries relevant to individuals, and promoting genomic medicine.",
          "image": "https://lh4.ggpht.com/GRuG6dEwTAnvurhirmvxLoXq2EjtXZgOylT5pRKN_sJd_NIDfwoqh2LmfOa2rayeDwwoQSGnMPj7AAToMErK=s0#w=402&h=402",
          "name": "23andMe Team"
        }
      ],
      "subtitle": "Introduction to Genetics for Beginners",
      "key": "bio110",
      "image": "https://lh5.ggpht.com/Fh07_XbT61CGDWsQoOMQaIeHlgoR2tVogD0nnkmUsd7OaM_l5YIJeT1AJD55oQcSCTpjwIK4b7a8vL9DWw=s0#w=436&h=268",
      "expected_learning": "You will learn about fundamental principles of inheritance, gene expression, mutation and variation, development of simple and complex biological traits, human ancestry and evolution, and the acquisition of personal genetic information. By the end of this course, you will be able to read and understand genetic information available from personal genetics services such as [23andMe](https://www.23andme.com/).",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=sEXrjh-tme8"
      },
      "title": "Tales from the Genome",
      "related_degree_keys": [

      ],
      "required_knowledge": "No previous experience in genetics is necessary. However, familiarity with basic biological concepts, like the cell, is beneficial.",
      "syllabus": "## Lesson 1: Introduction to traits and heredity\nTrait variation and categorization, basic models of inheritance, and the connection via DNA. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_1_Concept_Map.pdf) for this lesson.\n\n## Lesson 2: Defining the genome\nDNA structure, chromosomes, and genome organization. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_2_Concept_Map.pdf) for this lesson.\n\n## Lesson 3: How a genome works\nProtein coding genes, transcription, translation, discerning the genetic code, and alleles. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_3_Concept_Map.pdf) for this lesson.\n\n## Lesson 4: Gene regulation\nNon-coding DNA, regulatory regions of genes, and transcription factors. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_4_Concept_Map.pdf) for this lesson.\n\n## Lesson 5: Transmission of genes and traits\nFamily relationships and pedigrees, inheritance patterns, allele dominance, and chromosome dynamics. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_5_Concept_Map.pdf) for this lesson.\n\n## Lesson 6: Origin of mutation/variation\nTypes of mutations, various causes of mutation, allelic frequency, and the spread of alleles in a population. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_6_Concept_Map.pdf) for this lesson.\n\n## Lesson 7: How to obtain and interpret personal genetic information\nPersonalized genetics: sample acquisition, DNA extraction and processing, and interpretation of results. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_7_Concept_Map.pdf) for this lesson.\n\n## Lesson 8: Simple genetic traits\nMolecular causes of monogenic traits, loss-of-function vs. gain-of-function alleles, and dominance. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_8_Concept_Map.pdf) for this lesson.\n\n## Lesson 9: Multifactorial traits\nPolygenic traits, complex traits with an environmental effect, qualitative and quantitative measures, twin studies, relative risk, and genome-wide association studies (GWAS). Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_9_Concept_Map.pdf) for this lesson.\n\n## Lesson 10: Pharmacogenetics: genes and drugs\nPharmacokinetics and pharmacodynamics, alleles affecting drug metabolism, and personalized medicine. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_10_Concept_Map.pdf) for this lesson.\n\n## Lesson 11: Human ancestry and evolution\nIdentity by state (IBS), Identity by descent (IBD), relative finder, maternal and paternal lineages, neanderthal interbreeding, and human/chimp evolution. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_11_Concept_Map.pdf) for this lesson.\n\n## Lesson 12: The immortal genome (putting genetics to work)\nPersonal decisions, legal questions, professional options, and the future of genetics. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_12_Concept_Map.pdf) for this lesson.\n\n## Bonus Lesson: Discovering DNA in your Kitchen\nUsing only normal household items, even YOU can extract DNA and see it live and in person. At the end of this lesson you'll have the best new party trick EVER. (just remember to bring strawberries) [Here](http://content.udacity-data.com/course/bio110/Kitchen_DNA_Extraction_from_Strawberries.pdf) is the protocol/procedure to make it happen.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/tales-from-the-genome--bio110?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nIrIWSgb_T8yKX-PKyxmfiPBqWUQ473SFik-eP_N0VxQtBl0QFljozPDuwj8obRAqMmW__XADI7RyKUw0UZ-=s0#w=130&h=60",
          "name": "23andMe"
        }
      ],
      "tracks": [
        "Non-Tech"
      ],
      "banner_image": "https://lh4.ggpht.com/_AHqr0EXcLBzF0rrwtBagE0tw86qcitFjUF21mCh2h_mReMEZ-hsYdNFvKQXz0zY9yUX9ufCiQk09m6oGBU=s0#w=2340&h=484",
      "short_summary": "Learn the basics of genetics, with a personal twist. This class is all about DNA and how it shapes who we are.",
      "slug": "tales-from-the-genome--bio110",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "This course is a journey into the biology of the human genome and will highlight the scientific, social, and personal perspectives of people living with a variety of traits.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Susan Snycerski has been teaching Introductory Psychology for 15 years. It's one of her favorite subjects to teach as she feels students can learn so much about themselves and others in this course. She completed her BS in Psychology at Central Michigan University and her Master's and Ph.D. at Western Michigan University. She was awarded a two-year postdoctoral fellowship from the National Institute on Drug Abuse and holds a graduate certificate in Clinical Trials Administration. She has been teaching at San Jose State for 8 years. Susan enjoys hiking, gourmet cooking, and cheering for the Detroit Red Wings, her favorite NHL hockey team.",
          "image": "https://lh3.ggpht.com/4GPqrXPP3Eu84YgSHsWtT7Do7IYb62XF9iLNxTmbkxQDRFJArCaqcHxQWzcLuKb47P9RnDXtcPQaIcVcJqs=s0#w=400&h=400",
          "name": "Susan Snycerski"
        },
        {
          "bio": "Gregory J. Feist is Associate Professor of Psychology in Personality at San Jose State University and Director of the MA Program in Research and Experimental Psychology. He teaches Introduction to Psychology, Test and Measures, and The Psychology of Science. He is co-author of the introductory text, Psychology: Perspectives and Connections (McGraw-Hill). He received his PhD in 1991 from the University of California at Berkeley.",
          "image": "https://lh4.ggpht.com/NZDaUHeGOoStnHILY22A46Fm_b17a0kI7C8oMbPKKcn0gIpE6gf4Uw3dAuD2e3Lpb_Zgvk1ohgLrqlOBYpY=s0#w=400&h=400",
          "name": "Greg Feist"
        }
      ],
      "subtitle": "The Science of Thought and Behavior",
      "key": "ps001",
      "image": "https://lh3.ggpht.com/W5BzbDFitZydf3rAqTsZ3RuFm4HS2ZBoGOPwjSZSqTkD0ZUC6DhURuAa0fIHr6D8LSQk9r73QFqnJtSTXzY=s0#w=436&h=268",
      "expected_learning": "Students will be able to:\n\n- identify and analyze the social dimension of society as a context for human life, the processes of social change and social continuity, the role of human agency in those processes, and the forces that engender social cohesion and fragmentation.\n\n- place contemporary developments in cultural, historical, environmental, and spatial contexts.\n\n- identify the dynamics of ethnic, cultural, gender/sexual, age-based, class, regional, national, transnational, and global identities and the similarities, differences, linkages, and interactions between them.\n\n- evaluate social science information, draw on different points of view, and formulate applications appropriate to contemporary social issues.\n\n- recognize the interactions of social institutions, culture, and environment with the behavior of individuals.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=Xb6N53WXfQ0"
      },
      "title": "Intro to Psychology",
      "related_degree_keys": [

      ],
      "required_knowledge": "There are no prerequisites, but we encourage curiosity about human nature.",
      "syllabus": "Lesson 1:  Introduction to Psychology\n\nLesson 2: Research Methods in Psychology\n\nLesson 3: The Biology of Behavior\n\nLesson 4: Sensation and Perception\n\nLesson 5: Human Development\n\nLesson 6: Consciousness\n\nLesson 7: Learning\n\nLesson 8: Memory\n\nLesson 9: Language and Thought\n\nLesson 10: Intelligence\n\nLesson 11: Motivation and Emotion\n\nLesson 12: Stress and Health\n\nLesson 13: Personality\n\nLesson 14: Social Behavior\n\nLesson 15: Psychological Disorders\n\nLesson 16: Treatments for Psychological Disorders",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-psychology--ps001?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/y2vNv1jlkBGooQdU5iP8AbAnlF17d1ur3etXFuWN5xhkLC_MIT-NtjAHBXMf3pg1Oz6voFNjqZWa1QQ6sd3K=s0#w=250&h=60",
          "name": "San Jose State University"
        }
      ],
      "tracks": [
        "Non-Tech"
      ],
      "banner_image": "https://lh4.ggpht.com/wXqP0nUt0oN8yt4sm9hSz5Nk1fKzHopMWeeWtiTZGl3pK5EU3UJOMzExyHa1zjT-sqN-G1dFUVYcEA9pTgQ=s0#w=1170&h=422",
      "short_summary": "Go on a journey through psychological concepts and principles to enable you to gain a more in-depth understanding of human thought and behavior.",
      "slug": "intro-to-psychology--ps001",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Introduction to Psychology is a journey through all of the major psychological concepts and principles. The knowledge gained from this course will allow students to critically evaluate psychological research and have a more in-depth understanding of human thought and behavior.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "David Joyner completed his Ph.D. in Human-Centered Computing at Georgia Tech specializing in delivering automated feedback and assessment to students in exploratory learning environments. He joined Udacity to develop exercises, projects, and (one day!) entire courses that adapt to the learner's ability and progress.",
          "image": "https://lh5.ggpht.com/eMuemBjuntlJbFjcaFSi63n1GoIwgCrmLSLdH5KCsUOpvquDRDayJbSRafDoQJ2fQ2xPCthXZKBDwUDKYzr4=s0#w=2000&h=2000",
          "name": "David Joyner"
        }
      ],
      "subtitle": "",
      "key": "gt101",
      "image": "https://lh3.googleusercontent.com/Z306sFML2loGn_bqSYe2-7ZeZn1f2MCA7lXvddO_c9qmX1Xxm1fx8PaNm5dDzfvyE6mHEEm-gqq4Bw_3NA=s0#w=1430&h=770",
      "expected_learning": "In this OMS Orientation, we cover several things you will need to know to be a successful OMS student.?\n\nThings we cover:\n- How you?ll register for classes.\n- Various tools you?ll use during your Masters education for submitting assignments, participating in forum discussions, and interacting with your professors and peers.\n- Tips and secrets to success in the OMS.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "OMSCS Student Orientation",
      "related_degree_keys": [

      ],
      "required_knowledge": "",
      "syllabus": "### Welcome \nWelcome messages from Dr. David Joyner and Eboni Bell\n\n### Oscar & Registration  \nAccessing Oscar, Time Tickets & holds, Classing (finding, adding, dropping) waitlists, and grades\n\n### T-square\nAccessing T-square, settings and tools, assessments (assignments, quizzes and tests) and grade book, and links (Piazza and Udacity)\n\n### Udacity\nAccessing course materials, courses, form exercises, and programming exercises\n\n### Piazza\nGetting started, profile, reading lists and topics, navigation, and posting\n\n### Other tools\nPassport, ProctorTrack, Google+, Peer Feedback, Webex, and other resources\n\n### Tips\nCourses, community, and welcome!",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/omscs-student-orientation--gt101?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [

      ],
      "banner_image": "",
      "short_summary": "In this OMS Orientation, we cover several things you will need to know to be a successful OMS student.",
      "slug": "omscs-student-orientation--gt101",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "",
      "summary": "This is an OMSCS orientation course for all Georgia Tech OMS students.",
      "expected_duration": 0
    },
    {
      "instructors": [
        {
          "bio": "Charles Brubaker earned his PhD in Computer Science from Georgia Tech in 2009. He then taught high school computer science and coached basketball at Pace Academy in Atlanta for 4 years. In 2012, inspired by Udacity, he began recording his lectures on a tablet, creating online quizzes, and automatically grading assignments to give his students instant feedback. The success of this enterprise convinced him that Udacity represented the wave of the future in education, and he joined the company in the summer of 2013.",
          "image": "https://lh3.ggpht.com/3t3a6BICSDyPyOGE0W55pmrskLdybPmniacXdY7fjxbwuqcZsafQGYH-pZ8NRWny6us_2OXPC7fuXMiGEmkq=s0#w=640&h=640",
          "name": "Charles Brubaker"
        }
      ],
      "subtitle": "Optional background course for GT CS6210",
      "key": "ud098",
      "image": "https://lh4.ggpht.com/mxbXeNtIMEhL0fCWbu9mlS0ozDSVkSlFg_tAYugac8ENfgPP0q796lCaVaSUfpjBsLEpX7Y1MdiPikDryeQk=s0#w=976&h=600",
      "expected_learning": "Highlights of the course include a deep coverage of:\n\n* cache systems and strategies\n* how virtual memory is implemented\n* the FAT and ext2 file systems\n* the pthreads  interface\n* the network protocol stack and the architecture of the Internet.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "GT - Refresher - Advanced OS",
      "related_degree_keys": [

      ],
      "required_knowledge": "No prior knowledge of Operating System concepts is assumed; however, the course is dense, since it is intended as a refresher for the student who already has some exposure to OS concepts.",
      "syllabus": "### Lesson 1: Memory Systems\n### Lesson 2: File Systems\n### Lesson 3: Multithreaded Programming\n### Lesson 4: Networking",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/gt-refresher-advanced-os--ud098?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh5.ggpht.com/noaX_fJ3Eg39OrZ_esRhm_OXmhqutxiQvWfas3FF3qsZ-bdqyuDA8xlbz3eGqkk6cIkRHkr_tH-7OoLtIw=s0#w=2048&h=739",
      "short_summary": "This course covers the essential Operating Systems concepts students need in preparation for the rest of the GT \"Advanced Operating Systems\" sequence.",
      "slug": "gt-refresher-advanced-os--ud098",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "The course covers the basics of Memory Systems, File Systems, Multithreaded Programming, and Networking.  Together these form a strong foundation from which the student can understand cutting edge research in the areas of Virtualization, Distributed Systems, and Internet-scale services in the GT *Advanced Operating Systems* sequence.",
      "expected_duration": 3
    }
  ],
  "tracks": [
    {
      "courses": [
        "ud730",
        "ud170",
        "cs101",
        "ud257",
        "ud120",
        "ud507",
        "ud617",
        "ud381",
        "ud651",
        "ud827",
        "ud201",
        "ud032",
        "ud919",
        "st101",
        "ud359",
        "ud262",
        "ud600"
      ],
      "name": "Data Science",
      "description": "Learn data science from industry experts at Facebook, Cloudera, MongoDB, Georgia Tech, and more. We offer courses in data science where you?ll learn to solve data-rich problems and apply this knowledge to your big data needs. Whether you?re new to the field or looking for additional training, we have introductory, advanced, and industry-specific courses to meet your learning goals."
    },
    {
      "courses": [
        "ud894",
        "ud890",
        "ud899",
        "ud898",
        "ud892",
        "ud898",
        "ud304",
        "ud804",
        "ud893",
        "ud388",
        "ud595",
        "ud882",
        "ud860",
        "ud858",
        "ud015",
        "ud197",
        "ud088",
        "ud330",
        "ud299",
        "ud775",
        "cs101",
        "ud989",
        "ud990",
        "ud549",
        "ud859",
        "ud036",
        "cs253",
        "ud110",
        "ud292",
        "ud245",
        "ud162",
        "ud436",
        "ud884",
        "cs256",
        "cs255"
      ],
      "name": "Web Development",
      "description": "Udacity web development courses are built with industry tech leaders such as Google, Salesforce, and others. These classes are designed to help you gain skills through web application development. You?ll learn the skills required to become a Front-End Engineer, Back-End Engineer, or a Full-Stack Engineer. Whether you?re trying to build your first website or you're trying to advance your skills we?ll teach you what you need to become a web developer."
    },
    {
      "courses": [
        "ud775",
        "cs101",
        "cs046",
        "ud036",
        "ud617",
        "ud805",
        "cs373",
        "ud032",
        "cs344",
        "cs271",
        "cs291",
        "cs258",
        "cs212",
        "cs215",
        "cs262",
        "cs387",
        "cs259",
        "cs313",
        "ud256"
      ],
      "name": "Software Engineering",
      "description": "Learn the skills you need to become or advance your skills as a Software Engineer. We offer a range of online courses that teach you the fundamentals of programming to advanced topics in computing such as parallel programming and software debugging. Start learning from industry experts from NVIDIA, Cadence, Autodesk and more!"
    },
    {
      "courses": [
        "ud837",
        "ud853",
        "ud825",
        "ud855",
        "ud009",
        "ud862",
        "ud875A",
        "ud875B",
        "ud875C",
        "ud875B",
        "ud867",
        "ud876-1",
        "ud876-2",
        "ud876-3",
        "ud876-4",
        "ud802",
        "cs046",
        "ud849"
      ],
      "name": "Android",
      "description": "Learn how to design and develop great Android apps through courses built by industry experts at Google."
    },
    {
      "courses": [
        "ud902",
        "ud585",
        "ud788",
        "ud421",
        "ud576",
        "ud325",
        "ud774",
        "ud607"
      ],
      "name": "iOS",
      "description": "In Udacity's iOS courses, you'll bridge the gap between the physical and the virtual. You'll learn to leverage common hardware features on iPhone and iPad, including the camera, microphone, GPS, gyroscope, and accelerometer to create engaging and interactive user experiences. Whether you want to build the app of your dreams or land a job as an iOS developer, you'll be developing for platforms used by hundreds of millions of people every day. And that's pretty rad."
    },
    {
      "courses": [
        "cs373",
        "ud810",
        "ud459",
        "ud955",
        "ud923",
        "ud189",
        "ud262",
        "ud600",
        "ud501",
        "ud915",
        "ud409",
        "ud805",
        "ud821",
        "ud007",
        "ud281",
        "ud436",
        "ud809",
        "ud061",
        "ud953",
        "ud098"
      ],
      "name": "Georgia Tech Masters in CS",
      "description": "In partnership with Georgia Tech and AT&T, Udacity offers access to individual Georgia Tech Online Masters in Computer Science courses. These advanced courses are taught in the full degree program from Georgia Tech and cover topics such as Artificial Intelligence and Machine Learning."
    },
    {
      "courses": [
        "ep245",
        "ud509",
        "ud518",
        "ud723",
        "ud719",
        "ud806",
        "design101",
        "ma004",
        "ma008",
        "ma006",
        "cs222",
        "ph100",
        "bio110",
        "ps001"
      ],
      "name": "Non-Tech",
      "description": "Udacity offers a range of online courses from Entrepreneurship, Design and Math to Physics and Genomics. These online courses are taught by subject matter experts in an engaging and interactive online experience. Check out the range of courses we have to offer."
    }
  ],
  "degrees": [
    {
      "instructors": [

      ],
      "subtitle": "Make Predictive Models",
      "key": "nd009",
      "image": "https://lh3.googleusercontent.com/PWyeYz9cpqhGoEFx47X2VKlSk6btXVUuuu1GUd86FdGzySI4_rUkinUGJuLe-VlultTKZkI0fr4oJitYQew=s0#w=1724&h=1060",
      "expected_learning": "The **Machine Learning Engineer Nanodegree program** will equip students with key skills, including data analysis and artificial intelligence, which will prepare them to fill roles with companies seeking machine learning experts (or to introduce machine learning techniques to their organizations). Many experts in this field go on to create new businesses as well, leveraging the vast capabilities of machine learning.\n\nProgram graduates will be able to:\n\n- Analyze the class and complexity of a given problem, and identify an appropriate algorithm and/or tools to apply towards solving it (e.g. gesture recognition, robot control).\n- Design an intelligent system that can act on the basis of input data towards optimizing some desired goal metric, with minimal supervision from a human.\n- Analyze the performance of an intelligent algorithm / system and present key metrics (such as accuracy, recall, computing time, etc. as appropriate) in an easy-to-understand and visually appealing form\nHandle the entire machine learning pipeline, from data to system:\n - Gather, clean, and process large data sets to prepare them for analysis\n - Develop multiple models to describe the data in those sets, validate those models, and compare those models according to standard metrics\n - Convert the data model into a live system that can process and reach conclusions on real data\n - Optimize the system based on real-world constraints, such as desired accuracy, efficiency, resource availability, and real-time responsiveness\n - Deploy the system in a live environment, such as an autonomous car, a recommender system, or a personal assistant",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Machine Learning Engineer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "Prior to entering the Machine Learning Engineer Nanodegree program, the student should have the following knowledge:\n\n- **Intermediate programming knowledge**, of the sort gained through the <a href=\"https://www.udacity.com/course/intro-to-programming-nanodegree--nd000\">Introduction to Programming Nanodegree</a>, other introductory programming courses or programs, or additional real-world software development experience. Including:\n - Strings, numbers, and variables\n - Statements, operators, and expressions\n - Lists, tuples, and dictionaries\n - Conditions, loops\n - Procedures, objects, modules, and libraries\n - Troubleshooting and debugging\n - Research & documentation\n - Problem solving\n - Algorithms and data structures\n<br>\n<br>\n- **Intermediate statistical knowledge**, of the sort gained through any of <a href=\"https://www.udacity.com/courses/data-science\">Udacity?s introductory statistics courses</a>. Including:\n - Populations, samples\n - Mean, median, mode\n - Standard error\n - Variation, standard deviations\n - Normal distribution\n - Precision and accuracy\n<br>\n<br>\n- **Intermediate calculus and linear algebra mastery**, addressed in the <a href=\"https://www.udacity.com/course/linear-algebra-refresher-course--ud953\">Linear Algebra Refresher Course</a>, including:\n - Derivatives\n - Integrals\n - Series expansions\n - Matrix operations through eigenvectors and eigenvalues\n\n<b>Take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-5714838578\" target=\"_blank\">Readiness Assessment</a> to find out if you're ready to get started.</b>\n\n***We have compiled additional resources for preparation <a href=\"https://www.udacity.com/wiki/nd009?nocache#!#preliminary-resources\">here</a>.***",
      "syllabus": "As a student in the Machine Learning Nanodegree program, you will build the  projects listed below. Each project has a **supporting course**. Reviewers will provide feedback on your projects and guidance on how to take your project to the next level.\n\n*Note: Unless otherwise mentioned in the individual project descriptions, you will need to implement your projects in **Python 2.7**. Familiarity with numerical and scientific computing libraries like **NumPy** and **SciPy** will be very helpful.*\n\n###Project 0: Titanic Survival Exploration (Optional)\nIn this project, you will create decision functions that attempt to predict survival outcomes from the 1912 Titanic disaster based on each passenger?s features, such as sex and age. You will start with a simple algorithm and increase its complexity until you are able to accurately predict the outcomes for at least 80% of the passengers in the provided data. This project will introduce you to some of the concepts of machine learning as you start the Nanodegree program.\n\n***The supporting course covers:*** Introduction to Artificial Intelligence and Machine Learning.\n\n###Project 1: Predicting Boston Housing Prices\nYou want to be the best real estate agent out there. In order to compete with other agents in your area, you decide to use machine learning. You are going to use various statistical analysis tools to build the best model to predict the value of a given house. Your task is to find the best price your client can sell their house at. The best guess from a model is one that best generalizes the data.\n\n***The supporting course covers:***  Statistics Review & Supporting Libraries, Evaluating Model Performance, Model Evaluation & Validation, and Model Optimization.\n\n###Project 2: Building a Student Intervention System\nAs education has grown to rely more and more on technology, more and more data is available for examination and prediction. Logs of student activities, grades, interactions with teachers and fellow students, and more are now available in real time. Educators are after new ways to predict success and failure early enough to stage effective interventions, as well as to identify the effectiveness of different interventions. Toward that end, your goal is to model the factors that predict how likely a student is to pass their high school final exam.\n\n***The supporting course covers:***  Supervised Learning Intro, Decision Trees, Regression, Neural Networks, Kernel Methods, Instance Based Learning, Bayesian Learning, Ensemble Learning.\n\n###Project 3: Creating Customer Segments\nMost of the data one collects doesn?t necessarily fit into nice, labeled categories. Many times not only is data not labeled, but categories are unknown! In this project we will take unstructured data, and then attempt to understand the patterns and natural categories that the data fits into. First you?ll learn about methods that are useful for dealing with data without labels, then you?ll apply this to a dataset of your choice, learning what natural categories sit inside it.\n\n***The supporting course covers:***   Clustering, Feature Scaling, Feature Selection, Feature Transformation, Semi-Supervised Learning.\n\n###Project 4: Train a Smartcab to Drive\nA smartcab is a self-driving car from the not-so-distant future that ferries people from one arbitrary location to another. In this project, you will use reinforcement learning to train a smartcab how to drive.\n\n***The supporting course covers:***  Markov Decision Processes, Reinforcement Learning, and Game Theory.\n\n###Project 5: Capstone Project\nIn this capstone project, you will leverage what you?ve learned throughout the Nanodegree program to solve a problem of your choice by applying machine learning algorithms and techniques. You will first **define** the problem you want to solve and investigate potential solutions and performance metrics. Next, you will **analyze** the problem through visualizations and data exploration to have a better understanding of what algorithms and features are appropriate for solving it. You will then **implement** your algorithms and metrics of choice, documenting the preprocessing, refinement, and postprocessing steps along the way. Afterwards, you will collect **results** about the performance of the models used, visualize significant quantities, and validate/justify these values. Finally, you will construct **conclusions** about your results, and discuss whether your implementation adequately solves the problem. Suggested application areas include:\n\n- Deep Learning\n- Robot Motion Planning\n- Healthcare\n- Education\n- Computer Vision\n- Investment and Trading\n\n##Want a preview?\nWe have selected and compiled content for this program from the following free courses:\n\n**General:**\n\n- <a href=\"https://www.udacity.com/course/intro-to-machine-learning--ud120\" target=\"_blank\">Udacity's Introduction to Machine Learning</a>\n-  <a href=\"https://www.udacity.com/course/knowledge-based-ai-cognitive-systems--ud409\" target=\"_blank\">Georgia Tech's Knowledge-based AI</a>\n- <a href=\"https://www.udacity.com/course/intro-to-data-analysis--ud170\">Udacity's Introduction to Data Analysis</a>\n-  <a href=\"https://www.udacity.com/course/machine-learning--ud262\" target=\"_blank\">Georgia Tech's Machine Learning</a>\n\n**Specific to Project 1:**\n\n-  <a href=\"https://www.udacity.com/course/intro-to-data-science--ud359\" target=\"_blank\">Udacity's Introduction to Data Science</a>\n-  <a href=\"https://www.udacity.com/course/intro-to-descriptive-statistics--ud827\" target=\"_blank\">Udacity's Descriptive Statistics</a>\n\n**Specific to Project 4:**\n\n-  <a href=\"https://www.udacity.com/course/reinforcement-learning--ud600\" target=\"_blank\">Georgia Tech's Reinforcement Learning</a>\n\n\n<em>Our free content maintains the same high level of quality as our Nanodegree course material. However, it is only through enrollment in a Nanodegree program that you receive direct mentoring, benefit from our best-in-class personal code review system, have the opportunity to submit your work for review, and earn industry-designed and recognized certification.</em>",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/machine-learning-engineer-nanodegree--nd009?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "",
      "short_summary": "Become a machine learning engineer and apply predictive models to massive data sets in fields like education, finance, healthcare or robotics.",
      "slug": "machine-learning-engineer-nanodegree--nd009",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "<b>Take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-5714838578\" target=\"_blank\">Readiness Assessment</a> to find out if you're ready to get started.</b>\n\nMachine learning represents a key evolution in the fields of computer science, data analysis, software engineering, and artificial intelligence. It has quickly become industry's preferred way to make sense of the staggering volume of data our modern world produces. Machine learning engineers build programs that dynamically perform the analyses that data scientists used to perform manually. These programs can ?learn? based on millions of experiences, all rigorously and numerically defined. \n\nMachine learning is literally everywhere, and is often at work even when we don?t realize it. Google Translate, Siri, and Facebook News Feeds are just a few popular examples of machine learning?s omnipresence. Machine learning is impacting so many critical industries, including healthcare, education, finance, robotics, artificial intelligence, astronomy, and more. The ability to develop machines and systems that automatically improve,  puts machine learning at the absolute forefront of virtually any field that relies on data.\n\n- Machine learning is at the forefront of incredible new innovations in several fields.\nHealthcare, education, astronomy, finance, robotics, and more are all being influenced by new developments in machine learning.\n- The goal of this Nanodegree program is to provide students the foundation required to start participating in this exciting new field.\n- Throughout this program, students will learn and ultimately master the same tools and technologies that experts in the field are currently using.",
      "expected_duration": 10
    },
    {
      "instructors": [

      ],
      "subtitle": "Improve the Software Lifecycle",
      "key": "nd012",
      "image": "https://lh3.googleusercontent.com/KW8kb13zRH6h2uCggdzUpUb5OZ93c9YKPLF7dWBD8geOj6-kvCeuVB4aK5ckYgd15bHpoxsxUOPu9jDL2L1Z=s0#w=277&h=170",
      "expected_learning": "Whether you?re seeking to **lead a DevOps adaptation process** in your current organization or pursuing a **new DevOps role**, you?re going to be very in-demand after graduating from this Nanodegree program. A recent study by WIRED and CA Technologies estimates that 80% of Fortune 1000 companies will adopt DevOps by 2019, and current statistics show an increase of over 60% for new DevOps job openings.\n\nYour fluency with the core DevOps principles?pervasive automation of processes, the use of metrics to gauge the effectiveness of processes, and a culture of collaboration across organizational units?will be both valued and valuable as you advance your career!",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "DevOps Engineer Nanodegree BETA*",
      "related_degree_keys": [

      ],
      "required_knowledge": "Students of the DevOps Nanodegree program should have a working knowledge of:\n\n - Unix type operating systems\n - At least one scripting language (shell, Python, or Ruby)\n - Version control systems\n\nFor students who do not meet these requirements we offer the following free introductory courses:\n\n - <a href=\"https://www.udacity.com/course/linux-command-line-basics--ud595\">Linux Command Line Basics</a>\n - <a href=\"https://www.udacity.com/course/configuring-linux-web-servers--ud299\">Configuring Linux Web Servers</a>\n - <a href=\"https://www.udacity.com/course/how-to-use-git-and-github--ud775\">How to Use Git and GitHub</a>",
      "syllabus": "**P0: Investigate a Product Workflow**\n\nIn this project, you will create a document that describes the current situation in a company as seen from the perspective of either a software developer or a member of the IT operations team. The document should capture the typical processes by which software is built, tested, and put into production. The document should reflect both what processes are going well and what processes could be improved.\n\n**P1: Design DevOps Implementation Plan**\n\n**P2: Write a Chef Cookbook**\n\n**P3: Configure and Test CI Solution**\n\n**P4: Containerize an application**",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/devops-engineer-nanodegree-beta--nd012?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [

      ],
      "banner_image": "",
      "short_summary": "Students will build on existing skills to prepare for critical roles like DevOps Engineer, DevOps Automation Specialist, and more.",
      "slug": "devops-engineer-nanodegree-beta--nd012",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "DevOps is a set of guiding principles that promote excellence throughout the software development life cycle. This program will teach you how to master and implement these principles.\n\nStudents from System Administration, Software Engineering, or Operations backgrounds will build on existing skills to prepare for critical roles like DevOps Engineer, DevOps Automation Specialist, and more.\n\n****This Nanodegree program is in a beta period. Content will be rolled out in phases, and project review times will vary. Your tuition costs are reduced by 25% if you enroll during beta. Your feedback through this phase is greatly appreciated, and will help us provide you with the best educational experience possible.***",
      "expected_duration": 6
    },
    {
      "instructors": [

      ],
      "subtitle": "Start Your Journey in iOS Development",
      "key": "nd006",
      "image": "https://lh3.googleusercontent.com/7aGXJZE4f0M-kIJw0_HZKSOOoanE42dyEz6agRS0ZVkpK-ALftVYRnaEdA9wGp0tUx5S5LPwTJIWCMRjfg=s0#w=1724&h=1060",
      "expected_learning": "If you are an individual with no programming experience, but are interested in developing apps for iPhone and iPad, this program provides the basic understanding and skills to get you started. Developing apps may seem like a specialized career, but fortunately, it?s not an exclusive one. All those amazing apps out there (and there are some amazing ones!) were built by real people, who learned real skills, and then applied them to real products. You can do it too, and your journey starts right here!\n\nYou?ll also get some some really valuable real-world experience, because as you build your Swift knowledge, you'll also be challenged to solve problems in code that iOS developers face every day. Best of all, you'll be working in Xcode the whole time, which is the same environment used to write apps.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Beginning iOS App Development Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "General Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n\nHardware Requirements:\n\n* Macintosh computer running OS X 10.10.4 or later \n\nBasic Computer Skills:\n\n* You can find the location of a file on your computer\n* You can rename a file on your computer \n* You can attach a file to an email\n* You can compress (.zip) and uncompress a file on your computer\n* You can download and install programs from the internet",
      "syllabus": "##What You'll Learn\nAs you progress through this program, you'll learn fundamental programming skills in 45-60 minute sessions. Along the way, we'll challenge you to implement specific functionality into three iOS apps:\n###Robot Maze\nSafely navigate your robot through a maze, while gaining experience with core object-oriented programming principles.\n###Pirate Fleet\nChallenge the computer to a Battleship-esque game, while learning about data structures in Swift.\n###Alien Adventure\nIn this simple side scrolling game, you'll ensure your exploratory robot presents the proper gifts of greetings to newly-encountered extraterrestrials. You'll mostly practice loops, classes, and design patterns in this app.\n###Silly Songs\nLaugh along with funny songs built entirely by you??from idea to app. Banana-fana fo-fana!",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/beginning-ios-app-development-nanodegree--nd006?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh3.googleusercontent.com/OfB1_wL8KcTEZOVNyP4-lTXmngpZnLuVQND5Ock2vSG0XxE2zIdg9bY0e4V96muDthELddJUzkuj3fZW7JIn=s0#w=4680&h=968",
      "short_summary": "For individuals with no programming experience, this program teaches core skills necessary to start developing apps for iPhone and iPad.",
      "slug": "beginning-ios-app-development-nanodegree--nd006",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Do you want to build apps for iPhone and iPad? Great!  Never written a line of code in your life? No problem. You?ve just got a few things to learn first, because in order to succeed as an iOS developer, you need a strong foundation in programming. The good news is, this Nanodegree program will provide that for you.\n\nTo that end, we?ve developed three iOS apps that you?ll make functional with your own code. While contributing to these apps, you?ll learn basic programming skills, and specifically, how to program in Swift 2.0, Apple?s custom programming language designed specifically for building iOS and OS X apps. Once you've completed this program, you'll have a strong foundation in solving key problems with code. Plus, you?ll be fully prepared to succeed in the <a href=\"https://www.udacity.com/course/ios-developer-nanodegree--nd003\" target=\"_blank\">iOS Developer Nanodegree</a>, which is the ultimate stepping stone to a career in iOS development!",
      "expected_duration": 3
    },
    {
      "instructors": [

      ],
      "subtitle": "Build Progressive Web Applications",
      "key": "nd802",
      "image": "https://lh3.googleusercontent.com/z5MheenPrJC0Um0F6j4-B9CYPLkVBoV_wqGhk-nlMb6lQw7od_YToUjwcQGyodKzygulwqhtibbUO-tTlLs=s0#w=1724&h=1060",
      "expected_learning": "Developing a great user experience begins with selecting the best tools, frameworks, and technologies for the applications you?re going to build. One of the key attributes of a Senior Web Developer is the ability to analyze available toolkits and make informed decisions. As you progress through the coursework and build your projects, you?ll refine and perfect these critical abilities.\n\nOur outcome-based approach means you?re consistently building real projects throughout your studies. You receive personalized coaching, enjoy access to moderated forums, and benefit from rigorous and timely project review. Your completed projects become a part of your unique student profile, and are made available to hiring partners when you're ready to showcase your accomplishments.\n\nThe expertise of our course developers and instructors, and vital contributions from an incredible roster of talent from Google, combine to ensure that students graduate from the Senior Web Developer Nanodegree program uniquely prepared to succeed in a very competitive and highly lucrative field.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Senior Web Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "* You have access to a computer with a broadband connection, on which you?ll install a professional code/text editor (ie. Sublime Text or Atom).\n* You have intermediate-level experience with HTML, including use of semantic markup.\n* You have intermediate-level experience with JavaScript, including object-oriented programming.\n* Students that have completed our [Front-End Web Developer Nanodegree program](https://www.udacity.com/course/front-end-web-developer-nanodegree--nd001), or have an equivalent skillset, meet the prerequisites for this program.",
      "syllabus": "In this Nanodegree program, you?ll build 5 portfolio-worthy projects. We have designed these projects to accommodate a range of skill levels. Each project is linked to a supporting course (or courses) for those students who need to add a particular skill or skills in order to successfully complete the project.\n\n\n### Meet-Up Event Planner\nYou will build a responsive web application that allows the user to establish a meet-up event. The goal is to create an app that is a joy to use on both desktop and mobile. The application must allow someone to name their event, search for a host location (using a location API like Foursquare), set the capacity of the event, the start and end times, and input a description of the event.\n\nPrepare for this project with: [Building High Conversion Web Forms](https://www.udacity.com/course/building-high-conversion-web-forms--ud890) and [Web Tooling and Automation](https://www.udacity.com/course/web-tooling-automation--ud892).\n\n### Public Transportation App\nYou will build an application that allows users to select a departure and arrival train station, and see a list of trains, times, and durations. A default train schedule will be provided that should be used when the application is offline. If a network connection exists, the application will query an endpoint that provides status updates on a trains arrival and departure times. \n\nPrepare for this project with: [JavaScript Promises](https://www.udacity.com/course/javascript-promises--ud898) and [Building Offline-First Web Apps](https://www.udacity.com/course/offline-web-applications--ud899) \n\n### Restaurant Reviewer\nYou will develop a restaurant review application with a focus on accessibility. You will remotely access JSON files containing restaurant information (including name, a photograph, address, cuisine type and operating hours) as well as JSON files containing review information for each restaurant (name of reviewer, date of review, 5-star rating and comments). The reviews application must include an application header, and a menu providing multiple ways to filter the restaurants (by cuisine, by location, etc). When viewing a specific restaurant, current reviews must be displayed along with a form for the user to submit their own review.\n\nPrepare for this project with: Accessible Web Applications ***COMING SOON!***\n\n### Corporate Dashboard\nYou will develop a corporate dashboard application in a component-oriented manner. The dashboard application must contain a header (with the currently selected dashboard?s name), and a menu, allowing the user to navigate between dashboards. You will be provided data endpoints to develop the following dashboards in which all components must be declaratively configurable (colors, titles, etc.):\n\n* A geospatial view, identifying the number of employees at various company locations\n* A ?key metrics? view, containing components displaying: the number of open issues, a line chart reflecting number of paying customers over a period of time, and a bar chart reflecting number of reported issues over a period of time\n* A ?data view,? providing a spreadsheet-style view of all issues that is sortable and filterable. An issue contains: submission timestamp, customer name, customer email address, description, open/closed status, closed timestamp, employee name.\n\nPrepare for this project with: Component-Oriented Development with Polymer ***COMING SOON!***\n\n### Capstone\nIn this capstone project, students will build their own application using signature native application features such as device sensor access, offline-first, and more.\n\nPrepare for this project with: Front-End Frameworks, Client-Server Communications, and Intro to Progressive Web Apps ***COMING SOON!***",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/senior-web-developer-nanodegree--nd802?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "",
      "short_summary": "For intermediate front-end developers, this program helps you work efficiently to apply modern tools, frameworks, and techniques to write robust web applications.",
      "slug": "senior-web-developer-nanodegree--nd802",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Leaping off from where our Front-End Web Developer Nanodegree program culminates, this program is expressly designed to afford intermediate developers the opportunity to build on existing front-end skills and master the newest and most innovative technologies available. If you?re a developer with experience in HTML, CSS and JavaScript?or a graduate of our Front-End Developer program!?and are focused on securing a Senior Web Developer position, this curriculum path will ensure you?re supremely well-prepared to achieve your career objectives.\n\nBuilt in close partnership with Google, the Senior Web Developer Nanodegree program emphasizes teaching the frameworks, techniques, and tools that make the development of progressive web applications possible. Your projects will be focused on using some of the newest features available, such as Promises, Service Worker, and device-level access APIs designed to develop Progressive Web Applications. Ultimately, graduates will emerge ready not only to fill important roles, but to drive innovation and lead technology strategy.",
      "expected_duration": 9
    },
    {
      "instructors": [

      ],
      "subtitle": "Learn to Build Web Applications",
      "key": "nd010",
      "image": "https://lh3.googleusercontent.com/hP9RWw7xqhLQH41NtRcjx1WapKgWrRSsatwMLzIw9Mu2EQYZ5phSadsYgwpcb2oL4odqXjCHjQ5kNj_Yu8oZ=s0#w=1724&h=1060",
      "expected_learning": "According to Indeed, there are currently over 19,000 unfilled Ruby on Rails developer positions, making Ruby an in-demand language for startups around the world. To be a successful Ruby on Rails developer, you?ll need to first understand the principles of programming with Ruby. We've partnered with industry leaders to craft a curriculum expressly designed to set you up for success in this exciting field. You?ll gain exclusive insights from industry leaders, including Yukihiro ?Matz? Matsumoto, the creator of Ruby.\n\nIn this Nanodegree program, you?ll complete a number of projects focused on developing a strong foundation in the Ruby language and the tools you?ll actually use on the job, such as Sublime Text, the command line, version control, and GitHub. Upon graduating from the program, you will have built a strong portfolio that will showcase your Ruby programming skills. You will also be prepared to move on to Ruby on Rails development.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Ruby Programming Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "* You have access to a computer with a broadband connection, on which you?ll install a professional code/text editor (e.g. Sublime Text or Atom).",
      "syllabus": "As you progress through this program you'll learn core skills in 45-60 minute sessions. You'll have the opportunity to apply these skills to three portfolio-worthy projects that will both challenge and reward you.\n\n###ToyCity Report Generator\nAnalyze complex inventory data and generate human-readable reports. You?ll hook up to an external API to provide a steady stream of new data.\n\n### Udacitask\nCreate a task manager built to run on the command line to help you keep track of everything you?ll be learning.\n\n###Survivr\nBuild a program that simulates the game mechanics of the hit new show, Survivr.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ruby-programming-nanodegree--nd010?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "",
      "short_summary": "Learning Ruby?a programming language ideal for beginners?is the first step to mastering Ruby on Rails, the framework that powers sites like GitHub, Groupon, and Twitter.",
      "slug": "ruby-programming-nanodegree--nd010",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "**This is the first within a series of three Nanodegree programs designed to take you from no programming experience to a senior-level position. Check out the entire series of Nanodegree programs:**\n\n1. Ruby Programming Nanodegree Program\n2. [Ruby on Rails Developer Nanodegree Program](https://www.udacity.com/course/ruby-on-rails-developer--nd020)\n3. [Senior Ruby on Rails Developer Nanodegree Program](https://www.udacity.com/course/senior-ruby-on-rails-developer--nd030)\n\nDo you want to build applications for the web? Great! Are you new to programming? No problem. You?ve just got a few things to learn first, because in order to succeed as a web developer, you need a strong foundation in programming. The good news is, this Nanodegree program will provide that for you.\n\nIn this program, you?ll be learning Ruby, a modern programming language that reads almost like English, making it perfect for beginners! This will prepare you to learn Ruby on Rails, a powerful framework which uses Ruby and powers websites like GitHub, Groupon, and Twitter. Throughout the Nanodegree program, you?ll hear from major voices in the industry, including the creator of the Ruby language himself!\n\nAt Udacity, we have an outcome-based approach. You will work on projects that showcase your progressive skills mastery, with an end goal of creating a diverse student portfolio that highlights your newfound skills as a Ruby developer. Over the course of the Nanodegree program, you'll develop a strong foundation in practical application development and object-oriented programming. These are critical skills for anyone interested in a career in web application development. You'll create a game simulator, analyze data and produce reports, and even build your own program.",
      "expected_duration": 2
    },
    {
      "instructors": [

      ],
      "subtitle": "Develop & Monetize 2D Games with libGDX",
      "key": "nd011",
      "image": "https://lh3.googleusercontent.com/qje6TeFI7jSfGrCFO9KgdKkQy-b0ZecIOirVQ3nNUP-Nt1YzgSF93klH8-YoMyqPBtCTTlj-iwMFQKaAGw=s0#w=1724&h=1060",
      "expected_learning": "If you want to turn your Java knowledge into cross-platform games, this is the Nanodegree for you. Throughout the program, you will learn the skills necessary to enter the gaming industry, or to publish your own apps.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Mobile Game Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course assumes basic proficiency with Java, including working with collections, implementing interfaces, and extending abstract classes. It is also assumed that you can read and understand documentation and source code.\n\nProficiency with Git and Android Studio is helpful, but not required.",
      "syllabus": "In this program, you'll learn the core skills needed to build great 2D games. Along the way, you'll build three different games, as well as develop a strategy for monetizing one of them. Specifically, we'll work on the following projects: \n\n##Project 1: Outbreak\nOutbreak is a block breaking game. Players control a paddle that can move along the bottom of the screen and send balls toward a field of blocks.  \n\nYou can be creative and use your own design ideas, for example, you might want to add power-ups or allow the game to get progressively more difficult. Make sure to read and review the project rubric before submitting, however.\n\nPrepare for this project with: <a href=\"https://udacity.com/course/ud405\" target=\"_blank\">2D Game Development with libGDX</a> \n\n##Project 2: Space Kerfuffle\n\nSpace Kerfuffle is a top down, starfighter combat game.  Players assume the role of an intrepid spacefighter pilot flying headlong into a swarm of aliens or robots or something else evil that wants to destroy humanity, probably.  Players control a spacecraft and fire projectiles at oncoming enemies who do the same.  Explosions happen. Numbers go up.\n\nSee our prototype of the game for inspiration.  Note that your game doesn?t have to function exactly like this!  You can be creative and use your own design ideas.  Make sure to read and review the project rubric before submitting, however.\n\nPrepare for this project with: <a href=\"https://udacity.com/course/ud406\" target=\"_blank\">How to Make a Platformer Using libGDX</a>.\n\n## Project 3: Monetization\nBuild a monetization and engagement plan to hook and retain users in your game. Choose from interstitial ads, freemium models, and in-app purchases - selecting the model that fits best with your game. You'll also set goals and devise a plan for monitoring the success of your monetization strategy, as well as identify potential tweaks should the strategy not perform to your liking.\n\nPrepare for this project with: <a href=\"https://udacity.com/course/ud407\" target=\"_blank\">Engagement & Monetization | Mobile Games</a>\n\n## Project 4: Artificial Intelligence and 2D Game Physics \nOne way you can make a good game great is to make the gameplay more engaging. \n\nHaving objects that move about the world in a realistic manner thanks to the the physics library Box2D is great way to do so. \n\nIntelligent enemies that can actively search and navigate a map, strategically attack players, and apply AI algorithms also ratchets up playability. \n\nIn this project, you will make your game more realistic and immersive by using physics and AI algorithms. \n\n*Course coming soon!*\n\n## Project 5: Capstone Project\n\nFor the capstone project, you will create a game of your own design incorporating libGDX, physics and artificial intelligence and monetization. The sky's the limit for what you can build. We encourage you to begin on paper and deeply consider how you might monetize your app as it may dictate how you might implement some features.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/mobile-game-developer-nanodegree--nd011?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [

      ],
      "banner_image": "",
      "short_summary": "Learn to build and monetize your own 2D games.",
      "slug": "mobile-game-developer-nanodegree--nd011",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Making and playing games is easily the most fun you can have with a computer, but there are real career opportunities here as well. Over the last decade, mobile gaming has grown into a huge market. Independent game developers are enjoying unparalleled success, and established gaming studios are hiring faster than ever.\n\n\nIf you want the skills to turn your game ideas into reality, or get ready to jump into professional game development, this is the Nanodegree for you. The core of this program is libGDX, a powerful cross platform game development framework, allowing you release your game on a variety of devices and operating systems.",
      "expected_duration": 9
    },
    {
      "instructors": [

      ],
      "subtitle": "Become an Android Developer",
      "key": "nd801",
      "image": "https://lh3.googleusercontent.com/l6sQx2UtDyXqYeSp8UjeDjywt3lSoxbZaUBfz8B6f-vT4JOR5r60w2c7Ta6eeGONAWEs34ZZZj2ejQ5K5eE=s0#w=1724&h=1060",
      "expected_learning": "With over 1 billion Android devices already activated, Android represents an incredible opportunity for developers. As Android continues to grow beyond smartphones, it will become the brains behind invisible, ubiquitous cloud-connected computing. The skills you learn in this Nanodegree will help you master the existing platform, and prepare you for the exciting opportunities in Android's future.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Android Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "This will be a challenging and rewarding journey that will take a novice programmer 9 months or longer to complete, spending an estimated 10 hours per week on the coursework. Do you have the dedication and mindset to sustain you through it? If you're not sure, please check out the courses and projects, listed under **Nanodegree Structure**, before making this commitment.\n\n### Programming Experience\n**This is not a \"Zero to Hero\" program.** Entering students are expected to have prior experience building applications (web or mobile) in Java or another object-oriented programming language. \n\n**You should have at least 1-2 years of experience** in Java or another object-oriented programming language prior to enrolling. \n\n**If you have no prior programming experience**, we recommend you take our <a href=\"https://www.udacity.com/course/android-development-for-beginners--ud837\" target=\"_blank\">Android Development for Beginners</a> course, also built with Google. You should also learn foundational Java programming concepts before enrolling in this Nanodegree. Our <a href=\"https://www.udacity.com/course/intro-to-java-programming--cs046\" target=\"_blank\">Intro to Java</a> course may be a good place to start. \n\n### Technical Skills and Requirements\n\nYou will submit your projects on GitHub, and must have a GitHub handle and know how to share code prior to enrolling. Take our course on <a href=\"https://www.udacity.com/course/how-to-use-git-and-github--ud775\" target=\"_blank\">How to Use Git and GitHub</a> if you need to learn how to do this. \n\nYou will build your apps in Android Studio, and will need to install it on your machine to complete your Nanodegree projects. If you don't have Android Studio installed, see our mini-course on <a href=\"https://www.udacity.com/course/how-to-install-android-studio--ud808\" target=\"_blank\">How to Install Android Studio</a> for instructions.\n\n### Dedication and Mindset \n\nIn addition to 1-2 years of prior programming experience and intermediate technical skills, students are expected to demonstrate the following characteristics:\n<li>**Resourcefulness**: Ability to search for and find solutions in documentation, backed by the belief that all problems in code are discoverable;\n<li> **Grit**: Ability to work through challenges and persevere when code breaks and tests fail.\n<li> **Growth Mindset**: Belief that intelligence is NOT a fixed entity, and can be boosted by hard work in the process of learning and practice.",
      "syllabus": "### Nanodegree Courses\n* <a href=\"https://www.udacity.com/course/developing-android-apps--ud853\" target=\"_blank\">Developing Android Apps: Android Fundamentals</a>\n* <a href=\"https://www.udacity.com/course/advanced-android-app-development--ud855\" target=\"_blank\">Advanced Android App Development: Productionize and Publish Your App</a>\n* Google Play Services \n * <a href=\"http://www.udacity.com/course/ud876-1\" target=\"_blank\">Google Play Services: Location and Context</a>\n * <a href=\"http://www.udacity.com/course/ud876-2\" target=\"_blank\">Google Play Services: Analytics</a>\n * <a href=\"http://www.udacity.com/course/ud876-3\" target=\"_blank\">Google Play Services: AdMob</a> \n * <a href=\"http://www.udacity.com/course/ud876-4\" target=\"_blank\">Google Play Services: Maps</a> \n * <a href=\"http://www.udacity.com/course/ud876-5\" target=\"_blank\">Google Play Services: Identity</a> \n* <a href=\"https://www.udacity.com/course/gradle-for-android-and-java--ud867\" target=\"_blank\">Gradle for Android and Java: Build Better Apps Through Automation</a>\n* <a href=\"https://www.udacity.com/course/material-design-for-android-developers--ud862\" target=\"_blank\">Material Design for Android Developers: Make Your Apps Material</a>\n* <a href=\"https://www.udacity.com/course/android-ubiquitous-computing--ud875\" target=\"_blank\">Android Ubiquitous Computing: Extend Apps to Wearables, TV and Auto</a> \n\n## Nanodegree Project Portfolio \n\n### Personal App Portfolio\nDesign and build an app that shows off the apps that you'll create as part of this Nanodegree.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud853/l-4353948561/m-4328734595\">Popular Movies, Stage 1</a>\nBuild an app to help users discover popular and recent movies. You will build a clean UI, sync to a server, and present information to the user.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud853/l-4339028539/m-4329556187\">Popular Movies, Stage 2</a>\nAdd onto your project from Stage 1 with a detail view for each movie, allowing users to 'favorite' movies, and adding a tablet layout.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud855/l-3993648704/m-4291808735\" target=\"_blank\">Super Duo: Productionize Two Apps</a>\n\nProductionize two apps, taking them from a functional state to a production-ready state. To do this, you will find and handle error cases, add accessibility features, allow for localization, add widgets, and add a library.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud867/l-4328489198/m-4382778568\" target=\"_blank\">Build It Bigger</a>\nUse Gradle to build a joke-telling app, factoring functionality into libraries and flavors to keep the build simple. You'll also configure a Google Cloud Endpoints development server to supply the jokes.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud855/l-4326960273/m-4329086234\" target=\"_blank\">Make Your App Material</a> \n\nImplement Android design concepts and transform a functional newsreader app using material design techniques. \n\n###<a href=\"https://www.udacity.com/course/viewer#!/c-ud875/l-4643648560/m-4634049761\" target=\"_blank\">Go Ubiquitous</a>\n\nLet users access the weather at a glance by building a Sunshine watch face for Android Wear.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud876-1/l-4330969190/m-4333036077\" target=\"_blank\">Capstone, Stage 1: Design, Scope and Plan Your App</a>\n\nCreate a detailed plan, including UI mocks and technical specifications, for building your own app. \n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud876-1/l-4333029280/m-4376351203\" target=\"_blank\">Capstone, Stage 2: Build and Polish Your App for Production</a>\n\nThis is your chance to take the skills that you've learned across your Nanodegree journey and apply it to an app idea of your own.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/android-developer-nanodegree--nd801?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Android"
      ],
      "banner_image": "https://lh4.ggpht.com/9DtZEhUKeCua8DlRMLwtU21wYk6Tos4u-FJT1sxyXSGEWUPoibSkq5MwiajQeyvLr-P48e6X0v9hbVRzkDg=s0#w=4680&h=968",
      "short_summary": "For intermediate programmers pursuing Android mastery, this program teaches the tools, principles, and patterns that underlie all Android development.",
      "slug": "android-developer-nanodegree--nd801",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Learn to develop for Android and transform your career outlook! This Nanodegree will provide a guided, efficient path for an intermediate developer with little or no experience on mobile platforms to emerge as an Android Developer. \n\nBy the end of the Nanodegree, you'll have a diverse portfolio of projects to show employers, and will even publish your own app on the Google Play Store as part of the Capstone project.\n\n**This is an Intermediate Nanodegree**: Entering students are expected to have prior experience building applications (web or mobile) in Java or another object-oriented programming language.",
      "expected_duration": 6
    },
    {
      "instructors": [

      ],
      "subtitle": "Create Stunning User Experiences",
      "key": "nd001",
      "image": "https://lh3.googleusercontent.com/-VquyWBz-7gLOJNr8GhJoQp4Z1HNSSFrHG0k5AFVFI8KeyMb8nr06RQDbRqJ7gPHqODUgVPiH2uZrJZEGRTs=s0#w=1724&h=1060",
      "expected_learning": "This Nanodegree program will teach you the skills required to <a href=\"https://www.udacity.com/career-paths/front-end-web-developer\" target=\"_blank\">become a Front-End Web Developer</a>. We?ve designed this curriculum with expert web developers and hiring managers, allowing you to demonstrate your skills by completing a series of projects approved by leading employers as the critical indicators of job-readiness. Specifically, you?ll:\n\n* create a professional portfolio using HTML and the Bootstrap CSS framework\n* use the power of jQuery?s DOM manipulation to dynamically populate a resume with your own information\n* develop your very own arcade game in JavaScript with the HTML5 Canvas API\n* discover how to optimize your application?s perceived load time by taking the Critical Rendering Path into account\n* learn that frames per second isn?t just important for games and how to ensure a silky smooth experience in your applications by optimizing for 60 frames per second\n* explore best practices in application architecture and design patterns\n* build a complex mapping application using the Knockout framework and a variety of third-party API services\n* develop and maintain applications with the confidence test-driven development promotes, using the Jasmine testing framework",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Front-End Web Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "General Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting the deadlines set for your cohort and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* You are willing to contribute to the success of the program, including collaborating with fellow students and giving us feedback on how we can improve.\n\nFront-End Developer Nanodegree Specific Requirements:\n\n* You have access to a computer with a broadband connection, on which you?ll install a professional code/text editor (ie. <a href=\"http://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a> or <a href=\"https://atom.io/\" target=\"_blank\">Atom</a>).\n* You can independently solve and describe your solution to a math or programming problem \n* You are familiar with <a href=\"https://docs.webplatform.org/wiki/tutorials/Programming_-_the_real_basics\" target=\"_blank\">basic programming concepts</a> such as variables, conditions and loops.",
      "syllabus": "In the Nanodegree program, you?ll build six portfolio-worthy projects. Depending on your knowledge and skill level, you can either learn the necessary skills through our supporting courses, or jump into the projects directly. A summary of each of these projects, as well as links to their supporting courses are included in the sections below.\n\n### PROJECT Build a Portfolio Site\nYou will replicate a design mockup in HTML and CSS. You will develop a responsive website that will display images, descriptions and links to each of the portfolio projects you will complete throughout the course of the Front-End Web Developer Nanodegree.\n\nPrepare for this project with: [Intro to HTML and CSS](https://www.udacity.com/course/intro-to-html-and-css--ud304), [Responsive Web Design Fundamentals](https://www.udacity.com/course/responsive-web-design-fundamentals--ud893), and [Responsive Images](https://www.udacity.com/course/responsive-images--ud882)\n\n### PROJECT Interactive Resume\nYou will develop an interactive resume application that reads your resume content from a JSON file and dynamically displays that content within a provided template. You will use objects, functions, conditionals, and control structures to compose the content that will display on the resume.\n\nPrepare for this project with: [JavaScript Basics](https://www.udacity.com/course/javascript-basics--ud804) and [Intro to jQuery](https://www.udacity.com/course/intro-to-jquery--ud245)\n\n### PROJECT Classic Arcade Game Clone\nYou will be provided with visual assets and a game loop engine; using these tools you must add a number of entities to the game including the player characters and enemies to recreate the classic arcade game *Frogger*.\n\nPrepare for this project with: [Object-Oriented JavaScript](https://www.udacity.com/course/object-oriented-javascript--ud015) and [HTML5 Canvas](https://www.udacity.com/course/html5-canvas--ud292)\n\n### PROJECT Website Optimization \nYou will optimize a provided website with a number of optimization- and performance-related issues so that it achieves a target PageSpeed score and runs at 60 frames per second.\n\nPrepare for this project with: [Website Performance Optimization](https://www.udacity.com/course/website-performance-optimization--ud884) and [Browser Rendering Optimization](https://www.udacity.com/course/browser-rendering-optimization--ud860)\n\n### PROJECT Neighborhood Map\nYou will develop a single-page application featuring a map of your neighborhood or a neighborhood you would like to visit. You will then add additional functionality to this application, including: map markers to identify popular locations or places you?d like to visit, a search function to easily discover these locations, and a listview to support simple browsing of all locations. You will then research and implement third-party APIs that provide additional information about each of these locations (such as StreetView images, Wikipedia articles, Yelp reviews, etc).\n\nPrepare for this project with:  [Intro to AJAX](https://www.udacity.com/course/intro-to-ajax--ud110) and [JavaScript Design Patterns](https://www.udacity.com/course/javascript-design-patterns--ud989)\n\n### PROJECT Feed Reader Testing\nIn this project you are given a web-based application that reads RSS feeds. The original developer of this application clearly saw the value in testing, they've already included Jasmine and even started writing their first test suite! Unfortunately, they decided to move on to start their own company and we're now left with an application with an incomplete test suite. That's where you come in.\n\nPrepare for this project with: [JavaScript Testing](https://www.udacity.com/course/javascript-testing--ud549)\n\n<br>\nYou?ll host all your projects on GitHub and make regular commits. If you haven?t learned version control yet, use our latest course on the topic: [How to Use Git and GitHub](https://www.udacity.com/course/how-to-use-git-and-github--ud775)\n\n<br>\nWe will be periodically reviewing the Front-End Nanodegree curriculum - both courses and projects - and making adjustments based on student and industry feedback. We will notify active students working toward the Nanodegree about any effects updates may have on the degree requirements.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/front-end-web-developer-nanodegree--nd001?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.ggpht.com/WBJdFIscHSIhGiAu6KWNHRMkfYvI13sjRvvxiQ5z6W1W1lGfknbDPuC21i2el5QR2wHq5snHohyyCsr90eHh=s0#w=1170&h=422",
      "short_summary": "Become a Front-End Web Developer by completing a variety of projects for your portfolio - become an HTML, CSS and JavaScript pro!",
      "slug": "front-end-web-developer-nanodegree--nd001",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Learn the fundamentals of how the web works and gain a working knowledge of the three foundational languages that power each and every website: HTML, CSS and JavaScript. This Nanodegree will provide a guided, efficient path for you to learn to build beautiful, responsive websites optimized for security and performance. You?ll see the efforts of your work with each click of the browser?s refresh button!\n\nBy the end of the Nanodegree you'll have built a diverse portfolio of projects to show employers. You'll also have the opportunity to prepare for your new career with reviews of your online presence (resume, LinkedIn, portfolio), prepare for interviews, take part in workshops covering topics like networking and salary negotiation as well as take part in a new program facilitating job placement.",
      "expected_duration": 6
    },
    {
      "instructors": [

      ],
      "subtitle": "Build a Business Around Your App",
      "key": "nd007",
      "image": "https://lh3.googleusercontent.com/37tkBOmcpUV76cMKVWH-LROofCWz7wF0w_FRr8Db5Bw6-oEJJ-bU5oV3hdlJM7ucb3jFrPIhYjVWVSHUdAE=s0#w=1724&h=1060",
      "expected_learning": "Being a successful tech entrepreneur means having many tools at your disposal. You need to understand everything from design and monetization, to prototyping and marketing. Fortunately, these are learnable skills, and the Tech Entrepreneur Nanodegree program teaches them all. \n\nWhether students are focused on design, monetization, or marketing, or business, these skills form an important core of their learning cycle. The feedback and review students continually receive as they learn to communicate both technology and strategy encourages clarity and concision; skills relevant to virtually any career in technology, and are especially critical to entrepreneurial success.\n\nBy partnering with Google, and a shortlist of successful, innovative, and influential startups, we have ensured the curriculum focuses exactly on those skills you need to build your own successful business. \n\nSucceeding as an entrepreneur is often made to seem like winning the lottery, but the real story is always one of tenacity, focus and discipline, and the work is invariably done by individuals who bring real skills to the table. Skills exactly like what you?ll master in the Tech Entrepreneur Nanodegree program. The certification you receive at the completion of this program is testament to your readiness for the remarkable journey ahead!",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Tech Entrepreneur Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "General Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* Collaboration with peers and interactive feedback are critical to the success of the program. You must be a committed and contributing participant of the community.\n\nYou do not need to have any prior programming experience to enroll in this Nanodegree program.",
      "syllabus": "As a student in the Tech Entrepreneur Nanodegree, you will build the following projects. Reviewers will provide feedback on your projects and guidance on how to take your project to the next level.\n\n###Your First Six Weeks\nIn this survey course, you will get an overview of the content covered in the nanodegree. You will learn about all of the aspects involved in building your business: product design, prototyping, monetization, marketing, and more! At the end of each week, you will submit a mini-project that will allow you to get immediate feedback from our coaches. \n\n###Validated Product Design\nThis project will help you design a product people will love. By the end of this project, you will be able to summarize your product idea, build out wireframes or prototypes, articulate what you learned from user testing, and highlight metrics that will be important to measure for your product.\n\nPrepare for this project with <a href=\"https://www.udacity.com/course/product-design--ud509\" target=\"_blank\">Product Design</a>.\n\n###Monetization Plan\nThis project will help you figure out how your product will make money! With this project, you?ll identify how your product will generate revenue (your monetization strategy) and dig into the details of implementing that strategy and your rationale for choosing it.\n\nGet ready for this project with <a href=\"https://www.udacity.com/course/app-monetization--ud518\" target=\"_blank\">App Monetization</a>.\n\n###Interactive Prototype\nIn this project, you?ll go through the iterative prototyping process -- starting with a low fidelity prototype and using feedback to build a medium fidelity prototype. By the end, you?ll have an amazing prototype to share and a really insightful list of talking points for potential investors about the feedback from your UX research experiments.\n\nLearn prototyping skills with <a href=\"https://www.udacity.com/course/rapid-prototyping--ud723\" target=\"_blank\">Rapid Prototyping</a>. \n\n###Marketing & Distribution Plan\nWith this project, you?re going to come up with a plan to acquire users and grow! By the time you?re done, you will have a robust marketing plan, which will also give you a lot of material for your final capstone project. Including a slide deck with a description of your value to your customers, how you stack up against competitors, who your target audience is, and how you plan to get distribution.\n\nGet ready for this project with <a href=\"https://www.udacity.com/course/app-marketing--ud719\" target=\"_blank\">App Marketing</a>.\n\n###Your Story\nYou often only get one chance to tell someone (an investor, an accelerator, or a customer) about your business. This project will help you do that in a powerful, succinct way. This is the polished culmination of everything you?ve done and learned during the Tech Entrepreneur Nanodegree.  You?ll use this story to pitch your company to potential investors, incubators or accelerators, friends and family, and even new customers.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/tech-entrepreneur-nanodegree--nd007?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [

      ],
      "banner_image": "https://lh3.googleusercontent.com/820EjsjmEO5w_Yk54hAGZkebEHmR2s3g_RIr_k427-NP0UM5eTXFeNT1t3ju3NapjhlSpO7HiP_AA3mMX-s=s0#w=4680&h=968",
      "short_summary": "From ideation to marketing to monetization, this program teaches you how to transform ideas into market-ready products, and build sustainable businesses around them.",
      "slug": "tech-entrepreneur-nanodegree--nd007",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Our Tech Entrepreneur Nanodegree program teaches you the skills you need to build your very own business, from ideation to marketing to monetization. Creating a new product is an amazing first step, but how do you then transform it into a stable operation that attracts customers, employees, and investors? Successful Silicon Valley startups like Optimizely and Y Combinator know, because they?ve done it, and that?s why we interviewed them -- and many other significant authors, influencers and venture capitalists -- when we designed this curriculum. \n\nBuilt in close partnership with Google, the Tech Entrepreneur Nanodegree program mixes theory and practice to teach students how to transform their ideas into market-ready products and to how to build sustainable, revenue-generating businesses around those products. \n\nLearning to succeed means studying success, and through your coursework and projects you?ll:\n\n* Validate your ideas using Google?s Design Sprint process\n* Evaluate and implement the most effective monetization strategies\n* Apply design methodologies to build an interactive, data-backed prototype\n* Create a marketing plan unique to your value proposition\n* Develop a polished story for your business in a pitch deck, landing page, or video\n\n...And much more\n\nAs you progress through your Nanodegree program, you?ll learn from expert instructors, benefit from interactive peer discussions, and receive detailed feedback from reviewers every step of the way.\n\nIf you think starting your own business seems impossible, too difficult, or something only risk-taking, nothing-to-lose visionaries accomplish, think again. It?s all about learning real skills, building real projects, and gaining real experience. That?s how dreams are built, and it starts here.",
      "expected_duration": 4
    },
    {
      "instructors": [

      ],
      "subtitle": "Discover Insights from Data",
      "key": "nd002",
      "image": "https://lh3.googleusercontent.com/ANTA_jW9y_93zZC8qohYWQXqSfGHHIDy0xUZkersc0drruRkUWQDP4rhvccUpxITZ0Vw8Or4fesYkzEzoHU=s0#w=1724&h=1060",
      "expected_learning": "The Data Analyst Nanodegree is specifically designed to prepare you for a career in data science. As a Data Analyst, you will be responsible for obtaining, analyzing, and effectively reporting on data insights ranging from business metrics to user behavior and product performance. We have worked closely with leading industry partners to carefully design the ideal curriculum to prepare you for this role.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Data Analyst Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "Data Analyst nanodegree students...\n\n* are interested in data science.\n* have a strong grasp of descriptive and inferential statistics.\n* have programming experience (preferably in Python)\n* have a strong understanding of programming concepts such as variables, functions, loops, and basic data structures like lists and dictionaries.\n\n <b>Take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-2364518584\" target=\"_blank\">Readiness Assessment</a> to see if you're ready to get started.</b>\n  \n\nGeneral Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* You have access to a computer with a broadband connection, on which you?ll install a professional code/text editor (ie. Sublime Text or Atom) and programming languages like Python and R and associating data science libraries.\n* You will be a committed and contributing participant of the community.",
      "syllabus": "**7 Day Warm-Up: Find the Optimal Chopstick Length**<br>\n<em>An opportunity to get your feet wet and get some quick feedback about your progress. </em> \n\nSet up iPython notebook and commonly used data analysis libraries on your own computer. Use them to dig into the results of an experiment testing the optimal length of chopsticks and present your findings.\n\nPrepare for this project with: [Lesson 1 of Statistics](https://www.udacity.com/course/viewer#!/c-ud827/l-1293178557)\n\n**Test a Perceptual Phenomenon**\n\nUse descriptive statistics and a statistical test to analyze the Stroop effect, a classic result of experimental psychology. Give your readers a good intuition for the data and use statistical inference to draw a conclusion based on the results.\n\nPrepare for this project with: Statistics (available separately as [Inferential Statistics](https://www.udacity.com/course/viewer#!/c-ud201) and [Descriptive Statistics](https://www.udacity.com/course/viewer#!/c-ud827))\n\n**Investigate a Dataset**\n\nChoose one of Udacity's curated datasets and investigate it using NumPy and Pandas. Go through the entire data analysis process, starting by posing a question and finishing by sharing your findings.\n\nPrepare for this project with: [Intro to Data Analysis](https://www.udacity.com/course/viewer#!/c-ud170)\n\n**Wrangle OpenStreetMap Data**  \nChoose any area of the world in <a href=\"https://www.openstreetmap.org\" target=\"_blank\">OpenStreetMap </a> and use data munging techniques, such as assessing the quality of the data for validity, accuracy, completeness, consistency and uniformity, \nto clean the OpenStreetMap data for a part of the world that you care about. Choose between MongoDB or SQL as the data schema to complete your project. \n\n**Explore, Summarize, and Discover Interesting Insights from Datasets**  \nUse R to apply exploratory data analysis techniques. Practice understanding a single variable and relationships between multiple variables, and explore a selected data set for distributions, outliers, and anomalies.\n\nPrepare for this project with: [Data Analysis with R](https://www.udacity.com/course/viewer#!/c-ud651)\n\n\n**Identify Fraud from the Enron Email Dataset**  \nPlay detective and put your machine learning skills to use by building an algorithm to identify Enron Employees who may have committed fraud based on the public Enron financial and email dataset. \n\nPrepare for this project with:  [Intro to Machine Learning](https://www.udacity.com/course/viewer#!/c-ud120)\n\n**Tell Stories with Data Visualization**  \nCreate a data visualization from a data set that tells a story or highlights patterns in the data. Your work will be a reflection of the theory and best practices of data visualization.\n\nPrepare for this project with:  [Data Visualization](https://www.udacity.com/course/viewer#!/c-ud507)\n\n**Design and Analyze an A/B Test**\n\nMake design decisions for an A/B test, including which metrics to measure and how long the test should be run. Analyze the results of an A/B test that was run by Udacity and recommend whether or not to launch the change.\n\nPrepare for this project with: [A/B Testing](https://www.udacity.com/course/viewer#!/c-ud257) \n\n<br>\n<em>As with all our Nanodegree programs, we regularly audit and review our Data Analyst Nanodegree curriculum-- both courses and projects. We do so largely based on student and industry feedback, and we make adjustments wherever and whenever we identify opportunities for improvement. Any potential impacts on degree requirements are always communicated to students actively working towards the Nanodegree.</em>",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/data-analyst-nanodegree--nd002?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh3.ggpht.com/QR1qKszE9uRVNuwafZgQOghcoZQ3VbcN89UAN3QE6HE1QULt2gkC47n1OAlYmQMyyxRSjJfrNxIeo3uaY-g=s0#w=4672&h=968",
      "short_summary": "Learn to clean up messy data, uncover patterns and insights, make predictions using machine learning, and clearly communicate your findings.",
      "slug": "data-analyst-nanodegree--nd002",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Best-in-class curriculum, personalized instruction, close mentoring, a peerless review model, and career guidance combine to equip students of this program with the skills necessary to obtain rewarding employment as a Data Analyst.\n \n<b>Take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-2364518584\" target=\"_blank\">Readiness Assessment</a> to find out if you're ready to get started.</b>\n\nLearn to:  \n\n* Wrangle, extract, transform, and load data from various databases, formats, and data sources  \n* Use exploratory data analysis techniques to identify meaningful relationships, patterns, or trends from complex data sets\n* Classify unlabeled data or predict into the future with applied statistics and machine learning algorithms   \n* Communicate data analysis and findings through effective data visualizations  \n\nWe have designed this program by working closely with expert data analysts and scientists at leading technology companies, and in partnership with their hiring managers to ensure you emerge from your degree program with the skills and talents these companies are seeking.",
      "expected_duration": 9
    },
    {
      "instructors": [

      ],
      "subtitle": "Build Complex Web Applications",
      "key": "nd004",
      "image": "https://lh3.googleusercontent.com/x43q1RlhL8QBYyQfj63Tv5Pqkx7v2VPFsqfuFnR36gKTWGjd2XvWW3odzbrKBZktFtq2J7_0-V9vOxsuhR0=s0#w=1724&h=1060",
      "expected_learning": "The Full Stack Web Developer Nanodegree is designed to prepare you for a career in web development. As a Full Stack Web Developer, you are the \"jack of all trades\" who companies rely on to build, support and maintain their web applications. With our industry partners, we've carefully crafted the most efficient set of projects and skills training to guide you along the way.\n\nIn this Nanodegree you will hone your understanding of how the web works, you'll develop complex relational databases used to store your applications' data, you'll secure and configure your own Linux-based servers, and you'll build complete web applications using HTML, CSS, JavaScript and Python.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Full Stack Web Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "Prerequisites:\n\nIn order to determine if the Full Stack Web Developer Nanodegree is a good fit for you, please take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3486749853\" target=\"_blank\">Readiness Assessment</a>. This will help you determine if you are ready to start.\n\nMinimum Requirements:\n\n1. Experience using HTML, CSS and JavaScript to build complex client-side applications. If you do not have experience in these languages, we encourage you to enroll in our <a href=\"https://www.udacity.com/course/front-end-web-developer-nanodegree--nd001\" target=\"_blank\">Front-End Web Developer Nanodegree</a>.\n2. Beginner-level experience in Python. If you do not have this experience, check out our <a href=\"https://www.udacity.com/course/introduction-to-programming-nanodegree--nd000\" target=\"_blank\">Intro to Programming Nanodegree</a> or the first three lessons of <a href=\"https://www.udacity.com/course/intro-to-computer-science--cs101\" target=\"_blank\">Intro to Computer Science</a>.\n3. Experience using Git for version control. If you do not have this experience, check out our <a href=\"https://www.udacity.com/course/how-to-use-git-and-github--ud775\" target=\"_blank\">How to Use Git and GitHub</a> course.\n4. You are self-driven and motivated to learn. Participation in this program requires consistently meeting the deadlines set for your cohort and devoting at least 10 hours per week to your work.\n5. You can communicate fluently and professionally in written and spoken English.\n6. You have access to a computer with a broadband connection, on which you'll install a professional code/text editor (ie. <a href=\"http://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a> or <a href=\"https://atom.io/\" target=\"_blank\">Atom</a>) as well as virtual machines (using <a href=\"https://www.virtualbox.org/\" target=\"_blank\">VirtualBox</a> and <a href=\"https://www.vagrantup.com/\" target=\"_blank\">Vagrant</a>).\n7. You are willing to contribute to the success of the program, including collaborating with fellow students and giving us feedback on how we can improve.\n\nDesirable Prior Experience:\n\n1. You've completed an online programming course.\n2. You've tried to build server-side applications in the past and want to learn how to do it like a pro.",
      "syllabus": "These are the projects you'll build and the classes that will prepare you to build each of the projects. You'll have access to all these in the Nanodegree:\n\n### PROJECT Movie Trailer Website\nYou will write server-side code to store a list of your favorite movies, including box art imagery and a movie trailer URL. You will then serve this data as a web page allowing visitors to review their movies and watch the trailers.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/programming-foundations-with-python--ud036\" target=\"_blank\">Programming Foundations with Python</a>\n\n### PROJECT Tournament Results\nYou will develop a database schema to store the game matches between players. You will then write code to query this data and determine the winners of various games.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/intro-to-relational-databases--ud197\" target=\"_blank\">Intro to Relational Databases</a>\n\n### PROJECT Item Catalog\nYou will develop an application that provides a list of items within a variety of categories as well as provide a user registration and authentication system. Registered users will have the ability to post, edit and delete their own items.\n\nPrepare for this project with:\n\n*  <a href=\"https://www.udacity.com/course/full-stack-foundations--ud088\" target=\"_blank\">Full Stack Foundations</a> <br>\n*  <a href=\"https://www.udacity.com/course/authentication-authorization-oauth--ud330\" target=\"_blank\">Authentication and Authorization</a> <br> \n\n### PROJECT Design a Game API\nIn this project you will use these skills to develop your own game! You will write an API with endpoints that will allow anyone to develop a front-end for your game.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/developing-scalable-apps-in-python--ud858\" target=\"_blank\">Developing Scalable Apps with Python</a>\n\n### PROJECT Linux-based Server Configuration\nYou will take a baseline installation of a Linux distribution on a virtual machine and prepare it to host your web applications, to include installing updates, securing it from a number of attack vectors and installing/configuring web and database servers.\n\nPrepare for this project with:\n\n*  <a href=\"https://www.udacity.com/course/configuring-linux-web-servers--ud299\" target=\"_blank\">Configuring Linux Web Servers</a> <br>\n*  <a href=\"https://www.udacity.com/course/linux-command-line-basics--ud595\" target=\"_blank\">Linux Command Line Basics</a> <br> \n\n### Additional Information\n\nWe will be periodically reviewing the Full Stack Nanodegree curriculum - both classes and projects - and making adjustments based on student and industry feedback. We will notify active students working toward the Nanodegree about effects this may have on the degree requirements.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/full-stack-web-developer-nanodegree--nd004?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh6.ggpht.com/rAMZ_i12gHuhfTpWC_Q4WLiTYMbHXhKmbIY88l0G_C8Y8sZJ5DAEwSon3DGOrsc4eGhXvm6dt1ODDXuwzF0=s0#w=4680&h=968",
      "short_summary": "Learn how to create server-side, data-driven web applications that support any front-end and can scale to support hundreds of thousands of users.",
      "slug": "full-stack-web-developer-nanodegree--nd004",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This Nanodegree program is the most efficient curriculum to prepare you for a job as a Full Stack Web Developer. Participants in the program will learn to build complex server-side web applications that make use of powerful relational databases to persistently store data. You'll then learn how to secure and configure your very own Linux-based server to host your applications. Finally, you'll explore the challenges in horizontally scaling an application to support thousands of users with a cloud-based application hosting provider.\n\nYou'll also have the opportunity to prepare for your new career with reviews of your online presence (resume, LinkedIn, portfolio), prepare for interviews, take part in workshops covering topics like networking and salary negotiation as well as take part in a new program facilitating job placement.",
      "expected_duration": 6
    },
    {
      "instructors": [

      ],
      "subtitle": "Learn to Code",
      "key": "nd000",
      "image": "https://lh3.googleusercontent.com/fa733-DxkXpEOz23x-xvZ_qX42HrOM2MOwqwKwjSs7v6ptZ6Emaf8R3HijCU3NGPfD4bv_EGwayuZ3iKv0A=s0#w=1724&h=1060",
      "expected_learning": "Programming can be hard. The language is often complex, and the skills are rarefied. For a novice, it can be difficult to know where to start. These challenges often stand in the way for many people. Our mission is to change this. We want to make the world of programming accessible, understandable, and beneficial. All successful programmers share a common body of knowledge. This degree will teach you those same skills.\n\nCompletion of this Nanodegree will empower you to make an informed choice about your future. You may decide to pursue a whole new careeer in tech. Your newfound technical literacy may open up promotional opportunities in your current role. You may embark on long-imagined personal project. Regardless of the direction you take, your programming knowledge will allow you to communicate effectively, build efficiently, and think creatively.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to Programming Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "General Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n\nBasic Computer Skills:\n\n* You can find the location of a file on your computer\n* You can rename a file on your computer \n* You can attach a file to an email\n* You can compress (.zip) and uncompress a file on your computer\n* You can download and install programs from the internet",
      "syllabus": "## What You Will Build\n\nAs you progress through this Nanodegree you will document what you're learning in a web page that you'll build as you go. By the end you will have a fully-functioning web page and some cool programs that demonstrate what you've learned, like how to:\n\n### Look Professional\nBy using a \"styling\" language called CSS, you will be able to quickly and easily change the look and feel of your web page. While learning CSS, you'll also gain experience with one of the most important concepts in computer science: avoiding repetition through something called *abstraction*. \n\n### Display Videos\nIn addition to your own notes about what you're learning, you'll learn to write computer code in a language called Python that will embed your favorite videos (from Udacity or anywhere else) directly onto a web page. While learning  Python, you'll be developing a skill that's required for every programming project regardless of language: using procedural thinking to tell a computer exactly what you want it to do.\n\n\n### Be User-Friendly\nEven though *you* will have the skills to modify your web page by changing the code it's made from, the people you show it to may not. You'll add a form that allows visitors to add their own content to your page (if you let them of course). While you're learning what to do with information that someone submits to your web page, you'll also gain a deeper understanding for how the internet works and how computer programmers assemble complex programs by combining pieces of computer code that others have written before them. \n\n## How You Will Learn to Build it\n\nThis Nanodegree consists of a series of 5 stages. In each one, you will learn new broadly-applicable technical skills. After each stage, you will complete a project checkpoint, then submit your work for valuable feedback on your progress.  \n\n### Stage 1: Make Your Web Page\nYou will learn the basics of how the internet works and how documents written in a language called HTML form the backbone of the Web. In the **project checkpoint** at the end you'll *write HTML and CSS (another language) to make your web page look professional.*\n\n### Stage 2: Code Your Own Quiz\nThis is where you'll learn how to program. You'll learn a programming language called Python and you'll use it to write instructions that the computer can understand and execute. After this stage you will have incredible power: you will be able to automate almost any repetitive task that can be done on a computer. In the **project checkpoint** you will *write a program in Python to build a fill-in-the blanks type quiz.*\n\n### Stage 3: Create a Movie Website\nIn this stage, you will learn an entirely new approach to programming (and thinking) called Object Oriented Programming and how to use this approach to build impressive programs by simply reusing or modifying computer code that others have already written. In the **project checkpoint** you will create a simple movies webpage with images and trailers.*\n\n### Stage 4: Allow Comments\nUp to this point, you still haven't put your web page online: you've only seen it on your own computer. In this stage, you will gain a deeper understanding for how the internet works and will write code which tells computers called \"servers\" how to display web pages. In the **project checkpoint** you will *put your web page online and build what's called a \"back end\" which will allow people anywhere in the world to view and--if you let them--modify your site.*\n\n### Stage 5: Choose Your Next Steps\nAt this point, you will already have a solid understanding of most of the essential concepts and skills that programming requires. This stage will be a rapid sampling of some of the ideas that you haven't seen including:\n\n* **JavaScript**: the language of the web.\n* **APIs**: \"Application Programming Interfaces\" give programmers a way to easily incorporate data from all over the web into their applications.\n* **Recursion**: This may be the most mind-blowing idea in programming.\n* **Parallel Computing**: How to use many computers to solve really big problems more efficiently.\n* **How to Solve Big Problems**: You run into new challenges when you write large programs (or building substantial web pages). \n* **Responsive Web Design**: How to make your web page look good on a computer, tablet, or phone.\n\nIn the **project checkpoint** you will have the chance to *pursue one of these ideas even deeper by adding new functionality (you get to choose what) to your web page.*",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-programming-nanodegree--nd000?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [

      ],
      "banner_image": "https://lh3.googleusercontent.com/XnIv9SDwxcAyryDVYxcvRnRP1GB__4rmyPWNa1fyINrfaZDlAFmptyFxMg0ITQiWHVP1qHrV44m1VeZ02gwD=s0#w=1170&h=242",
      "short_summary": "Welcome to the world of programming. Learn the foundational skills that all programmers use whether they program mobile apps, create web pages, or analyze data.",
      "slug": "intro-to-programming-nanodegree--nd000",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "If you have zero programming knowledge, completing this Nanodegree will give you the basic understanding and skills you need to get started in the world of programming. \n\nThis Nanodegree equips you with the foundational knowledge and skills that all programmers use whether they program mobile apps, create web pages, or analyze data. You won?t just learn to code, you will learn what it means to ?think like a programmer? and you'll have your own web page and a portfolio of programs you've built to prove it. \n\nSuccessful completion of this program will enhance your skills, broaden your opportunities, and lay the groundwork for a future in technology. It is not a career-track degree, but for beginners, it is a critical step forward",
      "expected_duration": 4
    },
    {
      "instructors": [

      ],
      "subtitle": "Program Apps for the iPhone and iPad",
      "key": "nd003",
      "image": "https://lh3.googleusercontent.com/MPVp_6l8qmqXtDUoSfBcoo5jxfpK17gGWSFOTkg5-rcJ_hG5ZO4-umI6xAtE74PB2c1fSP0NFKduSirMtBE=s0#w=1724&h=1060",
      "expected_learning": "Today about half the adult population owns a smartphone; by 2020, 80% will.<sup>1</sup> The average American smartphone user spends <a href=\"http://www.flurry.com/bid/109749/Apps-Solidify-Leadership-Six-Years-into-the-Mobile-Revolution#.VPYAJVPF8id\" target=\"_blank\">162 minutes per day</a> on their device. This presents enormous opportunities for companies seeking to become a part of people's daily lives. The smart device market is growing exponentially, with no end in sight. iOS developers are going to be very in-demand for a very long time. \n\nIn partnership with industry leaders, we've built a comprehensive set of projects and skills designed to launch your career as an iOS Developer. Specifically, you?ll learn:\n\n* MVC architecture and why it's important when developing apps\n* How to build sophisticated and polished user interfaces with UIKit components\n* How to implement common frameworks used by iOS developers\n* How to implement Core Data for local persistence of an object structure\n* How to use external APIs to make use of data from other companies\n\n***\n<sup>1</sup> ?Planet of Phones?, *The Economist*, http://www.economist.com/news/leaders/21645180-smartphone-ubiquitous-addictive-and-transformative-planet-phones",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "iOS Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "In order to determine whether or not the iOS Developer Nanodegree is right for you, please take this <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3098108743\" target=\"_blank\">readiness assessment</a>. It will ask you a series of technical and time management questions to help you determine if now is the right time to start the program. General prerequisites are summarized below.\n\nGeneral Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* Collaboration with peers and interactive feedback are critical to the success of the program. You must be a committed and contributing participant of the community.\n\niOS Developer Nanodegree Specific Requirements:\n\n* Access to a Mac computer running OS X 10.10.4 or later\n* Prior object-oriented programming experience, in any object-oriented language \n* Strong understanding of programming concepts like variables, if statements, and loops, as well as object-oriented programming concepts like functions and classes",
      "syllabus": "In the Nanodegree program, you?ll build five portfolio-worthy apps. Depending on your knowledge and skill level, you can either learn the necessary skills through our supporting courses, or jump into building the apps directly. A summary of each of these apps, as well as a link to their supporting course are included in the sections below.\n\n###Pitch Perfect\nBuild an app that records a message and plays the audio back through user-selected filters. \n\n<a href=\"https://itunes.apple.com/us/app/pitch-perfect-portfolio-app/id987684705?mt=8\" target=\"_blank\">Download</a> an example of what you'll create, then prepare for this project with <a href=\"https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585\" target=\"_blank\">Intro to iOS App Development with Swift</a>.\n\n###MemeMe\nTake a photo, and overlay text to meme-ify your friends. Then share on your favorite social channels!\n\n<a href=\"https://itunes.apple.com/us/app/mememe-portfolio-app/id994289240?mt=8\" target=\"_blank\">Download</a> an example of what you'll create, then prepare for this project with <a href=\"https://www.udacity.com/course/uikit-fundamentals--ud788\" target=\"_blank\">UIKit Fundamentals</a>.\n\n###On the Map\nAdd your current location to a map of locations for other nanodegree students. Also, post a link to your own blog post, project, or portfolio for others to see.\n\n<a href=\"https://itunes.apple.com/us/app/on-the-map-portfolio-app/id994619554?mt=8\" target=\"_blank\">Download</a> an example of what you'll create, then prepare for this project with: <a href=\"https://www.udacity.com/course/ios-networking-with-swift--ud421\" target=\"_blank\">iOS Networking with Swift</a>.\n\n###Virtual Tourist\nTour the world without leaving the comforts of your couch! This app allows you to drop pins on a map and pull up Flickr images associated with that location. You will store the locations and images using Core Data.\n\n<a href=\"https://itunes.apple.com/us/app/virtual-tourist-portfolio/id994696845?mt=8\" target=\"_blank\">Download</a> an example of what you'll create, then prepare for this project with: <a href=\"https://www.udacity.com/course/ios-persistence-and-core-data--ud325\" target=\"_blank\">iOS Persistence and Core Data</a>.\n\n### You Decide!\nLanding a job as an iOS Developer requires more than technical skills; it requires creativity and innovation. Drawing on everything you?ve learned so far in the Nanodegree, you'll now dream up, design, and code your own custom app.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/how-to-make-an-ios-app--ud607\" target=\"_blank\">How to Make an iOS App</a>",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ios-developer-nanodegree--nd003?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh5.ggpht.com/RssNhhuFLl8FNeRwpNOSsK5ron6RNdi459PtAT5QFQiqQWqwsICsy9bcq043-3eqL7P7nngnkFnEt0CuiTo=s0#w=1170&h=422",
      "short_summary": "Master writing in Swift as you build five portfolio-worthy iOS apps to demonstrate your expertise as an iOS Developer.",
      "slug": "ios-developer-nanodegree--nd003",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Being an iOS Developer is a remarkable occupation. Creating new apps for the iPhone and iPad opens up worlds of opportunity, and allows you to leverage your creativity to connect users around the world in innovative, interesting, fun, and sometimes even world-changing ways. There is a reason why iOS developers are so in-demand, and why it?s such an enviable career. We?ve designed this Nanodegree program to teach you the skills required to become an entry-level iOS Developer.\n\nOver the course of your iOS Developer Nanodegree program you?ll build <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3101108604/m-3805928538\" target=\"_blank\">five portfolio-worthy iOS apps</a> that demonstrate your expertise as an iOS Developer. You?ll write these apps in Swift, Apple?s custom programming language designed specifically for building iOS and OS X apps. You?ll receive community and mentor support throughout, as well as benefit from the rigor and rapidity of our peerless code review system. Finally, you?ll receive career guidance as we review your resume, audit your online presence, provide you interview training, and more. You?ll even take part in a new program facilitating job placement.\n\nExcited? Ready to begin? Great! We just need you to take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3098108743\" target=\"_blank\">Readiness Assessment</a> first, to ensure you're prepared for the curriculum level. (We require past programming experience.)",
      "expected_duration": 6
    }
  ]
}