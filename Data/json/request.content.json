[{"content":"## The Bullet Request Object\n\nBullet passes a `Bullet\\Request` object as the first argument to any callback\nor route hanlder that is matched. This object contains all the information\nabout the current request context, like request URI, method, POST variables,\nquery string variables, etc.\n\n{% geshi 'php' %}\n$app = new Bullet\\App();\n$app->path('test', function($request) use($app) {\n    $app->post(function($request) use($app) {\n        var_dump($request->post());\n    });\n}); {% endgeshi %}\n\n## Accessing Request Parameters\n\nThis section covers how to access variables passed in the HTTP request, and\nfrom which sources.\n\n### General Request Variables\n\nVariables given from **all sources**, in the following order: User-set params,\nGET, POST, COOKIE, SERVER, ENV.\n\n{% geshi 'php' %}\n$request->page;\n$request->get('page', 1); \/\/ Default fallback {% endgeshi %}\n\n### Query String Variables\n\nVariables given in the query string (`$_GET`).\n\n{% geshi 'php' %}\n$request->query(); \/\/ Array\n$request->query('page'); \/\/ Single value\n$request->query('page', 1); \/\/ Default fallback {% endgeshi %}\n\n### Post Variables\n\nVariables defined in an HTTP POST request (`$_POST`).\n\n{% geshi 'php' %}\n$request->post(); \/\/ Array\n$request->post('subject'); \/\/ Single value\n$request->post('subject', '[ No Subject ]'); \/\/ Default fallback {% endgeshi %}\n\n### Cookies\n\nVariables defined in an cookies (`$_COOKIE`).\n\n{% geshi 'php' %}\n$request->cookie(); \/\/ Array\n$request->cookie('hide_annoying_notifications'); \/\/ Single value\n$request->cookie('hide_annoying_notifications', 0); \/\/ Default {% endgeshi %}\n\n### Server\/PHP Variables\n\nVariables defined by the server and PHP (`$_SERVER`).\n\n{% geshi 'php' %}\n$request->server(); \/\/ Array\n$request->server('REQUEST_TIME'); \/\/ Single value\n$request->server('REQUEST_TIME', time()); \/\/ Value with default {% endgeshi %}\n\n### Environment Variables\n\nVariables defined by the environment (`$_ENV`).\n\n{% geshi 'php' %}\n$request->env(); \/\/ Array\n$request->env('ULTIMATE_ANSWER'); \/\/ Single value\n$request->env('ULTIMATE_ANSWER', 42); \/\/ Value with default {% endgeshi %}\n\n## User Set Variables\n\nAny values set on the request object will be stored separately in a special\n\"params\" array so that it does not override or replace the actual data from\nthe original HTTP request.\n\n### Setting\n\nSet a custom value by simply setting a new property on the `$response` object.\n\n{% geshi 'php' %}\n$request->user_id = 64; {% endgeshi %}\n\n### Getting\n\nGet your custom property by either accessing the property directly, or via the\n`param` method, just like the other getter methods for request data.\n\n{% geshi 'php' %}\n$request->param(); \/\/ Array\n$request->user_id; \/\/ Single value (checks user params first)\n$request->param('user_id'); \/\/ Single value via method\n$request->param('user_id', 0); \/\/ Value with default {% endgeshi %}\n\n## Processing JSON Payloads\n\nIf you do a POST or PUT request with a JSON body instead of a form url-encoded\nbody, Bullet will automatically run `json_decode` on the request body, and set\nthe top-level variables to the `$request` object. The data can then be directly\naccessed with `$request->foo`, etc.\n\nGiven the JSON request body:\n\n{% geshi 'json' %}\n{\n  \"foo\": \"bar\",\n  \"bar\": \"baz\",\n  \"answer\": 42,\n  \"user\": {\n    \"id\": 32,\n    \"name\" Testy A. McTester\"\n  }\n} {% endgeshi %}\n\nThe data would be available to you from the request object:\n\n * `$request->foo` == `bar`\n * `$request->answer` == `42`\n * `$request->get('user.name')` == `Testy A. McTester`\n\nIf you need to parse the JSON a different way or if you need the raw JSON\nitself, use `$request->raw()`. This will contain the raw, unfiltered and\nunparsed request body.\n\n## Raw Request Body\n\nThe raw, unfiltered request body can be accessed directly if you need to parse\nit a custom way or handle it differently than Bullet does.\n\n    $request->raw();\n\n## HTTP Request Data\n\nConvenience methods to return information about the current HTTP request.\n\n * `$request->uri()` - REQUEST_URI from $_SERVER\n * `$request->url()` - Request URL that Bullet recognizes and uses\n * `$request->format()` - Request format (html, json, xml, etc.)\n * `$request->method()` - Request method (get, post, put, etc.)\n * `$request->scheme()` - Scheme (http, https, cli)\n * `$request->subdomain()` - Subdomain (domain part until first dot)\n * `$request->host()` - HTTP_HOST\n * `$request->port()` - Port (usually 80, or 443 for SSL)\n * `$request->ip()` - User's IP address\n\n## Deterministic Helpers\n\nHelper methods to determine what type of request was made.\n\n * `$request->isGet()` - GET request\n * `$request->isPost()` - POST request\n * `$request->isPut()` - PUT request\n * `$request->isDelete()` - DELETE request\n * `$request->isPatch()` - PATCH request\n * `$request->isHead()` - HEAD request\n * `$request->isOptions()` - OPTIONS request\n * `$request->isSecure()` - Secure HTTPS request\n * `$request->isAjax()` - XMLHttpRequest (from jQuery, Prototype, etc.)\n * `$request->isMobile()` - From mobile phone\/device\n * `$request->isBot()` - Crawler bot (Google, Yahoo, MSN, etc.)\n * `$request->isCli()` - Command-Line Request\n * `$request->isFlash()` - From Flash\/Shockwave\n\n","format":null}]