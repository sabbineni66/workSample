{
  "courses": [
    {
      "instructors": [
        {
          "bio": "Cay grew up in Northern Germany and attended the Christian-Albrechts-Universit?t in Kiel, a harbor town on the Baltic sea. He received a M.S. in computer science from Syracuse University, and a Ph.D. in mathematics from the University of Michigan in Ann Arbor. For four years, he was VP and CTO of an Internet startup that went from 3 people in a tiny office to a public company. He now teaches computer science at San Jose State University. In his copious spare time, he writes books and articles on programming languages and computer science education.\n\nPlease note that the Coaching, project feedback, and Verified Certificate are provided by and through Udacity. These services are specifically not provided by or affiliated with Cay Horstmann, San Jose State University, or any publisher of Dr. Horstmann's other textbooks.",
          "image": "https://lh5.ggpht.com/b-pMaSLEZOPel9P2s4AIoALSjk5NqFZXXltNtCVC7LYcptKvUkFnL8p7uEKqSmJVTkTYe5Ibq6xnnX_1dmc=s0#w=270&h=270",
          "name": "Cay Horstmann"
        }
      ],
      "subtitle": "Building Programs with Classes & Objects",
      "key": "cs046",
      "image": "https://lh4.ggpht.com/9ytiUdz0QYHwuMJFTXcNXZn4FctGW6Zszm7Aj5s7mXHHXsapIKYPL08vPWeghAjF2QmuhPiYCU2Q3kNeW7w=s0#w=1725&h=1060",
      "expected_learning": "Java is one of the most popular programming languages used by software developers today. It is the core language used in developing Android apps, and is also commonly used in back-end web development. If you?re new to programming and want to enter either of these fields, this course is a great place to get started.\n\nEven if you don?t have a career trajectory in mind, Java programming is a great option for first-time coders due to its popularity and ease of use. This course will provide you with a solid foundation in computer science and Object Oriented Programming concepts, as well as set you on the path for success as a software engineer.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=Wsp5Rrenoq4"
      },
      "title": "Intro to Java Programming",
      "related_degree_keys": [

      ],
      "required_knowledge": "No prior programming experience and knowledge is assumed or needed. Beginners welcome!",
      "syllabus": "### Lesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming Environment\n\n### Lesson 2: Introduction to Classes and Objects\n\n### Lesson 3: Graphics\n\n### Lesson 4: Fundamental Data Types\n\n### Lesson 5: Decisions\n\n### Lesson 6: Iterations\n\n### Lesson 7: Arrays, ArrayLists and Simple Array Algorithms\n\n### Lesson 8: Methods (Parameter Passing, Instance vs. Static Methods)\n\n### Lesson 9: Inheritance",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-java-programming--cs046?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/y2vNv1jlkBGooQdU5iP8AbAnlF17d1ur3etXFuWN5xhkLC_MIT-NtjAHBXMf3pg1Oz6voFNjqZWa1QQ6sd3K=s0#w=250&h=60",
          "name": "San Jose State University"
        }
      ],
      "tracks": [
        "Software Engineering",
        "Android"
      ],
      "banner_image": "https://lh3.ggpht.com/AdAALPYhCsWuIvDl0ZY6zIW23B58wqCiZYuQZPVIAeR86ylThoImtG_DRuk2gvUfMkaRS3sfTzn21wnAmHM=s0#w=4680&h=968",
      "short_summary": "Learn essential computer science and object-oriented programming concepts in this introductory Java course.",
      "slug": "intro-to-java-programming--cs046",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Karl is a Course Developer at Udacity. Before joining Udacity, Karl was a Site Reliability Engineer (SRE) at Google for eight years, building automation and monitoring to keep the world's busiest web services online. Outside of work, his interests include gardening, cooking, board games, and messing around with new programming languages. No whiteboard is safe from his doodles.",
          "image": "https://lh3.googleusercontent.com/ZQslAKxRgSyJgcN7RIxhJJFhexPZlZbX8hM2OGbqz9bvyzfdSQaHvHVwa4O90SdUxGfOtk7AsEb7uBR6QOs=s0#w=600&h=600",
          "name": "Karl Krueger"
        }
      ],
      "subtitle": "SQL, DB-API, and More!",
      "key": "ud197",
      "image": "https://lh4.ggpht.com/H9zRncxCIalNMrZLqYqGNikKXGPe7U_f6tS-v1VeHo12Zt8QqpTDqxI1FMsJSLYXWNpz1BhZXTgeQZRw_3s=s0#w=1758&h=1080",
      "expected_learning": "If you look under the hood of a lot of major web sites ? from Wikipedia to Reddit ? you'll find a relational database somewhere.\n\nDatabase systems such as PostgreSQL and MySQL have been part of the web developer's toolkit for many years, and remain some of the most powerful tools available for storing and manipulating structured data.\n\nIf you're planning to continue on in full-stack development, knowing about databases is essential background. Even though many toolkits hide the details of the database from your application code, being able to interact with the database will serve you well in designing, debugging, and maintaining your applications.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to Relational Databases",
      "related_degree_keys": [

      ],
      "required_knowledge": "**You can read and write basic code in Python.** This course uses programming exercises in Python. If you haven't worked with Python before, check out our course <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Foundations with Python</a>.\n\nIf you can understand this code (maybe with the help of the <a href=\"https://docs.python.org/2/library/random.html#random.choice\" target=\"_blank\">**random** module documentation</a>), you know enough Python for this course:\n\n<pre>\nimport random\n\ndef ChooseTwice(items):\n    a = random.choice(items)\n    b = random.choice(items)\n    return a, b\n\nnames = [\"Alice\", \"Bob\", \"Charlie\", \"Debra\"]\n(one, two) = ChooseTwice(names)\nif one == two:\n    print \"%s is happy!\" % one\nelse:\n    print \"%s likes %s!\" % (one, two)\n</pre>\n\n**You can use a command-line interface (terminal).** Some of the exercises in this course involve using a Unix-style command-line interface to enter commands, run Python programs, and navigate directories.\n\nIf you have taken our course on <a href=\"/course/ud775\" target=\"_blank\">Git and Github</a>, the level of command-line use in this course is similar.\n\n**You don't need to be a Web programmer.** This course does include a small Web application and some HTML and JavaScript in examples, but you will not need to make changes in these languages.\n\n**You don't need any previous database experience.** This course is an entry-level introduction to relational databases.\n\n**You need a programming text editor** (such as <a href=\"http://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a>) installed on your computer. You should be able to use it to open and edit files of Python code.",
      "syllabus": "### Lesson 1: Data and Tables\nIn this lesson, you'll learn about how relational databases let you structure data into tables. You'll learn about the importance of unique keys and relationships between tables.\n\n### Lesson 2: <s>Elephants</s> Elements of SQL\nIn this lesson, you'll begin learning SQL, the Structured Query Language used by most relational databases. You'll learn about the **select** and **insert** statements, the basic operations for getting data out of a database and putting data into a database. You'll learn about the operators and syntax available to get the database to scan and join tables for you.\n\n### Lesson 3: Python DB-API\nIn this lesson, you'll learn how to access a relational database from Python code. You'll use a virtual machine (VM) running on your own computer to run a Python web application, and adapt that application to use a database backend. Then you'll learn about some of the most common security pitfalls of database-backed applications, including the famous <a href=\"http://xkcd.com/327/\" target=\"_blank\">Bobby Tables</a>. This lesson also covers the SQL **update** and **delete** statements.\n\n### Lesson 4: Deeper Into SQL\nIn this lesson, you'll learn how to design and create new databases. You'll learn about normalized design, which makes it easier to write effective code using a database. You'll also learn how to use the SQL **join** operators to rapidly connect data from different tables.\n\n### Lesson 5: Final Project\nIn this project, you'll use your Python and SQL knowledge to build a database-backed Python module to run a game tournament. You'll design the database schema and write code to implement an API for the project.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-relational-databases--ud197?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.ggpht.com/_IU6K-6RwzuS59MFXIFRpiPFUPED8t-bZQbB9fY9BqXEeVMf1giijZISSMbXMossadcebHkJViOCoGaAHw=s0#w=4680&h=968",
      "short_summary": "Relational databases are a powerful tool used throughout the industry. Learn the basics of SQL and how to connect your Python code to a relational database.",
      "slug": "intro-to-relational-databases--ud197",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "This course is a quick, fun introduction to using a relational database from your code, using examples in Python. You'll learn the basics of SQL (the Structured Query Language) and database design, as well as the Python API for connecting Python code to a database. You'll also learn a bit about protecting your database-backed web apps from common security problems.\n\nAfter taking this course, you'll be able to write code using a database as a backend to store application data reliably and safely.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Lorenzo has had a passion for education since his first experience teaching computer science at a summer camp during college.  He has lived in Boston, Boise, Bethlehem, Jerusalem and Mexico City before making California home. Lorenzo enjoys traveling, cooking, and taking on do-it-yourself projects.  He holds a degree in Mathematics with Computer Science from the Massachusetts Institute of Technology with a concentration in Middle Eastern Studies.",
          "image": "https://lh5.ggpht.com/v8pv_UaM7EjTmnMaH6IdYkgKtmeAjokPxlX8A5QxzHbUFZExS79sqMEaUH_R-7yGAo_f9LJFXu78H3sM_g=s0#w=2106&h=2107",
          "name": "Lorenzo Brown"
        }
      ],
      "subtitle": "Build a data-driven web app with Python",
      "key": "ud088",
      "image": "https://lh3.ggpht.com/GKNi4exuLn_ER_qN9SIPx4bFpjBhVBGeSP1aTul1hh_Ge_9oRREpLimJyphdkJqc8sgwRo-GQ0vgSO3KcnY=s0#w=1745&h=1073",
      "expected_learning": "Interacting with a persistent datastore is what transforms static web pages into powerful and effective web applications. Giving users the ability to create, read, update and delete data is the backbone of the most popular services on the Internet today. But, you must do so safely and securely - the smallest mistake could bring your application down or leak your user?s data.\n\nIn this course, you?ll discover how all of the major components of web applications work and best practices in developing secure, data-driven web applications.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Full Stack Foundations",
      "related_degree_keys": [

      ],
      "required_knowledge": "You should be comfortable with Python, including Object-Oriented Programming. If you?d like to brush up on your Python, try the first three lessons of our <a href=\"/course/cs101\" target=\"_blank\">Intro to Computer Science</a> course. For Object-Oriented Programming in Python, see <a href=\"/course/ud036\" target=\"_blank\">Programming Foundations with Python</a>.\n\nYou should also have a firm understanding of SQL and working with a relational database, particularly PostgreSQL. Our <a href=\"/course/ud197\" target=\"_blank\">Intro to Relational Databases</a> course can get you started if you feel you?re not yet prepared.\n\nFinally, you should be able to read and write HTML and CSS without any guidance. If you need a refresher on HTML and CSS, start with our <a href=\"/course/ud304\" target=\"_blank\">Intro to HTML and CSS</a> course.\n\nTo complete the final project for this course, it is ***critical*** you meet these prerequisites as you are given no assets to begin with and will truly build a complete web application from scratch.",
      "syllabus": "<h3>Lesson 1 - Working with the CRUD</h3> \nIn the first lesson, you will learn about CRUD; Create, Read, Update, and Delete. You will learn why this acronym is important in web development and implement CRUD operations on a database. You will also learn to use an ORM (Object-Relational Mapping) as an alternative to SQL.\n<h3>Lesson 2 - Making a Web Server</h3>\n<p>In the second lesson, you will build a web server from scratch using Python and some of the pre-installed libraries it includes. You will learn what GET and POST requests are and how we use them to retrieve and modify information on a web site. We will then use the concepts learned in Lesson 1 to add CRUD functionality to our website.\n<h3>Lesson 3 - Developing with Frameworks</h3>\nIn the third lesson, we will discuss web frameworks like Django and Ruby on Rails. You will see how web frameworks simplify the development process and allow us to create web applications faster. We will use the Flask web framework to develop our own web application. We will also discuss API's (Application Programming Interfaces) and add JSON (JavaScript Object Notation) endpoints to our application to allow data to be sent in a format alternative to HTML. \n<h3>Lesson 4 - Iterative Development</h3>\nIn the last lesson, you will build an entire web application on your own. You will learn about the iterative development process and how developing iteratively allows you to have a working prototype throughout all stages of the development process.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/full-stack-foundations--ud088?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/M--VM7OklM7vz02PaU0qwydtnvKq-mk3eRflON1OxRni5a9eUyWVa_tX5Jlrm51g4Yjq-xVoBUSV9Tl6cIHT=s0#w=130&h=60",
          "name": "Amazon Web Services"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.ggpht.com/l08Qgk6U2BQd-YaFrVnKFguPXoDm0Ior3FTowmcqMNuvDCubLyQ7jhwRDvqew2zMX0zg_Z0rlCLDK-wBA3k=s0#w=4680&h=968",
      "short_summary": "Learn the fundamentals of back-end web development by creating your own web application from the ground up using the iterative development process.",
      "slug": "full-stack-foundations--ud088",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "In this course you will learn the fundamentals of back-end web development! You will create your own web application that queries a database for items on restaurant menus and then dynamically generates complete menus in the form of web pages and API endpoints.\n\nYou?ll start by learning how to interact with a database from a web application using an Object-Relational Mapping (ORM) layer. From there, you?ll learn how GET and POST requests translate to CRUD operations. You?ll then explore the Flask framework and the various ways in which it can speed up the development of your applications. Finally, you?ll develop your very own web application from the ground up using the iterative development process.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Lorenzo has had a passion for education since his first experience teaching computer science at a summer camp during college.  He has lived in Boston, Boise, Bethlehem, Jerusalem and Mexico City before making California home. Lorenzo enjoys traveling, cooking, and taking on do-it-yourself projects.  He holds a degree in Mathematics with Computer Science from the Massachusetts Institute of Technology with a concentration in Middle Eastern Studies.",
          "image": "https://lh5.ggpht.com/v8pv_UaM7EjTmnMaH6IdYkgKtmeAjokPxlX8A5QxzHbUFZExS79sqMEaUH_R-7yGAo_f9LJFXu78H3sM_g=s0#w=2106&h=2107",
          "name": "Lorenzo Brown"
        }
      ],
      "subtitle": "Implementing Web Security with OAuth 2.0",
      "key": "ud330",
      "image": "https://lh3.googleusercontent.com/RqJla1FbVoOuOFO78K1eKBiAeSa1iTsmHqZ1MQFB43xY2DwTCxZd2QFOo73YxOHeDJ-CPbIm-H-NbRPNSnU=s0#w=1758&h=1080",
      "expected_learning": "OAuth 2.0 is a popular framework that allows users to login to your web application by using  third party sign ins, from providers they've already created and trust, with the click of a button. And because passwords and sensitive data are never sent, your web application does not have to deal with the complexities of secure password storage and security breaches. Your users can then control the level of access your application has to their data, and change or revoke this access at any point in time.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Authentication & Authorization: OAuth",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course was built to expand upon the concepts introduced in <a href=\"https://www.udacity.com/course/ud088\" target=\"_blank\">Full Stack Foundations</a>, specifically: \n\n* performing CRUD operations\n* making use of templates\n* developing with the Flask framework\n\nAdditionally, HTML, JavaScript, AJAX are heavily used in this course.  A basic understanding of these technologies is needed to get the most out of these lectures.\n\nIf you'd like to refresh your HTML knowledge start with our <a href=\"https://www.udacity.com/course/ud304\" target=\"_blank\">Intro to HTML and CSS</a> course. You can check out the <a href=\"https://www.udacity.com/course/ud804\" target=\"_blank\">JavaScript Basics</a> and <a href=\"https://www.udacity.com/course/ud110\" target=\"_blank\">Intro to AJAX</a> courses to brush up on these topics as well.",
      "syllabus": "### Lesson 1 - Authentication vs. Authorization\nLearn the difference between the concepts of authentication and authorization and address some major security concerns that developers must protect against when developing a web application.  You will learn how OAuth 2.0 makes implementing security easier for developers and users alike by allowing your users to sign in to your applications while keeping all of the security on well-known and trusted OAuth providers. Finally, you will see OAuth 2.0 in action as you make API requests using Google's OAuth 2.0 Playground.\n\n### Lesson 2 - Creating a Google+ Sign-In\nLearn about the different types of security flows your application can implement. You will see how security can be handled by your server, your user's browser, or both depending on the type of security your application needs.  You will then add a Google+ Sign-In to an existing web application and implement a hybridized client/server flow.\n\n\n### Lesson 3 - Local Permission Systems\nAdd python code to create server-side rules that will constitute a permission system. This system will limit access of the database for each logged in user based on how the developer designs this code. You will add a User model model to your database to store the credentials, such as username, email, and profile picture, collected from the OAuth provider's API.\n\n###Lesson 4 - Adding Facebook & Other Providers\nLearn to implement multiple OAuth providers on your web application. You will add Facebook Login as an alternative sign in option for your users and understand how to use OAuth provider documentation to add as many providers as you see fit for your application.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/authentication-authorization-oauth--ud330?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.googleusercontent.com/Co20vEpuixh-FEdRQla_LpDf7SMIuAl5jlb8H6Yz-cRenMgRkTcN4vxUEpgk7vAeplFOu5_VNwwl0BmGep1O=s0#w=4680&h=968",
      "short_summary": "Learn to implement the OAuth 2.0 framework to allow users to securely and easily login to your web applications.",
      "slug": "authentication-authorization-oauth--ud330",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "As a Python programmer, leveraging Flask allows you to quickly and easily build your own web applications. But before you share your apps on the Internet you should protect your users' data, ensuring information stored on your site is safe from unwanted manipulation. You could implement web security and permissions on your own, but relying on trusted providers is a faster, safer, and easier way to allow users to login to your application - without having to create and maintain another account, profile, and password. \n\nIn this course, you will learn to implement the OAuth 2.0 framework to allow users to securely login to your web applications. You'll be provided a  <a href=\"http://udacity-oauth.herokuapp.com\" target=\"_blank\">restaurant menu application</a> created in Flask. By the end of this course, you will write the necessary code to implement Google+ Sign-In and Facebook Login in options so users can create restaurant menus that are viewable by everyone but only modifiable by the original creator.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Pete is a developer advocate at Google and works to make the lives of web developers easier.  Working on projects like <a href=\"https://developers.google.com/web/fundamentals/\" target=\"_blank\">Web Fundamentals</a> and Google web developer videos, he's focused on ensuring that developers have the tools and skills they need to build great responsive sites and apps with awesome user experiences.",
          "image": "https://lh4.ggpht.com/tZa18z5a2qkt1RvpKTfd6ljbEgaMF6339Bfl8xTlt6ccQbyCuPVc6JBYMnUQEIn28r37WctRp7U_jQALRIg=s0#w=595&h=595",
          "name": "Pete LePage"
        },
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "Great Experiences on Any Device",
      "key": "ud893",
      "image": "https://lh6.ggpht.com/nKVxhzkzJcyDvw2QxIO1nH55uk5Y6e34XNGnnRUWS3No2wRZ8fyBfYzfILhJZslqnbvt6yHpbNlnor6S4vA=s0#w=2080&h=1279",
      "expected_learning": "The way people browse the web is changing quickly - fewer and fewer users access the web at a desk in front of a large monitor with a keyboard and mouse. The web is increasingly being enjoyed on phones, tablets, wearables, TVs and everything in between. By designing a site to be responsive, it will look good and work well no matter what device your users have in front of them.\n\n\nThroughout this course, you'll work through a project creating a home town website that works well on phones, tablets and desktop displays.",
      "featured": false,
      "project_name": "Hometown Site",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=7DJLa4owtIU"
      },
      "title": "Responsive Web Design Fundamentals",
      "related_degree_keys": [

      ],
      "required_knowledge": "You should be comfortable reading and writing HTML and CSS. You should also be able to inspect and modify websites using browser developer tools (we use <a href=\"http://www.google.com/chrome/\" target=\"_blank\">Google Chrome</a>, but you should be able to accomplish all the tasks in this course with any browser's developer tools).\n\n\nIf you are unfamiliar with HTML and CSS, or if feel like you need to brush up on them, start with our <a href=\"https://www.udacity.com/ud304\" target=\"_blank\">Intro to HTML and CSS</a>.\n\n\nYou will not need to write JavaScript for this course.",
      "syllabus": "### Overview\nThis course consists of 5 lessons. The first one is an overview of responsive design and introduces the way you?ll need to shift your thinking as you go from desktop first design, to responsive design.  Lessons 2, 3, 4 and 5 will cover the important theoretical concepts of responsive design, and include plenty of hands-on exercises implementing what you?ve learned.  \n\n### Lesson 1 - Why Responsive?\nWhat is responsive web design and why is it important? What kinds of devices should we be targeting with our design? How can we best leverage the different capabilities of each device to provide great experiences to users? You?ll also make sure that your development environment is ready to go. \n\n<strong>Topics covered:</strong>\n\n* What is responsive design?\n* Why does responsive design work for any device?\n* Remote debugging and emulation in the browser\n\n### Lesson 2 - Starting Small\nThe best way to get started is to start small and build up. In this lesson, we?ll cover the key components that make a site great on a small screen, including setting the viewport, adding content and sizing the content to the viewport.  You?ll start the home town site project, by making sure that it looks good on a small screen.  \n\n<strong>Topics covered:</strong>\n\n* Why start small and build up?\n* What is the viewport?\n* Sizing the content to the viewport\n  * avoiding static sized items\n* Touch targets, and why they should be large\n\n### Lesson 3 - Building Up\nOnce you?ve got a page optimized for small screens, it?s time to start thinking about how they?ll look on larger screens.  Learn how to use CSS media queries to add breakpoints that change the layout depending on the screen size or other device characteristics.\n\n<strong>Topics covered:</strong>\n\n* CSS media queries\n* What is a breakpoint, and how to choose one\n* Using the CSS flexbox to modify layout\n\n### Lesson 4 - Common Responsive Patterns\nNow that you?ve got the basics of responsive design down, you?ll learn about and practice some of the common layout design patterns used across sites. You'll also iterate on the home town site project, creating breakpoints for tablet and desktop layouts using the patterns from this lesson.\n\n<strong>Topics covered:</strong>\n\n* Mostly fluid pattern\n* Column drop pattern\n* Layout shifter pattern\n* Off canvas pattern\n\n### Lesson 5 - Optimizations\nLearn strategies for minor breakpoints used to adjust the margins or padding on an element, or increase the font size to make it feel more natural in the layout. You?ll also learn about strategies for dealing with tables and optimal text readability. At the end of the lesson, you'll iterate for the last time on the home town site, adding minor breakpoints to really make the experience stand out.\n\n<strong>Topics covered:</strong>\n\n* Minor break points\n* Optimizing text layout\n  * font size\n  * optimal line length\n* Responsive tables, and strategies for dealing with them",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/responsive-web-design-fundamentals--ud893?utm_medium=referral&utm_campaign=api",
      "project_description": "Build a responsive website that works well on any device.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh5.ggpht.com/J8GsTGwitRUPaZjR8bKP2H5Q3vGt3QOrlMTqeHwAXpYoLZFZuA7IedgQjV84wlYoWqX42M4Xb3SH3eyd_Ec=s0#w=4680&h=968",
      "short_summary": "Learn and practice strategies for developing websites that look great on every device! Made with Google's Pete LePage.",
      "slug": "responsive-web-design-fundamentals--ud893",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "In this course you'll learn the fundamentals of responsive web design with Google's Pete LePage! You'll create your own responsive web page that works well on any device - phone, tablet, desktop or anything in between.\n\nYou?ll start by exploring what makes a site responsive and how some common responsive design patterns work across different devices.  From there, you?ll learn how to create your own responsive layout using the viewport tag and CSS media queries.  As you proceed, you?ll experiment with major and minor breakpoints, and optimizing text for reading.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Sam Dutton is a Developer Advocate for Google. He also publishes the monthly media tech newsletter <a href=\"http://medianews.me\" target=\"_blank\">medianews.me</a> and maintains <a href=\"http://simpl.info\" target=\"_blank\">simpl.info</a>, which provides the simplest possible examples of HTML, CSS and JavaScript. Sam grew up in South Australia, went to university in Sydney, and has lived since 1986 in London. He has designed and coded lots of websites, including previous releases of <a href=\"http://itn.co.uk\" target=\"_blank\">itn.co.uk</a> and <a href=\"http://deccaclassics.com\" target=\"_blank\">deccaclassics.com</a>.",
          "image": "https://lh6.ggpht.com/obXmjakftWXagA-D9mMd9E4kvSfyh6SaZJQFEy5OUBMHUkLHuu7Jj19OYoQPSYPS6tVkRTs1w1gJtTvBmgA=s0#w=1124&h=1124",
          "name": "Sam Dutton"
        },
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "Fewer Bytes, Faster Loads",
      "key": "ud882",
      "image": "https://lh3.googleusercontent.com/0-8SA41CiD_MZ-yRZ3YX04wYYtV4IjKuVvuRHl-LB2h_2pCDw2UEkLFjUf86GcHGJO1rhRFTBoq9bULT1Qc=s0#w=1724&h=1060",
      "expected_learning": "Quick load times and responsive content leads to higher conversions. There's much more to images on the web than `<img>`. Attributes like `srcset`, markup techniques using CSS, fonts, and inline images, and the brand new `<picture>` element are now available to help you create the best possible experience for your users. This course will help you ensure that you deliver the highest quality images with the fewest possible bytes.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=1NiVmiMNp-U"
      },
      "title": "Responsive Images",
      "related_degree_keys": [

      ],
      "required_knowledge": "You should be comfortable working with simple HTML, CSS and JavaScript. Experience with image creation and processing tools will also help.",
      "syllabus": "### Lesson 1 - Getting up and Running\n\nBefore you start working with responsive images, you need to start debugging on your mobile devices. This lesson will help you get started with Developer Tools and mobile debugging.\n\n###Lesson 2 - Units, Formats, Environments\n\nYou can't optimize what you can't measure. In this lesson, you will start with comparing different kinds of images on the web and getting familiar with different units you can use to scale them.\n\nYou will also get a chance to set up your development environment so that responsive images become a painless part of your workflow.\n\nAt the end of the lesson, you will start working on the responsive blog project, where you have a chance to apply responsive image principles in a real-world scenario!\n\n<strong>Topics covered:</strong>\n\n* Sizing Images\n* File Types\n* Automation Tools\n\n### Lesson 3 - Images with Markup\n\nNot all graphics need to be .JPGs or .PNGs. This lesson dives into using markup techniques like CSS and icon fonts to create responsive graphics. While markup techniques are awesome because they are natively responsive, they are often **extremely** lightweight, requiring a fraction of the bytes of traditional images!\n\nAt the end of the lesson, you will replace extraneous images with markup techniques and take advantage of font icons to add social media icons to the responsive blog project!\n\n<strong>Topics covered:</strong>\n\n* CSS Techniques\n* Inlining Images\n* Unicode\n* Icon fonts\n\n### Lesson 4 - Full Responsiveness\n\nHere comes the full monty! In this lesson, you will make your images fully responsive using the new `<picture>` element! Along the way, you will use the `srcset` and `sizes` attributes. You will also learn the importance of `alt` attributes for your visually impaired users.\n\nAt the end of this lesson, you will make the blog project fully responsive, as you implement `<picture>` to display beautiful images across a range of device widths and pixel ratios.\n\n<strong>Topics covered:</strong>\n\n* `<picture>`\n* `sizes` attribute\n* `srcset` attribute\n* `alt` attributes",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/responsive-images--ud882?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh6.ggpht.com/XXakJTthGX4SGDZq3hccjzxn2tSASDPg0zOynxPS2FmR837Ia-29I0F0-VOel9WWO0jUfcMao-DY8P0wtfpM=s0#w=4680&h=968",
      "short_summary": "Go beyond image tags! Learn how to make images a part of your responsive design workflow.",
      "slug": "responsive-images--ud882",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "Did you know that images account for more than **60%** of the bytes on average needed to load a web page?\n\nIn this course you will learn how to work with images on the modern web, so that your images look great and load quickly on any device.\n\nAlong the way, you will pick up a range of skills and techniques to smoothly integrate responsive images into your development workflow. By the end of the course, you will be developing with images that adapt and respond to different viewport sizes and usage scenarios.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Paul works on the Google Chrome team as a Developer Advocate. He spends his days profiling runtime performance issues, and helping developers to build faster sites and apps. Do not be fooled by his extreme baldness; it's a solar panel for his cunning and guile.",
          "image": "https://lh3.googleusercontent.com/UAlSY3xRoSKV8_-pLnTfd7xA9OdCp1loW0TNTb1rFk8_F3bP2DMln48JCd0uTzqThAGyPXrEo3BZZLDTgg=s0#w=256&h=256",
          "name": "Paul Lewis"
        },
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "Building 60 FPS Web Apps",
      "key": "ud860",
      "image": "https://lh3.googleusercontent.com/TCIotpqYq6buQavNxTkzCKsZyEe2oGA-7T3Zuj9WZ-grpwW_CYZanAqX9fa95fToe0soV7LzfrItKPtoBg=s0#w=2127&h=1307",
      "expected_learning": "Demystifying the browser's rendering pipeline will make it easy for you to build high performance web apps. By following a few simple principles, you'll be capable of drastically reducing the browser's workload and time needed to render each frame.\n\nYou'll start by getting introduce to the individual steps of the rendering pipeline, beginning with parsing HTML and ending with painting pixels on the screen. Then you'll quickly dive into tooling with ample opportunities to practice profiling and debugging apps with Chrome Developer Tools.\n\nThe final project uses the <a href=\"https://github.com/HackerNews/API\" target=\"_blank\">Hacker News API</a> and gives you an opportunity to show off everything you've learned as you turn an awful experience into a high performance web app!",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=BdADrVUIN1U"
      },
      "title": "Browser Rendering Optimization",
      "related_degree_keys": [

      ],
      "required_knowledge": "* You're a web developer who has written apps using HTML, CSS and JavaScript.\n* You have used <a href=\"https://developer.chrome.com/devtools\" target=\"_blank\">Chrome DevTools</a>.\n* (Recommended) Background knowledge about the critical rendering path from <a href=\"https://www.udacity.com/course/ud884\" target=\"_blank\">Website Performance Optimization</a> will be helpful.",
      "syllabus": "###Project\n\n*The News Aggregator App* - Turn an unusable app into a high performance, 60 frame per second experience. You'll be given a news aggregator app that uses the <a href=\"https://github.com/HackerNews/API\" target=\"_blank\">Hacker News API</a> to display the day's top stories. The news aggregator has *lots* of performance issues. You'll demonstrate your understanding of performance by destroying all the jank and creating an experience that users will love.\n\n###Lesson 1 - The Critical Rendering Path\n\n* You'll play Jank Invaders to develop your eye for jank!\n* You'll learn how the browser turns HTML into pixels on the page\n* You'll learn how different CSS styles affect the rendering pipeline differently.\n\n###Lesson 2 - App Lifecycles\n\n* You'll learn how there are four distinct phases in an app's lifecycle: Response, Animation, Idle and Load (RAIL).\n* You'll learn how your frame budget changes depending on where the user is in RAIL.\n* You'll practice thinking through app workloads at different stages in RAIL.\n\n###Lesson 3 - Weapons of Jank Destruction\n\n* You'll learn how to make sense of the Timeline panel in Chrome DevTools.\n* You'll practice profiling a few different apps to find the source of jank.\n\n###Lesson 4 - JavaScript\n\n* You'll optimize JavaScript to hit 60fps during animations.\n* You'll move expensive JavaScript operations off the main thread and into Web Workers.\n* You'll debug a janky copy of a production quality app - <a href=\"https://qrsnapper.appspot.com/\" target=\"_blank\">the QR Snapper</a>.\n\n###Lesson 5 - Styles and Layout\n\n* You'll learn how accessing the wrong CSS properties at inopportune moments can create loads of extra work for the browser.\n* You'll debug multiple instances of one of the nastiest performance problems - Forced Synchronous Layout.\n\n###Lesson 6 - Compositing and Painting\n\n* You'll practice profiling layer and paint performance with the paint profiler tool in the DevTools Timeline.\n* You'll manage and optimize layers to reduce the number of steps the browser needs to take to render each frame.\n* You'll demonstrate everything you've learned about performance as you de-jankify the News Aggregator App!",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/browser-rendering-optimization--ud860?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.googleusercontent.com/w8un-82kDAB2d0li3dVYZHJOYSB8eXwJqyNj4epSaSz4pZTNe_axn4qnV8TnUqRwkpMxUsk0akss0ZuhUVQ=s0#w=4680&h=968",
      "short_summary": "This course will demystify the browser's rendering pipeline and make it easy for you to build high performance web apps.",
      "slug": "browser-rendering-optimization--ud860",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "<a href=\"https://twitter.com/hashtag/PERFMATTERS?src=hash\" target=\"_blank\">Performance matters</a> to users. Web developers need to build apps that react quickly and render smoothly.\n\nGoogle performance guru Paul Lewis is here to help you destroy <a href=\"http://jankfree.org/\" target=\"_blank\">jank</a> and create web apps that maintain 60 frames per second performance.\n\nYou'll leave this course with the tools you need to profile apps and identify the causes of jank. You'll explore the browser's rendering pipeline and uncover patterns that make it easy to build performant apps.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Magnus Hyttsten works as a Developer Advocate at Google. He is an uncompromising software technologist and product marketing fanatic who likes to work in fast-paced environments. Prior to joining Google, he worked for a company in the Telecommunications Industry that he co-founded and worked as CTO for since 2000. He enjoys the datacenter, statically-typed programming languages, evangelizing about technology, and doing things that have not been tried before. Right now, he is extremely passionate about connecting mobile devices with the Cloud.",
          "image": "https://lh3.ggpht.com/0ZA4ew0P_mOqjWMYIZVr2pcLnmDsYTXBXfkHDFmdot33SsUQH0iKqwrLCgIDPjIrgXUMYJZuAxeetB2SyfqS=s0#w=256&h=256",
          "name": "Magnus Hyttsten"
        },
        {
          "bio": "Karl is a Course Developer at Udacity. Before joining Udacity, Karl was a Site Reliability Engineer (SRE) at Google for eight years, building automation and monitoring to keep the world's busiest web services online. Outside of work, his interests include gardening, cooking, board games, and messing around with new programming languages. No whiteboard is safe from his doodles.",
          "image": "https://lh3.googleusercontent.com/ZQslAKxRgSyJgcN7RIxhJJFhexPZlZbX8hM2OGbqz9bvyzfdSQaHvHVwa4O90SdUxGfOtk7AsEb7uBR6QOs=s0#w=600&h=600",
          "name": "Karl Krueger"
        }
      ],
      "subtitle": "with Google App Engine",
      "key": "ud858",
      "image": "https://lh3.googleusercontent.com/9fwXP0SWubtZ2oZ79VBM2ElC5HQ-Q9_9Wql_LUr7ZD_qoNVM70uZCmyu0sXtqk_J-aC5kxcfgN7-XvoljA=s0#w=1753&h=1077",
      "expected_learning": "Cloud computing is one of the fastest growing fields right now. And no wonder - it provides an easy and affordable way to run your applications. However, the traditional way of hosting and scaling applications on Virtual Machines in the Cloud comes with a cost - even if the infrastructure is virtual, you still have to manage it - do load balancing, bring instances up and down, take care of patching your software and in general spend a lot of your time and resources on just the infrastructure. \n\nGoogle is one of the pioneers in the business of scaling, and now you can use their infrastructure, and let them do all the scaling work so that you can focus on the unique features your app provides.\n\nAre you a Java developer? If so, maybe you'd like to check out our <a href=\"https://www.udacity.com/course/developing-scalable-apps-in-java--ud859\" target=\"_blank\">Developing Scalable Apps with Java</a> course.\n\nProject\n-------------\nThere will be an overarching project throughout the course, starting from Lesson 2. You will develop an application for organizing conferences, similar to sites like meetup.com or eventbrite.com. We have provided the frontend of the app, and all your effort will go into making the backend.\n\nAnd because you will be using Cloud Endpoints, it?s really easy to hook up your backend with a native mobile app. We have created an Android app that uses the same backend as the web frontend. You will able to recompile it against your backend, if you so wish!\n\nAt the end of the course you will do a final project, where you will have to expand the functionality of the same app.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Developing Scalable Apps in Python",
      "related_degree_keys": [

      ],
      "required_knowledge": "You should be fairly comfortable programming in Python, preferably with some experience developing web applications and working with databases for at least a year. You will be developing the backend of a sample app, so you don?t have to worry about HTML or JavaScript.\n\nYou should have sufficient permissions to install new software on your computer, and comfortable configuring it, including setting up system variables.\n\nWe will be using Maven and Eclipse for this course, and we strongly suggest that you use them as well.",
      "syllabus": "###Overview\nThis course consists of 6 lessons. First one is an overview of cloud computing and the benefits of Platform as a Service. Lessons 2-5 will cover important theoretical concepts of Google App Engine and also plenty of hands-on exercises implementing what you have learned. Lesson 6 will be a short intro on an easy way to create native mobile apps that talk to your backend.\n\n###Lesson 1: Scalability Basics\nDo you know how and why server racks were invented years ago? Have you realized all of the problems that you have to solve if you will try to scale your app by yourself? Learn about a better way.\n\n###Lesson 2: Getting Started\nSet up your first App Engine project and learn how to define Cloud Endpoints. \n\nStart the course project app - Conference Central and add authentication and user profiles.\n\n###Lesson 3: Storing and Retrieving Data\nOne of the most important things you want to do in your app is storing data. In this lesson you will learn what is Google App Engine Datastore, how is it different from RDBMS and how you can use it in your applications.\n\nAdd the ability to store and retrieve user profiles and conferences to the course project app.\n\n###Lesson 4: Advanced Datastore Concepts\nLearn more about how Datastore works, including queries, filters, indexes and transactions. \n\nAdd different ways to query conferences.\n\n###Lesson 5: Advanced App Engine Topics\nThere are a lot of things you might want your application to do in background, without making the user wait, or even initiate the process. Learn about task queues and cron jobs and how you can use them to add advanced functionality to your app. You will also learn about Memcache, and get an overview of topics like Edge Caching, AppStats and other methods of optimizing your apps performance.\n\nAdd a push queue, cron job and a customized Memcache entry to your app.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/developing-scalable-apps-in-python--ud858?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.googleusercontent.com/JHrwe1FipXiPTLj_IDWnhIIAyIo0qpldEm2OQbgM_5qsH1cl_MQo1mFzrkkmqKRSpS5lwVPDeEVf568smnn5=s0#w=4680&h=968",
      "short_summary": "You will learn about challenges of building applications that can serve hundreds of thousands of users, and how you can prepare for them as a developer.",
      "slug": "developing-scalable-apps-in-python--ud858",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "You will learn about challenges of building applications that can serve hundreds of thousands of users, and how you can prepare for them as a developer. And more importantly - you will learn how to harness the power of **App Engine** - Platform as a Service, run by Google, so you can focus on your application's features, not on managing infrastructure that runs your app. Let Google run and scale the infrastructure and do what you do best - write code! \n\nHowever, to use App Engine effectively, you have to learn how it works, and this is exactly what this course will teach! You will also learn the best practices of using <a href=\"https://cloud.google.com/products/cloud-endpoints/\" target=\"_blank\">Cloud Endpoints</a> that allow you to easily create API services and make them accessible to iOS, Android and Javascript clients. They allow you to automatically generate client libraries to make wiring up the frontend easy. And there are some nifty built-in features, like denial-of-service protection and OAuth 2.0 support.",
      "expected_duration": 6
    },
    {
      "instructors": [
        {
          "bio": "After a long and wandering path through technical theatre, motion graphics, and audio engineering, Ben landed at Udacity working as a web developer and front-end course developer. He cohosts <a href=\"http://geekspeak.org\" target=\"_blank\">GeekSpeak</a>, a weekly radio show and podcast about science and technology. He also sings, and plays piano, clarinet, and guitar. When Ben is not teaching, developing, or doing radio, you can find him writing and recording music, wood-working, baking desserts, and traveling the world. He is usually smiling.",
          "image": "https://lh4.ggpht.com/2klGJS0WOyYss-OKYOzk6jaqdsS4kaxLxDIFrQwreTAPnAFIkNB6BT5o3S54XMLUswsAEWpwmUbNBNWE-Tc=s0#w=200&h=200",
          "name": "Ben Jaffe"
        }
      ],
      "subtitle": "Organizing Code in a Disorganized World",
      "key": "ud989",
      "image": "https://lh5.ggpht.com/sezqV_yZkcFmfZDOsKwakrr0w7i8ixmaX3rRdCwWelR7tWRIlgNkDmS7wEZ6hB-0Tvwt_3KFWIxw-7mfxd4=s0#w=1757&h=1080",
      "expected_learning": "Many developers dive right into projects without thinking of the organization or structure of the code they?re writing. It's easy to hack projects together, but the best developers spend the extra time to think about the organization of their application and adhere to sound organizational practices.\n\nIn order to write clean code that will get you your next job or promotion, you'll need to have a solid understanding of organizational techniques, and you'll need to implement those techniques in your projects. Software developers who write clean and organized code are surprisingly hard to find, so if you can master code organization you?ll be a step above the rest.",
      "featured": false,
      "project_name": "Neighborhood Map",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "JavaScript Design Patterns",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course is for intermediate web developers with some experience with JavaScript, and some prior experience with a JavaScript library, such as jQuery.\n\nStudents should also be proficient in HTML and CSS, and should have experience creating static pages.",
      "syllabus": "###Lesson 1: Changing Expectations\nWe'll first start by building a project the way you already know how: without an overarching organizational paradigm. Specifically, we'll discuss pain points and difficulties that are easy to run into when you don't use an organizational model. Then, we'll discuss a paradigm that will help us in the future, and we?ll see some examples of that paradigm in action.\n\n###Lesson 2: Refactoring\nWe'll spend some time discussing how our new paradigm applies to the project we worked on in Lesson 1. Then we'll rebuild the project with the new organizational paradigm.\n\n###Lesson 3: Using an Organizational Library\nWe'll explore how to use KnockoutJS, an organizational library, to organize our code and to reduce the amount of boilerplate code we write. Our resulting application will be well-organized, easy to understand, and extendable.\n\n###Lesson 4: Exploring Unfamiliar Code\nIn this final lesson, we'll spend some time talking about how to explore code that you didn't write, possibly even using a library or framework that you aren't familiar with. Exploration is one of the most important skills for a developer to foster. and this lesson will get you started on that journey.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/javascript-design-patterns--ud989?utm_medium=referral&utm_campaign=api",
      "project_description": "You will develop a single-page application featuring a map of your neighborhood or a neighborhood you would like to visit.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh4.ggpht.com/PxWWjHCqFK6wsIXVgIu4j82q44N6maGXu2TqfhaZ5p5DdP9VaTQl9IfvHGMgzQOieIjKVWvHTOCmxeT17A=s0#w=4680&h=968",
      "short_summary": "Learn the importance of code organization and how to implement it with either vanilla JavaScript or an organizational library or framework.",
      "slug": "javascript-design-patterns--ud989",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "This course covers methods for organizing your code, both conceptually and literally. You?ll learn the importance of separating concerns when writing JavaScript, gaining hands-on experience along the way. Separating concerns can be done with or without an organizational library or framework. We?ll learn how to separate concerns without one, and then we?ll explore an organizational library together. You?ll also learn strategies for exploring other libraries and frameworks on your own.\n\nBy the end of this course, you?ll understand (from experience) the importance of code organization, and how to implement it with either vanilla JavaScript or an organizational library or framework. Your applications will start looking clean and professional?not just to your users, but also to anyone who looks at the code driving your applications.",
      "expected_duration": 6
    },
    {
      "instructors": [

      ],
      "subtitle": "Write Organized JavaScript Applications",
      "key": "ud990",
      "image": "https://lh3.googleusercontent.com/F3-J__TwE1s_bHhRSgu0pwgM-vWgU5OA9FxbyS9690d4Nj4lOHJfaAq5zsHmYf7uthwSyF9fGUG_camRsOc=s0#w=1920&h=1080",
      "expected_learning": "There are two reasons this course will help you. First, having experience with a popular organizational library or framework will significantly boost your skill set in the eyes of future employers.\n\nSecond, this course requires you to read external resources and practice learning on your own. Researching and learning new technologies is a critical skill for all Front-End Web Developers. This course will help you put those skills into practice.\n\nThese resources will also:\n\n* provide a high-level view of Backbone, what it provides, and how to organize applications with it\n* demonstrate how to build an app, (chunk by chunk) from simple to more complicated\n* take you step-by-step through the creation of moderately complex sample apps",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Learn Backbone.js",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course is intended to build on the knowledge and programming concepts taught in <a href=\"https://www.udacity.com/course/javascript-design-patterns--ud989\" target=\"_blank\">Javascript Design Patterns</a>, is for web developers with JavaScript experience, and some prior experience with a JavaScript library, such as jQuery.\n\nStudents should also be proficient in HTML and CSS, and should have experience creating static pages.",
      "syllabus": "This course is composed of blog posts, articles, and documentation pages we've curated to get you started with Backbone.\n\n### Getting Started\nUsing this first resource you?ll get an overview of the Backbone framework and the various components that make it up.\n\n### Building a Simple Backbone App\nYou?ll follow a short tutorial to build a simple Backbone application that dynamically calculates a shopping cart total.\n\n### Hello Backbone\nThis resource will walk you through a number of Backbone examples that get progressively more difficult. Get these examples up and running within your own environment and then add functionality and experiment with them!\n\n### Diving Deeper with Backbone\nYou?ll read through a portion of Addy Osmani?s book, <a href=\"http://addyosmani.github.io/backbone-fundamentals/\" target=\"_blank\">Backbone Fundamentals</a>, to gain a deeper understanding of how Backbone helps you create highly organize web applications.\n\n### Building a Todo Application from Scratch\nYou?ll take everything you?ve learned thus far and put those skills into practice as you develop a todo list application.\n\n### Real-time Data with Firebase\nYou?ll learn how to use Firebase within a Backbone application, providing real-time, persistent, data storage.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/learn-backbonejs--ud990?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.googleusercontent.com/GTFguzWW1gtPV1Yg7F7ZGdWa3wp2baIueILxhxSETzrXXOMXyYCoSDD4oS6yQFRbo5cmrvoOxE1SJeJnyzU=s0#w=4680&h=968",
      "short_summary": "This is a collection of curated resources to teach you how to write well organized web applications using the Backbone framework.",
      "slug": "learn-backbonejs--ud990",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "This course is a collection of resources designed to introduce you to Backbone, a common organizational library for front-end web applications.\n\nBy the end of this course, you?ll know how to write well organized web applications using the Backbone framework. You?ll also make use of the Local Storage API or a service like Firebase to support persistent data storage across user sessions.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Michael is a self-taught full-stack web developer and open source advocate. Before joining Udacity, he spent over 10 years developing classified applications for some of the most demanding intelligence organizations in the world. He has an active Top Secret clearance and, unless you have one as well, that's all you're allowed to know. In his spare time he enjoys playing paintball, video games, and spending time with his 3 wonderful children.",
          "image": "https://lh5.ggpht.com/a4DmOafuOdZ45k42uu0JOPuQhmegEGAQugpTiX20IHVLPS7kxTUE3hpZVsjmAL1z-nwumQcY-6oT4b_hk8A=s0#w=2000&h=2000",
          "name": "Michael Wales"
        }
      ],
      "subtitle": "Developing Apps with Confidence",
      "key": "ud549",
      "image": "https://lh5.ggpht.com/vcyKpS2avvfz5qxyESkg23ul0R2U21iNgoIa76hADbha-IBnA_TEIZ5CPbvnblC2F6vRjiu76uDQ4lym2w=s0#w=2560&h=1440",
      "expected_learning": "As your applications become more complex and you continue adding new features, you need to verify your additions haven't introduced bugs to your existing functionality. Automated testing provides this functionality and allows you to focus on.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "JavaScript Testing",
      "related_degree_keys": [

      ],
      "required_knowledge": "You should be comfortable writing JavaScript and using its object-oriented programming features. If you need a refresher on these subjects, consider taking our <a href=\"https://www.udacity.com/course/ud804\" target=\"_blank\">JavaScript Basics</a> and <a href=\"https://www.udacity.com/course/ud015\" target=\"_blank\">Object-Oriented JavaScript</a> courses.",
      "syllabus": "### Overview\nThis course consists of 2 lessons. In the first lesson, you'll discover the importance of testing and reconsider its purpose and the value it provides. In the second lesson, you'll explore the <a href=\"http://jasmine.github.io/\" target=\"_blank\">Jasmine</a> testing framework write your own test suites while developing an address book application.\n\n### Lesson 1: Rethinking Testing\nFrom education to aerospace, tests provide invaluable feedback to those that analyze the results. In this lesson, you'll learn all about the importance of testing, how to identify the expectations a test is attempting to validate and how to write expectations in code.\n\n**Topics covered:**\n\n* What is a test?\n* Validating opinions\n* Identifying and defining expectations\n* Writing expectations in code\n\n### Lesson 2: Writing Test Suites\n\nJavaScript doesn't support testing natively, so you'll need a framework to provide the functionality you need. In this lesson, you'll get an introductions to the <a href=\"http://jasmine.github.io/\" target=\"_blank\">Jasmine</a> testing framework and use the red-green-refactor workflow to begin development on an address book application.\n\n**Topics covered:**\n\n* Introduction to Jasmine\n* Writing suites, specs and tests\n* The red-green-refactor workflow cycle\n* Testing asynchronous functionality",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/javascript-testing--ud549?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh6.ggpht.com/zv_rFtzcKCwgIe9ETRsWn9UUQ_7-9Kerni99O2OwmYuMNxoXYab6ddnx-jifhuH8lPqJx5ZA6C96mat6wxQ=s0#w=4680&h=968",
      "short_summary": "Learn how to iterate on your web applications with confidence using the red-green-refactor workflow cycle and automated testing frameworks.",
      "slug": "javascript-testing--ud549",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "In this course you'll learn how to write JavaScript applications with confidence, using the red-green-refactor workflow. You'll write comprehensive suites of tests that validate your application is functioning as intended at all times.\n\nYou'll start by exploring how other industries use a variety of tests and the value it provides. You'll then start writing your very own tests, using the Jasmine testing framework. Finally, you'll start developing your very own address book application using the red-green-refactor workflow and explore a variety of scenarios including testing asynchronous functions.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Michael is a self-taught full-stack web developer and open source advocate. Before joining Udacity, he spent over 10 years developing classified applications for some of the most demanding intelligence organizations in the world. He has an active Top Secret clearance and, unless you have one as well, that's all you're allowed to know. In his spare time he enjoys playing paintball, video games, and spending time with his 3 wonderful children.",
          "image": "https://lh5.ggpht.com/a4DmOafuOdZ45k42uu0JOPuQhmegEGAQugpTiX20IHVLPS7kxTUE3hpZVsjmAL1z-nwumQcY-6oT4b_hk8A=s0#w=2000&h=2000",
          "name": "Michael Wales"
        }
      ],
      "subtitle": "Your First Ubuntu Server",
      "key": "ud299",
      "image": "https://lh3.googleusercontent.com/C1226nashMhJjzL3Ils4ym5FjxCU6Gi7y4HsZd-CblfGfMOuInXNazEKHDUr4JAoS3w7YsN6Ju39jWwg9Q=s0#w=1920&h=1080",
      "expected_learning": "A basic understanding of linux systems administration is required to not only get your web application up and running for the world to see, but also to ensure it continues operating efficiently. In this course, you?ll explore a bare-bones linux system and how it differs from desktop environments you are currently familiar with. You?ll then address a number of security concerns full stack developers must contend with and, finally, serve one of your applications from your very own piece of the Internet.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Configuring Linux Web Servers",
      "related_degree_keys": [

      ],
      "required_knowledge": "You should be comfortable with your terminal and working within a shell, if you need a refresher take a look at our Intro to the Shell.\n\nTo actually get a web application up and running you should be familiar with the Python programming language and PostgreSQL. <a href=\"https://www.udacity.com/course/programming-foundations-with-python--ud036\" target=\"_blank\">Programming Foundations with Python</a> and <a href=\"https://www.udacity.com/course/intro-to-relational-databases--ud197\" target=\"_blank\">Intro to Relational Databases</a> can help you get up to speed if you feel you need some additional practice.",
      "syllabus": "## Overview\n\nThis course consists of 3 lessons which will take you from absolutely zero knowledge about the Linux operating system all the way to hosting your very own data-driven application that is publically accessible to everyone in the world!\n\n## Lesson 1 - Intro to Linux\n\nIn this lesson you will be introduced to the Linux operating system and the various available distributions. You will then setup your very own Linux virtual machine on your own computer and explore that system, learning how the filesystem is organized and identifying key files.\n\n## Lesson 2- Linux Security\n\nAs you unleash your new server onto the Internet you'll need to be a good citizen - and this means, **security**! In this lesson, you'll learn how to execute administrative tasks, update the software on your system, install new software, and manage users. You'll then learn how to implement even stronger authentication mechanisms, how to interpret Linux file permission and, finally, how to configure a firewall to keep your system secure.\n\n## Lesson 3 - Web Application Servers\n\nIn this lesson you'll transform your secure and safe barebones server into a fully functional web application server by installing and configuring the Apache HTTP Server and PostgreSQL database server. You'll then write a very basic Python WSGI application that can query a database and present that data upon a web request.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/configuring-linux-web-servers--ud299?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.googleusercontent.com/J07bIb5_qaxgxyF7qTU3v3EgDal_5ugqJN0CJ_DYd_8Ct6wdZ5B05nvclkC_S8qOgO0F0qk8hE-5MP4E2w=s0#w=4680&h=968",
      "short_summary": "Serve a data-driven web application as you become acquainted with, configure and finally secure a Ubuntu Linux web application server.",
      "slug": "configuring-linux-web-servers--ud299",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "In this course you'll learn the basic Linux fundamentals every web developer needs to know to share their web applications with the world! You'll get a basic Python WSGI application up and running within a Vagrant virtual machine that queries data from a PostgreSQL database.\n\nYou'll start by exploring various Linux distributions and learning the differences between a number of them. You'll then explore how the Linux operating system differs from other operating systems you may be more familiar with. With this base knowledge, you'll then move into Linux security - covering topics such as file permissions, user management, package management and configuring firewalls. Finally, you'll transform a safe and secure baseline server into a web application server by installing and configuring the Apache HTTP Server and PostgreSQL database server.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Steve Blank is a seasoned Silicon Valley entrepreneur. Translation: he has failed and--more often--succeeded, in a 21-year career building 8 Valley startups, including several with major IPO's. Along the way, he's learned an incredible amount, and has spent the last decade sharing what he's learned with entrepreneurs all over the world. Author of two famous books on entrepreneurship, <a href=\"http://www.amazon.com/The-Four-Steps-Epiphany-Successful/dp/0976470705/\" target=\"_blank\">The Four Steps to the Epiphany</a>, and <a href=\"http://www.amazon.com/gp/product/0984999302/ref=as_li_tf_tl?ie=UTF8&amp;tag=wwwsteveblank-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0984999302\" target=\"_blank\">The Startup Owner's Manual</a>. Steve teaches entrepreneurship at Udacity, Stanford, Berkeley, Columbia, and other major universities worldwide. He was named \"Master of Innovation\" by <a href=\"http://hbr.org/web/slideshows/the-masters-of-innovation/1-blank\" target=\"_blank\">Harvard Business Review</a> and is an advisor to many successful entrepreneurs. He is also an avid conservationist, contributing generously to preserve the California Coast.",
          "image": "https://lh6.ggpht.com/K3SEbPH9Bpwh2sN0022G6L65MkEUDc2ByJ13mzmgZSLRr6lnm3Y50FeIY-hZwBcykLkdvv822LWO54IMxo8=s0#w=166&h=166",
          "name": "Steve Blank"
        }
      ],
      "subtitle": "The Lean LaunchPad",
      "key": "ep245",
      "image": "https://lh6.ggpht.com/l0tJ09Lye8eNFttGQ7uvMGV-x0qxJk9xgs6e-MNRxnJeaCBxVqbYLIKmR13dk6hVdO8S5VYcmswfkBQR65s=s0#w=436&h=268",
      "expected_learning": "You will learn the business skills it takes to bring your idea from conception to market. These include:\n\n- Actively listening and engaging your customers to find out what exactly they want in your product and how you should deliver it to them\n\n- Gathering, evaluating and using customer feedback to make your product, marketing, and business model stronger\n\n- Engaging your customers through the three phases of the customer relationship management lifecycle: get, keep, and grow \n\n- Identifying key resources, partners, activities, and distribution channels required to deliver your product to your customer\n\n- Calculating your direct and indirect costs for delivering your product",
      "featured": false,
      "project_name": "Business Model Canvas",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=VZvgj6B2JZs"
      },
      "title": "How to Build a Startup",
      "related_degree_keys": [

      ],
      "required_knowledge": "This class involves no programming. The characteristics of a budding entrepreneur: passion, tenacity, and a willingness to work hard, are essential. \n\nWe also recommend you join the class with at least a rough idea of a business model for a startup you would like to work on throughout this class.",
      "syllabus": "### Lesson 1: What We Now Know\n\n- History of the Corporation\n- Startups Are Not Smaller Versions of Large Companies\n- Waterfall Development\n- Customer vs. Product Development\n- Entrepreneurial Education\n\n### Lessons 1.5A and 1.5B: Business Models and Customer Development\n\n- Value Proposition \n- Customer Segments\n- Revenue Streams\n- Key Resources\n- Customer Development Processes \n- Minimum Viable Product\n- Market Opportunity Analysis\n\n\n### Lesson 2: Value Proposition\n\n- Value Proposition and the Minimum Viable Product\n- Customer Archetype \n- MVP Physical && Web/Mobile\n- Common Mistakes With Value Proposition\n\n### Lesson 3: Customer Segments\n\n- Product Market Fit\n- Rank and Day in the Life\n- Multiple Customer Segments\n- Market Types Introduction: Existing, Resegmented, New, Clone \n- Consequences of Not Understanding a Market\n\n### Lesson 4: Channels\n\n- Distribution Channels Overview\n- Web Distribution \n- Physical Distribution\n- Direct Channel Fit\n- Indirect Channel Economics\n- OEM Channel Economics\n\n### Lesson 5: Customer Relationships\n\n- Paid Demand Creation\n- Earned Demand Creation\n- Get Physical\n- Viral Loop\n- Web Customer Acquisition Costs\n\n### Lesson 6: Revenue Models\n\n- How Do You Make Money\n- Revenue Streams and Price\n- Direct and Ancillary Models\n- Common Startup Mistakes\n- Market Types and Pricing\n- Single and Multiple Side Markets\n- Revenue First Companies\n- Market Size and Share\n\n### Lesson 7: Partners\n\n- Partner Definition\n- Partner Resources\n- Partner Types\n- Greatest Strategic Alliance\n- Joint Business Development\n\n### Lesson 8: Resources, Activities and Costs\n\n- Four Critical Resources\n- Financial Resources\n- Human Resources\n- Qualified Employees and Culture\n- Intellectual Property Overview",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/how-to-build-a-startup--ep245?utm_medium=referral&utm_campaign=api",
      "project_description": "Talk to customers, build a Business Model Canvas, prototype your product and pitch to coaches.",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Non-Tech"
      ],
      "banner_image": "https://lh5.ggpht.com/yBfepukFU1WHN7ThTcRDeF1mh5kCZztJXbMiKWDl-UswsK907gPuls-WTB4QDksQ2D_kLuLzHQ6flmH_1A=s0#w=4680&h=968",
      "short_summary": "Learn what it takes to build a successful startup using the Customer Development process, where entrepreneurs \"get out of the building\" to gather and iterate on feedback.",
      "slug": "how-to-build-a-startup--ep245",
      "starter": true,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. \n\nThe main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model.\n\nBuilding a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Gabrielle earned her Ph.D. in Population Biology from UC Davis. There in the lab, analyzing DNA sequences, she discovered the joys of programming.  Having taught science and math to undergraduate and high school students for four years, she was motivated to make apps for science education. She worked as an iOS Engineer for a year and a half before joining Udacity.",
          "image": "https://lh6.ggpht.com/yca_AadWGhu3hepu4RDVmXnkCDX95ZzYGlemDEeXeegUejcFluGaKCmopYh8pbckN1AZfIHHWtvcQymY5fU=s0#w=992&h=992",
          "name": "Gabrielle Miller-Messner"
        }
      ],
      "subtitle": "From Optionals to Closure Expressions",
      "key": "ud902",
      "image": "https://lh3.googleusercontent.com/Qkrte2_RNAPEAA9J4OMk2495NXDMrCKclo1uEX6cJN-txFzgQ1BvMT4pog5GjpTU9QNaNEYcNv08b9uuVw=s0#w=1500&h=922",
      "expected_learning": "- A quick and fun introduction to Swift basics. \n- Practice with Playground exercises\n- Thorough explanations of Swift's less-intuitive features like Optionals and Closure Expressions.",
      "featured": true,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Learn Swift Programming Syntax",
      "related_degree_keys": [

      ],
      "required_knowledge": "**This course assumes prior programming experience!** Specifically, you should be familiar with programming concepts like variables, if statements, and loops, as well as object-oriented concepts like methods and classes.\n\nYou will also need access to a Mac computer running OS X 10.10 or later.",
      "syllabus": "###Lesson 1: Swift Basics\nIn this lesson, you'll become familiar with Swift types and operators, and develop deftness in defining variables and constants. \n###Lesson 2: Optionals\nLearn about your new Swift BFF: Optionals! In this lesson, you'll declare explicitly and implicitly unwrapped optionals, and unwrap optionals using both optional binding and optional chaining.\n###Lesson 3: Collections\nIn this lesson, you'll learn about Dictionaries, Arrays, and Sets and perform basic operations including: append, count, insert, remove, update, find, and retrieve. \n###Lesson 4: Control Flow\nIn this lesson, you'll practice fast iteration with for-in loops by iterating through items in Arrays and Dictionaries. You'll also get experience with if-else statements and switch statements.  \n###Lesson 5: Functions\nIn this lesson, you'll define and call functions, correctly use local and external parameters, and identify parameter types and return types. \n###Lesson 6: Classes, Properties, and Methods\nIn this lesson, you'll practice building custom classes with their own properties and methods. \n###Lesson 7: Enums and Structs\nIn this lesson, you'll learn the difference between value types and references types and practice choosing when to use enums, structs, and classes. \n###Lesson 8: Protocols and Extensions\nIn this lesson, you'll learn how protocols and extensions can help keep your code DRY.  Given a series of code snippets, you'll fix compiler errors by conforming to and implementing the appropriate protocols.  \n###Lesson 9: Closure Expressions\nIn this lesson, you'll practice using Swift closures  with the functions, sorted() and filter(). You'll also learn shorthand to make your closure expressions super concise.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/learn-swift-programming-syntax--ud902?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh3.googleusercontent.com/wFaXM-aV4WG7Z99_fABRKnT3RMsRJcwlTrLHGElXUQm5BbXA7y3g4g-bR6FH9QoCAeOfQMHJeDsdn47AkQ=s0#w=4680&h=968",
      "short_summary": "This course focuses on the syntax of the Swift programming language. By the end of the course, you'll be able to apply Swift essentials to building iOS apps.",
      "slug": "learn-swift-programming-syntax--ud902",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "Swift is a language created by Apple specifically for iOS and OS X development. It?s fast, concise, and comes with tools  which make it easier than ever to visualize one's code. \n\nThis course focuses on the syntax of the Swift programming language. By the end of the course, students should be able to apply Swift essentials to building iOS apps and employ Swift's more unique elements, like optional types and switch statements, with confidence.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Gabrielle earned her Ph.D. in Population Biology from UC Davis. There in the lab, analyzing DNA sequences, she discovered the joys of programming.  Having taught science and math to undergraduate and high school students for four years, she was motivated to make apps for science education. She worked as an iOS Engineer for a year and a half before joining Udacity.",
          "image": "https://lh6.ggpht.com/yca_AadWGhu3hepu4RDVmXnkCDX95ZzYGlemDEeXeegUejcFluGaKCmopYh8pbckN1AZfIHHWtvcQymY5fU=s0#w=992&h=992",
          "name": "Gabrielle Miller-Messner"
        }
      ],
      "subtitle": "Learn the iOS User Interface Library",
      "key": "ud788",
      "image": "https://lh6.ggpht.com/T2dxUrLhxblm60U1fevj1W2xk2KIyVlOwf495y2Ue_9bMJXzMV1Gdly4MH4Gxfc87_S5kTgSgulfGmFBXg=s0#w=1676&h=1030",
      "expected_learning": "<a href=\"https://www.udacity.com/course/ud585\" target=\"_blank\">You?ve built your first iOS app.</a> It was fun, but you might not be comfortable creating apps from scratch. After completing this course, you?ll have the skills you will need to create the UI elements for almost any app. During this course, you?ll learn everything you need to know about UIKit, from buttons to table views. To become fluent with UIKit requires practice, and this course will provide you with opportunities to create small working apps to build your skill set.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "UIKit Fundamentals",
      "related_degree_keys": [

      ],
      "required_knowledge": "**This course assumes prior iOS experience.** Specifically, it assumes that you have built at least one single-view app, and can use Xcode to modify swift files and storyboard scenes. You should know what a View Controller is, and know how to create outlets and actions. You should also have basic familiarity of the <a href=\"https://www.udacity.com/course/learn-swift-programming-syntax--ud902\" target=\"_blank\">Swift programming language</a>.\n\nThe course also assumes basic familiarity with Git. Specifically, you will need to be able to clone git repositories and checkout branches specific to each lesson.  \n\nYou will need access to a Mac computer running OS X 10.10 or later. However, you do not need an iPad or iPhone to complete the activities. All exercises can be completed using the iOS simulator built into Xcode.",
      "syllabus": "###Lesson 1: Outlets and Actions\nIn this lesson, you?ll learn to connect outlets and actions using only code and graphically using storyboard. \n\nYou?ll use the following UIKit classes in this lesson:\n\n* UIButton\n* UILabel\n* UISwitch\n\n###Lesson 2: View Presentations and Segues\nIn this lesson, you?ll learn how to present views modally. \n\nWe will introduce you to the following UIKit classes:\n\n* UIImagePickerController\n* UIAlertController\n* UIActivityViewController\n\n###Lesson 3: The Delegate Pattern\nMany of the most common UIKit components make use of the delegate pattern. In this lesson, you?ll learn how delegates make important connections between the model, view, and controller.\n\nWe will introduce you to the following UIKit classes:\n\n* UITextField\n* UITextFieldDelegate\n\n###Lesson 4: Tables\nTable views are one of the most commonly used views in iOS apps. In this lesson, you?ll learn how to implement tables in your own apps. \n\nWe will introduce you to the following UIKit classes: \n\n* UITableView\n* UITableViewDelegate\n* UITableViewDataSource\n* UITableViewCell\n\n###Lesson 5: Navigation\nIn this lesson, you?ll learn how iOS uses navigation stacks to manage multiple views in an app. You?ll take UITableViews a step further and create the navigation structure that enables a user to tap a row of a table, view the details of an item, and return again. \n\nWe will introduce you to the following UIKit classes:\n\n* UINavigationController\n* UIBarButtonItem\n\n###Lesson 6: MemeMe Techniques\nThis lesson will guide you through the process of creating your own version of the meme generating app, MemeMe. You?ll learn about collection views, tab bar controllers, how to adjust the screen to accommodate the keyboard, and how to access the camera.\n\nWe will introduce you to the following UIKit classes:\n\n* UICollectionView\n* UICollectionViewDelegate\n* UICollectionViewDatasource\n* UITabBarController\n\nWe will also feature classes from the Foundation framework:\n\n* NSNotification\n* NSNotificationCenter",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/uikit-fundamentals--ud788?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh6.ggpht.com/mwHQcENN3An3evgOfroMVm6Jv3rlAn2DdTIqmFBV7mEQiR5Ca265Yd1NRXZMz1ruD73xowKFGMfVTmyqPA=s0#w=4680&h=968",
      "short_summary": "Learn the iOS UIKit framework, which is the cornerstone of creating user interfaces in all iOS apps and crucial for any iOS Developer to be intimately familiar with.",
      "slug": "uikit-fundamentals--ud788",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this course, you will build a series of simple apps to become more comfortable with the UIKit framework and master its most widely used components. This framework constitutes the building blocks of the user interface for all iOS apps, and is crucial for any iOS Developer to be intimately familiar with.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Jarrod is no stranger to trying new things for the sake of education: both a self-starter and advocate for reinventing the ways we learn, he first started challenging the status quo when he helped create virtual science labs for middle school students at the HudsonAlpha Institute for Biotechnology. While studying Computer Science at the University of Alabama in Huntsville, he started supplementing his college curriculum with online courseware, and he has never looked back. He holds a BS in Computer Science from the University of Alabama in Huntsville.",
          "image": "https://lh4.ggpht.com/mC-YTFs8cIEoJR5IbuKo8pIVuJnZ7PY0IcZfgKsz22exBWabmnzyre8V0j8sURASRVM-2ao_-1hTLSgEsLI=s0#w=750&h=750",
          "name": "Jarrod Parkes"
        }
      ],
      "subtitle": "Web Services, APIs, and JSON",
      "key": "ud421",
      "image": "https://lh5.ggpht.com/R20fs5CnxLpzqvacgXY36EIqw0ZGiw3rYYttnI8FBCoXk-jtPEaD37DT6VyxUxwVCGBAD1MbKWeOT4n0GA=s0#w=1670&h=1026",
      "expected_learning": "Without networking, mobile apps can only perceive, process, and present the data that is local to the host device. This greatly restricts the scope of problems which apps can solve and limits their overall utility. By incorporating networking, apps truly become ?mobile? -- they can interact with interesting data using popular web services, coordinate multi-user activities, and build experiences that bring users together.\n\nThis course will cover concepts fundamental to communication over the network like HTTP, JSON, and authentication. These concepts are also highly transferrable to other platforms, languages, and applications. Additionally, it will mold your understanding of app design, especially when networking constraints are involved.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "iOS Networking with Swift",
      "related_degree_keys": [

      ],
      "required_knowledge": "**This course assumes prior iOS experience.** Specifically, you?ve built several apps, know how to use core iOS libraries, and are familiar with MVC design principles. <a href=\"https://www.udacity.com/course/ud585\" target=\"_blank\">Introduction to iOS App Development with Swift</a> and <a href=\"https://www.udacity.com/course/ud788\" target=\"_blank\">UIKit Fundamentals</a> are good courses to take if you need to familiarize yourself with these concepts. \n\nThe course also assumes basic familiarity with Git. Specifically, you will need to be able to clone Git repositories and checkout branches specific to each lesson. <a href=\"https://www.udacity.com/course/ud775\" target=\"_blank\">How to Use Git & GitHub</a> is a great option if you need to brush up on these skills.\n\nYou will need access to a Mac computer running OS X 10.10 or later. However, you do not need an iPad or iPhone to complete the activities. All exercises can be completed using the iOS simulator built into Xcode.",
      "syllabus": "###Lesson 1: Networking and Web Services\nIn this lesson, you?ll learn all about networks and how they work. You?ll also build your first app that utilizes a web service: ?Sleeping in the Library.? This app uses the Flickr API to pull pictures of people sleeping in libraries.\n###Lesson 2: Building ?Flick Finder?\nIn this lesson, you?ll learn how to parse JSON data and display it to a user. You?ll demonstrate these new skills by building the ?Flick Finder? app, which displays Flickr images based on a phrase or location.\n###Lesson 3: The MovieDB and Authentication\nIn this lesson, you?ll learn the difference between user and anonymously accessed data. You?ll do so by building the ?My Favorite Movies? app that utilizes the Movie Database API.\n###Lesson 4: Improving Networking with MVC\nIn this lesson, you?ll improve on your ?My Favorite Movies? app to build the ?Movie Manager? app. For this app, we?ll be sure to use good MVC design, and learn what this means from a networking perspective.\n###Lesson 5: Preparing for ?On the Map?\nIn this lesson, you?ll start on your final project app, ?On the Map.? You?ll also learn about network reliability, and how your app should behave if a network can?t be reached.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ios-networking-with-swift--ud421?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh5.ggpht.com/dmAXbiVqQFXiMpAwgu1HifxPYuOaB_zY_61dP3HrGbbj1vxmqnip-kHY6m9UhhJhIVHksUcBIhFUF4MluCs=s0#w=4680&h=968",
      "short_summary": "Learn how to incorporate networking into your apps to access data from around the world. Build the On the Map app to share location and fun links with fellow students.",
      "slug": "ios-networking-with-swift--ud421",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "In this course, you?ll learn how to incorporate networking into your apps, so they can access data from around the world. You?ll learn how to harness the power of APIs to display images and retrieve movie data. At the end of the course, you?ll build the ?On the Map? app which allows you to share interesting links, projects, or other information with fellow Udacity students.",
      "expected_duration": 3
    },
    {
      "instructors": [

      ],
      "subtitle": "Perform Asynchronous Operations in iOS",
      "key": "ud576",
      "image": "https://lh3.googleusercontent.com/llYhGIRXD74ogbr6VSbPcHdbUt_XCL6_UPHJjaYlKan07VWUfBg4EAiPVNIRyqzD6hDxmWkW1zGMmR-sAbKc=s0#w=1024&h=630",
      "expected_learning": "Almsot all Apps consume data from web services, and therefore must use background threads for these lengthy operations.\n\nEven though we provide a black box solution for concurrency in the <a href=\"https://www.udacity.com/courses/ud421\">iOS Networking with Swift</a> course, it is important that you understand how concurrency works in iOS. \n\nThis knowledge is vital to deliver Apps that won't be rejected from the App Store and also provide a great user experience.\n\nOn top of that, GCD is a frequent topic in iOS job interviews.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Grand Central Dispatch (GCD)",
      "related_degree_keys": [

      ],
      "required_knowledge": "To be successful in this course, you should be comfortable programming in Swift, and understand closures. You can learn these skills in our [Swift Syntax](https://www.udacity.com/courses/ud902) course. \n\nFamiliarity with _The Hitchhiker's Guide to the Galaxy_ and _The Matrix_ are also \nrecommended in order to understand the jokes in this course.",
      "syllabus": "###Lesson 1: Closures Reloaded\n\nIn this chapter we will revisit the concept of closures in Swift. We need to learn a few properties of closures that we bypassed in [Swift Syntax](https://www.udacity.com/courses/ud902). These are vital when dealing with GCD.\n\nYou will put you new knowledge of closures to test in several playgrounds. By the end of this lesson you will be able to drop things like, \"Closures are first class types that capture their lexical environment\" in casual conversations and impress fellow nerds. Even better: you will actually know what the heck you're talking about!\n\n###Lesson 2: Grand Central Dispatch\n\nHere you meet our main antagonist: Apple's open source library *Grand Central Dispatch*. \n\nGCD is an enormous library, so we will concentrate on its core features: how it allows you to send tasks to the background and (equally important) to the foreground.\n\nWhen you finish this lesson you will have a sound knowledge of how and what you can send to the background and what must always run in the foreground.\n\n###Lesson 3: Sample App\n\n```Talk is cheap. Show me the code! -- Linus Torvalds.```\n\nIn this chapter you will create a simple App that downloads huge images (the easiest way to block the UI). You will apply your newly acquired knowledge to send this network lengthy task to the background in 2 different ways.\n\nBy the end of this lesson you will know how to run closures in the background, design methods that take a completion closure and understand the code in the *black box* in the Networking course.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/grand-central-dispatch-gcd--ud576?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "",
      "short_summary": "Apple's Grand Central Dispatch framework allows you to create asynchronous apps for iOS, ensuring a smooth user experience.",
      "slug": "grand-central-dispatch-gcd--ud576",
      "starter": false,
      "level": "",
      "expected_duration_unit": "weeks",
      "summary": "Many times your apps need to run lengthy operations in the background, like downloading data, but you don't want these operations to interfere with your UI.\n\nApple's GCD (long form: Grand Central Dispatch) framework allows you to create asynchronous apps for iOS, ensuring smooth a smooth user experience in situations like the one mentioned above.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Jason Schatz was a Java developer until he was charmed by the first iPhones. He has been developing apps as a consultant ever since.  He enjoys writing and teaching software in equal measure, and thinks the transition to Swift will be excellent for both.  He has a M.S. in Computer Science from U.C. Davis and is a faculty member at City College of San Francisco.",
          "image": "https://lh6.ggpht.com/UbXxDQdXKwbniSRxGvCWk0fQs-a1dcmWT9pmDNz6kzpu7R8zCIGIK6Dx__WgPcURBp5YMuAvo2aPGvW02UE=s0#w=2000&h=2000",
          "name": "Jason Schatz"
        }
      ],
      "subtitle": "Storing Your App?s Data",
      "key": "ud325",
      "image": "https://lh4.ggpht.com/X3PE--8COQqg91E0lI7gqMChDrAsGbVmZxCJhKldAo10tjimp6AJzFtjhm5uBk9imbSfPCsYYNuqT4ziozw=s0#w=1747&h=1074",
      "expected_learning": "Just like computers, your iPhone has two types of memory: main memory (RAM) and the hard drive. In all the apps you?ve written, you?ve interacted with RAM, but this memory is limited, and it?s important that the apps you design use it as efficiently as possible. To use the RAM efficiently it is important to be able to store data on the hard drive.\n\nIt is also important for your apps to maintain state when they are turned off. The apps you?ve built probably aren?t persistent, meaning that they don?t save their state to the device?s hard drive. As RAM is volatile, data is lost when the app stops running. In this course, you?ll learn how to persist the state of the device using NSKeyedArchiver and Core Data.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "iOS Persistence and Core Data",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course assumes extensive iOS experience. Specifically, you?ve built several apps, know how to use core iOS libraries, and are familiar with networking and MVC design principles. <a href=\"https://www.udacity.com/course/ud585\" target=\"_blank\">Introduction to iOS App Development with Swift</a>, <a href=\"https://www.udacity.com/course/ud788\" target=\"_blank\">UIKit Fundamentals</a>, and <a href=\"https://www.udacity.com/course/ud421\" target=\"_blank\">iOS Networking with Swift</a> are good courses to take if you need to familiarize yourself with these concepts. \n\nThe course also assumes basic familiarity with git. Specifically, you will need to be able to clone git repositories and checkout branches specific to each lesson. <a href=\"https://www.udacity.com/course/ud775\" target=\"_blank\">How to Use Git & GitHub</a> is a great option if you need to brush up on these skills.\n\nYou will need access to a Mac computer running OS X 10.9 or later. However, you do not need an iPad or iPhone to complete the activities. All exercises can be completed using the iOS simulator built into Xcode.",
      "syllabus": "###Lesson 1: NSUserDefaults\nIn this lesson, you?ll learn about the memory applications for each state in an app?s life cycle. You?ll also learn to persist an app in the ?not running? state using NSUserDefaults and the Documents Directory.\n\nWe?ll introduce you to the following iOS classes in this lesson:\n\n* NSUserDefaults\n* NSFileManager\n\n###Lesson 2: NSCoder/NSKeyedArchiver\nIn this lesson, you?ll learn to persist arrays and dictionaries to the Documents directory, and persist custom structs using a Keyed Archiver.\n\nWe?ll introduce you to the following iOS classes in this lesson:\n\n* NSKeyedArchiver\n* NSKeyedUnarchiver\n\nWe?ll also introduce you to the following protocol:\n\n* NSCoding\n\n###Lesson 3: Persistent Objects & Core Data\nIn this lesson, you?ll be introduced to the Core Data framework, Apple?s favorite framework for the model class. You?ll learn how Core Data manages its stack using a pre-built app, ?Favorite Actors.?\n\nWe?ll introduce you to the following iOS classes in this lesson:\n\n* NSManagedObject\n* NSManagedObjectContext\n* NSFetchRequest\n\n###Lesson 4: Core Data from Scratch\nIn this lesson, you?ll learn how to create a Core Data stack from the ground up. You will also learn how to specify relationships between you your Core Data managed objects. By the end, you?ll be proficient enough to describe every element in a Core Data project.\n\nWe?ll introduce you to the following iOS classes in this lesson:\n\n* NSManagedObjectModel\n* NSPersistentStoreCoordinator\n\n###Lesson 5: Smart Architecture with Core Data\nIn this lesson, you?ll learn how Core Data relates to MVC design as Apple envisioned it. You will learn how to architect apps so that controller objects are notified whenever the data stored in Core Data changes, allowing the controllers to keep the views updated in ways that keep your code trim and extensible. \n\nWe?ll introduce you to the following iOS classes in this lesson:\n\n* NSFetchResultsController\n* NSFetchResultsControllerDelegate",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ios-persistence-and-core-data--ud325?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh5.ggpht.com/7yJNi6zmwj-XZUIVoy6GxsRu5eqE7IiiNQzlasZqWSZ4BPvU7VIWus1c3aGRhnPGzD45TlvGpcSplKJg-uU=s0#w=4680&h=968",
      "short_summary": "Persisting data is a core skill for any iOS developer. Learn how to store app data to your device's hard drive using two common techniques: Core Data & NSKeyedArchiver.",
      "slug": "ios-persistence-and-core-data--ud325",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Persisting data is a core skill for any iOS developer. This course will teach you two techniques for storing data to your device?s hard drive: the NSKeyedArchiver method and the more complex, but robust Core Data.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Jarrod is no stranger to trying new things for the sake of education: both a self-starter and advocate for reinventing the ways we learn, he first started challenging the status quo when he helped create virtual science labs for middle school students at the HudsonAlpha Institute for Biotechnology. While studying Computer Science at the University of Alabama in Huntsville, he started supplementing his college curriculum with online courseware, and he has never looked back. He holds a BS in Computer Science from the University of Alabama in Huntsville.",
          "image": "https://lh4.ggpht.com/mC-YTFs8cIEoJR5IbuKo8pIVuJnZ7PY0IcZfgKsz22exBWabmnzyre8V0j8sURASRVM-2ao_-1hTLSgEsLI=s0#w=750&h=750",
          "name": "Jarrod Parkes"
        }
      ],
      "subtitle": "Print Statements, Breakpoints, and LLDB",
      "key": "ud774",
      "image": "https://lh3.googleusercontent.com/JvTxOEH2ZDx2R7nSdeehojPbLtOavHc4D2tj6b2UapwOZwdH0Wqv--LGYZ55G60G_qxpJyZdYF7oTBa1fw=s0#w=1758&h=1080",
      "expected_learning": "Debugging is one of the most fundamental processes involved in writing software. Nobody writes perfect code, and job-ready developers should know how to find and fix programming errors.\n\nIn this course, you'll learn standard methodologies for debugging software?especially for iOS applications. Additionally, you'll learn how to use Xcode?s debugging tools (breakpoints, LLDB, etc.) to squash those bugs!",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Xcode Debugging",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course assumes rudimentary iOS programming experience. You should be able to scan Swift code to identify methods and errors, and make minor changes to correct them.",
      "syllabus": "###Lesson 1A: Debugging, Printing, Logging\nIn this lesson, you'll be introduced to the \"So Many Bugs\" app, which we'll use to solve coding mysteries throughout the course. You'll also learn about the debugging process, and how to use print statements to identify bugs.\n\n###Lesson 1B: Stepping Through Code\nIn this lesson, you'll learn how to use breakpoints to examine application state at any point during execution.\n\n###Lesson 2A: LLDB and Breakpoint Actions\nIn this lesson, you'll learn about LLDB (low-level debugger)?the debugging super tool. You'll be introduced to common LLDB commands, tips, and tricks.\n\n###Lesson 2B: Breakpoints and Visual Tools\nIn this lesson, you'll learn about exception and symbolic breakpoints, and how to debug your code using Xcode's visual debugging tools.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/xcode-debugging--ud774?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh3.googleusercontent.com/bAB5JC-RW1q5_KNtIVfmBv8R2NmEpk8jal9_zw4awqkwCOedfat9DOm7rOiDyLmTQ_sD1-5A1rrwBdxgxGM=s0#w=4680&h=968",
      "short_summary": "In this course, you'll learn standard methodologies for debugging software, and how to use Xcode's debugging tools to find and squash bugs.",
      "slug": "xcode-debugging--ud774",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "\"If debugging is the process of removing bugs, then programming must be the process of putting them in.\"<br> \n*Edsger W. Dijkstra*\n\nDebugging is yin to programming's yang; you can't have one without the other. However, finding bugs in programs can be an incredibly frustrating and demotivating process for developers. This course will teach you a variety of techniques to help make debugging your code easier.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Jessica fell in love with teaching as a wee child when she forced her younger siblings to play \"school\" and learn all the things she mastered during the past school year. Armed with a BS in Electrical Engineering Technology from the University of Central Florida, she spent her early career teaching teachers how to use microcontrollers and robotics in the classroom. She also has her ME in Engineering Management from the University of Wisconsin-Madison. In her spare time, Jessica enjoys reading, skiing, and traveling the world.",
          "image": "https://lh3.ggpht.com/20ptLSWskAtxwXpc0GiQI0TTYbgQhGnewe8LgL8WRkyCDGS1_4PUfGxA4wz-UlFr3DiwYmh4GuTMn7YB2f8=s0#w=2000&h=2000",
          "name": "Jessica Uelmen"
        }
      ],
      "subtitle": "From Drawing Board to App Store",
      "key": "ud607",
      "image": "https://lh3.googleusercontent.com/jl17SWQdE1BJx2qgOKWI23jWKdPFjgrF4PjE1kCOdJv9NO0HLtNCyZJ0yElmkRRRwMrAG1rNxBmplaI_1dA=s0#w=1753&h=1078",
      "expected_learning": "Building an app from scratch is a time-consuming, but rewarding process. Don't let the length of the lessons fool you!\n\nThis course is unique in that you'll spend most of your time outside of the classroom, working on your app. We'll point you in the right direction to find resources and make progress, but it will be up to you to implement.\n\nBy the end of the course, you'll have built you very own custom iOS app, and have the confidence to do it all again.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "How to Make an iOS App",
      "related_degree_keys": [

      ],
      "required_knowledge": "**Enrolling in this course assumes you have prior iOS development experience.** The material won't cover the technical aspects of app development, instead serving as a guide through the process of building an app. Specifically, the course was built to support the final project in the <a href=\"https://www.udacity.com/course/ios-developer-nanodegree--nd003\" target=\"_blank\">iOS Developer Nanodegree</a> and assumes mastery of the concepts taught in the following courses:\n\n* <a href=\"https://www.udacity.com/course/uikit-fundamentals--ud788\" target=\"_blank\">UIKit Fundamentals</a>\n* <a href=\"https://www.udacity.com/course/ios-networking-with-swift--ud421\" target=\"_blank\">iOS Networking with Swift</a>\n* <a href=\"https://www.udacity.com/course/ios-persistence-and-core-data--ud325\" target=\"_blank\">iOS Persistence and Core Data</a> \n\nPlease also note that submitting to the App Store, or loading your app to a physical device requires enrollment in the <a href=\"https://developer.apple.com/programs/ios/\" target=\"_blank\">iOS Developer Program</a>.",
      "syllabus": "###Lesson 1: Research\nIn this first lesson, you'll brainstorm and vet multiple app ideas. You'll begin to think about the UI elements used in each, get user feedback on the designs, as well as start thinking about relevant web APIs and libraries to use.\n\n###Lesson 2: Build\nIn this lesson, you'll choose an idea to pursue and build it! We'll share tips for getting started, dealing with code that doesn't work, and how to submit to the App Store.\n\n###Lesson 3: Reflect\nIn this last lesson, you'll reflect on the process: what went well, and what you might do differently next time. Recognizing and learning from mistakes is what makes you a better developer!",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/how-to-make-an-ios-app--ud607?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh3.googleusercontent.com/htGVTEpavhMFSdlRqmkwOcUUfAmfOpEBNwKoOVBdXx1__dXABUxj-xXJ1vsHQ0b3pxpEzTkCDt_W0XADnic=s0#w=1170&h=242",
      "short_summary": "Learn the process of building an app, taking your ideas from drawing board to App Store!",
      "slug": "how-to-make-an-ios-app--ud607",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Do you have some experience building apps for the iPhone or iPad and want to build an app from the ground up, but don't know where to begin? Look no further! In this course, you'll learn the process of building an iOS app, from brainstorming ideas to publishing on the App Store.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Diane Tang is a Google Fellow currently working in Google Research on building data infrastructure and analytics for biological & medical applications. Prior to 2014, she was a leader on the AdsQuality team at Google. She joined Google in 2003 and has focused on logging, large-scale data analysis & infrastructure, experiment methodology and ads systems. She earned a bachelor's degree in Computer Science from Harvard in 1995 and a master's degree and PhD in Computer Science from Stanford in 2001. She holds many patents and is the author of numerous publications in mobile networking, information visualization, experiment methodology, data infrastructure, and data mining / large data.",
          "image": "https://lh3.googleusercontent.com/C8kGQ6Mh9F8CqcqPG9CbBHCe4PaK-X6inPfr27XfN2dF8UwILexmdQ95MjR8NsBWJvDtWytDf3qzhIx8Edg=s0#w=550&h=550",
          "name": "Diane Tang"
        },
        {
          "bio": "Carrie Grimes Bostock is currently a Distinguished Engineer at Google, working on data driven resource planning, cost analysis, and distributed cluster management software as part of the Technical Infrastructure group. She joined Google in 2003, and spent most of the last 12 years working in Search and Search infrastructure on statistical and engineering problems in crawling and indexing quality, ranking evaluation, and forecasting. She graduated from Harvard with an A.B. in Anthropology/Archaeology in 1998, and an interest in quantitative methods for dealing with disparate data. She received a PhD at Stanford in 2003 in Statistics after working with David Donoho on Nonlinear Dimensionality Reduction problems.",
          "image": "https://lh3.googleusercontent.com/vwcKrur_X4Vv8r5lywXDahGdlI4IRKCdYDSZj3Bnadg4fQnddNyrPe-lHKGJv22dxuf2o6Uox59HuYCddPI=s0#w=390&h=390",
          "name": "Carrie Grimes"
        },
        {
          "bio": "Before joining Udacity, Caroline worked as a Software Engineer at Quixey, a startup building a search engine for apps.  While receiving her undergraduate degree from Carnegie Mellon, she was a TA for six different courses, and that same love for teaching later led her to join Udacity. Outside of work, she likes reading fiction, playing board games, and drinking bubble tea.",
          "image": "https://lh4.ggpht.com/BguyLDX-W3dEJFcXQaQZ4xLVvxpjKrwzC6CJyDbAGOm_BtIxgKNk94sq4Wxuhb4621aV6d5XFQYYOc8Jrck=s0#w=1476&h=1476",
          "name": "Caroline Buckey"
        }
      ],
      "subtitle": "Online Experiment Design and Analysis",
      "key": "ud257",
      "image": "https://lh3.googleusercontent.com/FLR8sZtru0MSoate5rC2zIXWVHYqHaJVrRAQgK_ms9VkEBc_sy1sCBytGQMQlAlafdb_IP-IXRZcszor0kg=s0#w=1726&h=1061",
      "expected_learning": "A/B testing, or split testing, is used by companies like Google, Microsoft, Amazon, Ebay/Paypal, Netflix, and numerous others to decide which changes are worth launching. By using A/B tests to make decisions, you can base your decisions on actual data, rather than relying on intuition or HiPPO's - the highest paid person's opinion! Designing good A/B tests and drawing valid conclusions can be difficult. You can almost never measure exactly what you want to know (such as whether the users are \"happier\" on one version of the site), so you need to find good proxies. You need sanity checks to make sure your experimental set-up isn't flawed, and you need to use a variety of statistical techniques to make sure the results you're seeing aren't due to chance. This course will walk you through the entire process. At the end, you will be ready to help businesses small or large make crucial decisions that could significantly affect their future!",
      "featured": true,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "A/B Testing",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course requires introductory knowledge of descriptive and inferential statistics. If you haven't learned these topics, or need a refresher, they are covered in the Udacity courses <a href=\"https://www.udacity.com/course/ud201\" target=\"_blank\">Inferential Statistics</a> and <a href=\"https://www.udacity.com/course/ud827\" target=\"_blank\">Descriptive Statistics</a>.\n\nPrior experience with A/B testing is not required, and neither is programming knowledge.",
      "syllabus": "### Lesson 1: Overview of A/B Testing\nThis lesson will cover what A/B testing is and what it can be used for. It will also cover an example A/B test from start to finish, including how to decide how long to run the experiment, how to construct a binomial confidence interval for the results, and how to decide whether the change is worth the launch cost.\n\n### Lesson 2: Policy and Ethics for Experiments\nThis lesson will cover how to make sure the participants of your experiments are adequately protected and what questions you should be asking regarding the ethicality of experiments. It will cover four main ethics principles to consider when designing experiments: the risk to the user, the potential benefits, what alternatives users have to participating in the experiment, and the sensitivity of the data being collected.\n\n### Lesson 3: Choosing and Characterizing Metrics\nOne of the most important and time-consuming pieces of designing an A/B test is choosing and validating metrics to use in evaluating your experiment. This lesson will cover techniques for brainstorming metrics, what to do when you can't measure what you want directly, and characteristics you should consider when validating your metrics.\n\n### Lesson 4: Designing an Experiment\nThis lesson will cover how to design an A/B test. This includes how to choose which users will be in your experiment and control group - different online definitions of a \"user\", and what effects different choices will have on your experiment. It will also cover when to  limit your experiment to a subset of your entire user base, how to calculate how many events you will need in order to draw strong conclusions from your results, and how this translates into how long to run the experiment. Finally, the lesson will cover how various design decisions affect the size of your experiment, so you will know which decisions to revisit if you need results more quickly.\n\n### Lesson 5: Analyzing Results\nThis lesson will cover how to analyze the results of your experiments. Step one is always to run some sanity checks so that you can catch problems with your experiment set-up. Then, you will learn how to check conclusions with multiple methods, including a hypothesis test on the effect size and a binomial sign test, if you get results that surprise you. You will also learn how measuring multiple metrics for the same experiment can make analysis difficult, and some techniques for handling multiple metrics. Finally, you will learn about several analysis \"gotchas\", and what to do if you see them, including how Simpson's Paradox can affect A/B tests, and why even statistically significant results might disappear when you launch.\n\n### Final Project: Design and Analyze an A/B Test\nMake design decisions for an A/B test, including which metrics to measure and how long the test should be run. Analyze the results of an A/B test that was run by Udacity and recommend whether or not to launch the change.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ab-testing--ud257?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh3.googleusercontent.com/azCLWUGSHFxBz6I49NATWEuWwfrwfwyniwFQ2dbBn9cLOy6RrgxQWjB-TEM4xgncFwQaJRN86_6AKXeiSwEN=s0#w=4672&h=968",
      "short_summary": "This course will cover the design and analysis of A/B tests, which are online experiments used throughout tech industry by companies like Google, Amazon, and Netflix.",
      "slug": "ab-testing--ud257",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This course will cover the design and analysis of A/B tests, also known as split tests, which are online experiments used to test potential improvements to a website or mobile application. Two versions of the website are shown to different users - usually the existing website and a potential change. Then, the results are analyzed to determine whether the change is an improvement worth launching. This course will cover how to choose and characterize metrics to evaluate your experiments, how to design an experiment with enough statistical power, how to analyze the results and draw valid conclusions, and how to ensure that the the participants of your experiments are adequately protected.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Diane Tang is a Google Fellow currently working in Google Research on building data infrastructure and analytics for biological & medical applications. Prior to 2014, she was a leader on the AdsQuality team at Google. She joined Google in 2003 and has focused on logging, large-scale data analysis & infrastructure, experiment methodology and ads systems. She earned a bachelor's degree in Computer Science from Harvard in 1995 and a master's degree and PhD in Computer Science from Stanford in 2001. She holds many patents and is the author of numerous publications in mobile networking, information visualization, experiment methodology, data infrastructure, and data mining / large data.",
          "image": "https://lh3.googleusercontent.com/C8kGQ6Mh9F8CqcqPG9CbBHCe4PaK-X6inPfr27XfN2dF8UwILexmdQ95MjR8NsBWJvDtWytDf3qzhIx8Edg=s0#w=550&h=550",
          "name": "Diane Tang"
        },
        {
          "bio": "Carrie Grimes Bostock is currently a Distinguished Engineer at Google, working on data driven resource planning, cost analysis, and distributed cluster management software as part of the Technical Infrastructure group. She joined Google in 2003, and spent most of the last 12 years working in Search and Search infrastructure on statistical and engineering problems in crawling and indexing quality, ranking evaluation, and forecasting. She graduated from Harvard with an A.B. in Anthropology/Archaeology in 1998, and an interest in quantitative methods for dealing with disparate data. She received a PhD at Stanford in 2003 in Statistics after working with David Donoho on Nonlinear Dimensionality Reduction problems.",
          "image": "https://lh3.googleusercontent.com/vwcKrur_X4Vv8r5lywXDahGdlI4IRKCdYDSZj3Bnadg4fQnddNyrPe-lHKGJv22dxuf2o6Uox59HuYCddPI=s0#w=390&h=390",
          "name": "Carrie Grimes"
        },
        {
          "bio": "Before joining Udacity, Caroline worked as a Software Engineer at Quixey, a startup building a search engine for apps.  While receiving her undergraduate degree from Carnegie Mellon, she was a TA for six different courses, and that same love for teaching later led her to join Udacity. Outside of work, she likes reading fiction, playing board games, and drinking bubble tea.",
          "image": "https://lh4.ggpht.com/BguyLDX-W3dEJFcXQaQZ4xLVvxpjKrwzC6CJyDbAGOm_BtIxgKNk94sq4Wxuhb4621aV6d5XFQYYOc8Jrck=s0#w=1476&h=1476",
          "name": "Caroline Buckey"
        }
      ],
      "subtitle": "Online Experiment Design and Analysis",
      "key": "ud257-certified",
      "image": "https://lh3.googleusercontent.com/OhIEMkVWidP9AhvFgBv7bB7RyJNkjh0v6_Zalap3f73wsSx6WhULPYaIt1OvCU4YMI1bx08X3lXR64tfvUdv=s0#w=1726&h=1061",
      "expected_learning": "Test course only - please ignore if you see this",
      "featured": false,
      "project_name": "A/B Testing - Design an A/B Test",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "A/B Testing (Certified Course)",
      "related_degree_keys": [

      ],
      "required_knowledge": "Test course only - please ignore if you see this",
      "syllabus": "Test course only - please ignore if you see this",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ab-testing-certified-course--ud257-certified?utm_medium=referral&utm_campaign=api",
      "project_description": "Test course only - please ignore if you see this",
      "full_course_available": true,
      "faq": "Test course only - please ignore if you see this",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/qt46uoARQSmDmE4mOkfX-xJWPGjGcgx6i6n-EpQvINC_yuyvr3enGupQsby32tdPQ6yMTVC-GTRzOZF1YcA=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [

      ],
      "banner_image": "https://lh3.googleusercontent.com/0qED42VPRD1ikk2gicsUDeygQ6uFp8AT7wu1Yq-TeKhQ3kLaqDYQtUXe4UPhNY502Oprgk1fcFo0YTSDRsc5=s0#w=1170&h=320",
      "short_summary": "Test course only - please ignore if you see this",
      "slug": "ab-testing-certified-course--ud257-certified",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Test course only - please ignore if you see this",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Jonathan is redefining data science education as the co-founder and CTO of Zipfian Academy -- a 12-week full time immersive data science program.  He first discovered his love of all things data while studying Computer Science and Physics at UC Berkeley. In a former life, he worked for Alpine Data Labs developing distributed machine learning algorithms for predictive analytics on Hadoop. \n\nJonathan has always had a passion for sharing the things he has learned in the most creative ways he can.  At Zipfian Academy, he gets to combine his two favorite things: humans and code.  When he is not working with students you can find him blogging about data, visualization, and education at <a href=\"http://hopelessoptimism.com\">hopelessoptimism.com<a>",
          "image": "https://lh4.ggpht.com/AC2ydYqfBdJQyU7uvY66KQSLwRgPTAmUKOgx1Higi7tadskt0YLNbRQzXoIex4JDUw4eZdqP6Jl_nolmUg=s0#w=2774&h=2774",
          "name": "Jonathan Dinu"
        },
        {
          "bio": "Ryan is currently the CEO and Co-founder of Zipfian Academy, the leading provider of immersive training programs focused on data science and data engineering. Before Zipfian Academy, Ryan was a Sr. Systems Engineer at <a href=\"http://www.nutanix.com\">Nutanix</a>, creating scale-out distributed computing solutions for virtualized environments. Ryan holds a bachelor?s degree in Molecular Cell Biology from UC Berkeley, where he plumbed the depths of plant immunity at the <a href=\"http://bakerlab.berkeley.edu\">Plant Gene Expression Center</a>, building big data applications targeting next-generation sequencing technologies. When not trying to pull beauty out of data, you can find Ryan hacking on 3D printers, DIY Bio, and open-source hardware.",
          "image": "https://lh4.ggpht.com/wVZ8n9raas6qDlGNnxd4w2w2LXzR7bnmNhQO3HC9XOw6-PlHoQQqrbWSkFYc9R8ALFkJMHlcgEP_iGu8z4uX=s0#w=591&h=591",
          "name": "Ryan Orban"
        }
      ],
      "subtitle": "Communicating with Data",
      "key": "ud507",
      "image": "https://lh4.ggpht.com/-8k47x6ig0mLWtYBVs1jSILrKvM6oxad_thcLIM4Hzf9KTLLafG3by9g443o_fb5ugXomH-eps6z94hp9Sk=s0#w=1725&h=1060",
      "expected_learning": "Learn by doing! You will analyze existing data visualization and create new ones to learn about the field. At it?s core, data visualization is a form of communication. Learn how to be a great communicator and how to enable readers to walk away from your graphics with insight and understanding. This course also makes use of open web standards (HTML, CSS, and SVG) to create data visualizations.\n\n### You can also learn how to...\n\n- communicate clearly with the best visual representation of your data\n- tell stories, spark discussion, and create calls to actions for readers\n- design graphics like ones from the NYTimes and other media companies\n- how to use open web technologies to create an online portfolio of your work\n- use visualization libraries (<a href=\"http://dimplejs.org/\" target=\"_blank\">dimple.js</a> and <a href=\"http://d3js.org/\" target=\"_blank\">D3.js</a>) to create graphics",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Data Visualization and D3.js",
      "related_degree_keys": [

      ],
      "required_knowledge": "Regardless of your programming background, you can learn about data visualization and design principles in Lesson 1a and Lesson 2a without the following recommended background.\n\nTo succeed in this course, you should to be familiar with basic programming principles, including data types (strings, arrays, booleans, etc.), `if else` statements, and `for` loops. You should also be able to describe concepts like functions and objects. Our <a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Intro to Computer Science</a> and <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Fundamentals with Python</a> courses are great places to get started.\n\nBasic knowledge of HTML and CSS (structuring and styling a web page) is not required but highly recommended. We suggest taking the <a href=\"https://www.udacity.com/course/ud304\" target=\"_blank\">Intro to HTML and CSS</a> course if you have no experience with HTML or CSS.\n\nThis course is unique in that the final project can be completed using either dimple.js or d3.js. The visualization library, dimple.js, is easier to use than d3.js and requires less background knowledge. Furthermore, a graphic can be created in considerably fewer lines of code using dimple.js as opposed to d3.js.\n\nSo why should you learn d3.js?\n\nData Driven Documents (d3.js) allows you to build highly customized graphics. If you would like to gain more technical skills and learn more about Javascript and open web standards, then you should complete Lesson 3 and Lesson 4 in order to prepare for the final project.\n\n\nIf you would like to complete the final project using d3.js, you should have some experience reading and using documentation. For example, you should be able to code a `for` loop in Javascript or be able to look up the syntax to work with strings and arrays in Javascript. We recommend taking the <a href=\"https://www.udacity.com/course/ud804\" target=\"_blank\">Javascript Basics</a> course if you have little to no experience with Javascript.",
      "syllabus": "### Lesson 1a Visualization Fundamentals (2 hours)\nLearn about the elements of great data visualization. In this lesson, you will meet data visualization experts, learn about data visualization in the context of data science, and learn how to represent data values in visual form.\n\n### Lesson 1b D3 Building Blocks (4 hours)\nLearn how to use the open standards of the web to create graphical elements. You?ll learn how to select elements on the page, add SVG elements, and how to style SVG elements. Make use of all the Instructor Notes throughout this lesson if you have little to no experience with HTML and CSS.\n\n### Mini-Project 1: RAW Visualization (2 hours)\nCreate a data visualization using a software of your choice. We will provide recommendations for visualization software as well as data sets. We want you to get right into making data visualization so here?s your first chance!\n\n### Lesson 2a Design Principles (2 hours)\nWhich chart type should I use for my data? Which colors should I avoid when making graphics? How do I know if my graphic is effective? Investigate these questions, and learn about the World Cup data set which will be use throughout the rest of the course.\n\n### Lesson 2b Dimple.js (4 hours)\nLearn how to create graphics using the Dimple JavaScript library. You will learn about this library as a gentle coding introduction before learning about D3.js. You will be able to produce great graphics with minimal code, and all of your graphics will come with interactivity without any extra effort on your part. Dimple, it's simple!\n\n### Mini-Project 2: Take Two (2-5 hours)\nFind an existing data visualization, critique it for what it does well and what it doesn?t do well, and finally, recreate the graphic using a software tool of your choice. We recommend using Dimple.js, which is covered in Lesson 2b, but we don?t want you to feel constrained by the choice of tools. Use any tool that works for you.\n\n### Special Note\nAt this point in the course, you can start the final project. The remaining content of the course covers narrative structures, types of bias, and maps. All of the code  in Lesson 3 and Lesson 4 pertains to d3.js. If you'd like to learn d3.js and complete the final project using d3.js, then please continue. If you prefer to stop, you can complete the final project using dimple.js.\n\n### Lesson 3 Narratives (5 hours)\nLearn how to incorporate different narrative structures into your visualizations and code along with Jonathan as you create a graphic for the World Cup data set. You?ll learn about different types of bias in the data visualization process and learn how to add context to your data visualizations. By the end of this lesson, you?ll have a solid foundation in D3.js.\n\n### Lesson 4 Animation and Interaction (5 hours)\nStatic graphics are great, but interactive graphics can be even better. Learn how to leverage animation and interaction to bring more data insights to your audience. Code along with Jonathan once again as you learn how to create a bubble map for the World Cup data set.\n\n### Final Project: Making an Effective Data Visualization (2 hours or more)\nYou will create a data visualization that conveys a clear message about a data set. You will use dimple.js or d3.js and collect feedback along the way to arrive at a polished product.\n####<b>NOTE:</b> As a free student, you are welcome to complete the project to showcase your learning; however, only students enrolled in the <a href=\"https://www.udacity.com/course/nd002\" target=\"_blank\">Data Analyst Nanodegree</a> are able to submit the final project for review and certificate. Interested in enrolling? <a href=\"https://www.udacity.com/course/nd002\" target=\"_blank\">Find out more!</a>",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/data-visualization-and-d3js--ud507?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/q4HzkHOhhHjpC2TUGyz6nq3p0ZQbjscdEvTBBx3xMC9kiX7Iq1GOJIIi9K3yRwGw4nXFyOsyW6IeqtaQBdg=s0#w=520&h=240",
          "name": "Zipfian"
        }
      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh4.ggpht.com/U6QogkXo7B-Tll6-h9dTYVtkBVv_POuKORlwQ3B0T003rUnUGMAQscN6VAoBqwdDAcPjqosCjTqXMvi60YiA=s0#w=1170&h=242",
      "short_summary": "Learn the fundamentals of data visualization and apply design and narrative concepts to create your own visualization.",
      "slug": "data-visualization-and-d3js--ud507",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "Learn the fundamentals of data visualization and practice communicating with data. This course covers how to apply design principles, human perception, color theory, and effective storytelling to data visualization. If you present data to others, aspire to be an analyst or data scientist, or if you?d like to become more technical with visualization tools, then you can grow your skills with this course.\n\nThe course does not cover exploratory approaches to discover insights about data. Instead, the course focuses on how to visually encode and present data to an audience once an insight has been found.\n\nThis course is part of the <a href=\"https://www.udacity.com/course/nd002\" target=\"_blank\">Data Analyst Nanodegree</a>.",
      "expected_duration": 7
    },
    {
      "instructors": [
        {
          "bio": "Sebastian Thrun is founder of Udacity. He is Research Professor of Computer Science at Stanford University, and a member of the National Academy of Engineering and the German Academy of Sciences. He was Google Vice President and Fellow where he founded Google X that generated the self-driving car, Google Glass and Loon among other projects. Thrun is best known for his research in robotics, artificial intelligence and machine learning.",
          "image": "https://lh4.ggpht.com/6TOKyC-dF26hloyEp0Iv88hrbuB9jyyrHi0QIJDBLpG62SWIWoZzYdLylXlU89hSyWvbC5mLFD5ymilCa7vp=s0#w=2000&h=2001",
          "name": "Sebastian Thrun"
        }
      ],
      "subtitle": "Pattern Recognition for Fun and Profit",
      "key": "ud120",
      "image": "https://lh4.ggpht.com/iH59AlLRPUJvthBY2aYpNo-qvIB0wsh7OXNAxNgBciwkUa0lLhxzvYswHVJjG012yD5eQgbWYmcHyDczMg=s0#w=1724&h=1060",
      "expected_learning": "In this course, you?ll learn by doing! We?ll bring machine learning to life by showing you fascinating use cases and tackling interesting real-world problems like self-driving cars. For your final project you?ll mine the email inboxes and financial data of Enron to identify persons of interest in one of the greatest corporate fraud cases in American history.\n\nWhen you finish this introductory course, you?ll be able to analyze data using machine learning techniques, and you?ll also be prepared to take our Data Analyst Nanodegree. We?ll get you started on your machine learning journey by teaching you how to use helpful tools, such as pre-written algorithms and libraries, to answer interesting questions.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to Machine Learning",
      "related_degree_keys": [

      ],
      "required_knowledge": "To succeed in this course, you must be proficient at programming in Python and basic statistics. If you need a refresher on any of these topics, you can check out these courses:\n\n- [Intro to Computer Science](https://www.udacity.com/course/cs101) (You should know basic data structures and control statements, and be able to write and import functions.)\n\n- [Inferential Statistics](https://www.udacity.com/course/ud201)\n\n- [Descriptive Statistics](https://www.udacity.com/course/ud827)\n\n\nOne additional course that would be nice to have is Intro to [Data Science](https://www.udacity.com/course/intro-to-data-science--ud359), as this will get you familiar with scientific problem-solving.  However, completion of that class isn't required for success.  We will also use a tiny bit of <a href=\"https://www.udacity.com/course/ud775\">git</a>, which you can also learn about on Udacity.\n\nOne thing that we don?t require is previous exposure to machine learning.  If you?re a machine learning beginner, you?re in the right place.",
      "syllabus": "You?ll learn how to start with a question and/or a dataset, and use machine learning to turn them into insights. \n\n###Lessons 1-4: Supervised Classification\n\n**Naive Bayes:** We jump in headfirst, learning perhaps the world?s greatest algorithm for classifying text.\n\n**Support Vector Machines (SVMs):** One of the top 10 algorithms in machine learning, and a must-try for many classification tasks.  What makes it special?  The ability to generate new features independently and on the fly.\n\n**Decision Trees:** Extremely straightforward, often just as accurate as an SVM but (usually) way faster.  The launch point for more sophisticated methods, like random forests and boosting.\n\n###Lesson 5: Datasets and Questions\nBehind any great machine learning project is a great dataset that the algorithm can learn from.  We were inspired by a treasure trove of email and financial data from the Enron corporation, which would normally be strictly confidential but became public when the company went bankrupt in a blizzard of fraud.  Follow our lead as we wrestle this dataset into a machine-learning-ready format, in anticipation of trying to predict cases of fraud.\n\n###Lesson 6 and 7: Regressions and Outliers\nRegressions are some of the most widely used machine learning algorithms, and rightly share prominence with classification.  What?s a fast way to make mistakes in regression, though?  Have troublesome outliers in your data.  We?ll tackle how to identify and clean away those pesky data points.\n\n###Lesson 8: Unsupervised Learning\n\n**K-Means Clustering:** The flagship algorithm when you don?t have labeled data to work with, and a quick method for pattern-searching when approaching a dataset for the first time.\n\n###Lessons 9-12: Features, Features, Features\n\n**Feature Creation:** Taking your human intuition about the world and turning it into data that a computer can use.\n\n**Feature Selection:** Einstein said it best: make everything as simple as possible, and no simpler.  In this case, that means identifying the most important features of your data.\n\n**Principal Component Analysis:** A more sophisticated take on feature selection, and one of the crown jewels of unsupervised learning.\n\n**Feature Scaling:** Simple tricks for making sure your data and your algorithm play nicely together.\nLearning from Text: More information is in text than any other format, and there are some effective but simple tools for extracting that information.\n\n###Lessons 13-14: Validation and Evaluation\n\n**Training/testing data split:** How do you know that what you?re doing is working?  You don?t, unless you validate.  The train-test split is simple to do, and the gold standard for understanding your results.\n\n**Cross-validation:** Take the training/testing split and put it on steroids.  Validate your machine learning results like a pro.\n\n**Precision, recall, and F1 score:**  After all this data-driven work, quantify your results with metrics tailored to what is most important to you.\n \n###Lesson 15: Wrapping it all Up\nWe take a step back and review what we?ve learned, and how it all fits together.  \n\n###Projects\n\nMini-project at the end of each lesson\n\n**Final project:** searching for signs of corporate fraud in Enron data",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-machine-learning--ud120?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh6.ggpht.com/CnktNdwaisHPcxH0faZZ5FVBCYuaSoVU2l_3rXujMyG9Em8GcZof-rIbH7sjmzL3BaBeTF4qXn3r3zAP0O4=s0#w=1170&h=242",
      "short_summary": "This class will teach you the end-to-end process of investigating data through a machine learning lens, and you'll apply what you've learned to a real-world data set.",
      "slug": "intro-to-machine-learning--ud120",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "Machine Learning is a first-class ticket to the most exciting careers in data analysis today. As data sources proliferate along with the computing power to process them, going straight to the data is one of the most straightforward ways to quickly gain insights and make predictions.  \n\nMachine learning brings together computer science and statistics to harness that predictive power. It?s a must-have skill for all aspiring data analysts and data scientists, or anyone else who wants to wrestle all that raw data into refined trends and predictions.\n\nThis is a class that will teach you the end-to-end process of investigating data through a machine learning lens. It will teach you how to extract and identify useful features that best represent your data, a few of the most important machine learning algorithms, and how to evaluate the performance of your machine learning algorithms.\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd002\">Data Analyst</a> Nanodegree.",
      "expected_duration": 10
    },
    {
      "instructors": [
        {
          "bio": "Sarah Sproehnle is the Vice President of Educational Services at Cloudera, a company that helps develop, manage and support Apache Hadoop.  While she is a geek at heart, her passion is helping people learn complex technology.  In addition to teaching people how to use Hadoop, she's taught database administration, various programming languages, and system administration.",
          "image": "https://lh3.ggpht.com/r6shPndBg0wnPGHDAjd-6GC2OD_rW9N9dSbboXeBvGOwKv7pZ3QGLPVhrPl9f961bnm-hfQ__a1G6-S3wg=s0#w=966&h=966",
          "name": "Sarah Sproehnle"
        },
        {
          "bio": "Ian Wrigley is currently the Senior Curriculum Manager at Cloudera, responsible for the team which creates all the company's Hadoop training materials. He's been a tech journalist, an instructor, and a course author for over 20 years, during which time he's taught everything from C programming to copywriting for the Web. He describes his job as \"teaching geeks to be geekier\".",
          "image": "https://lh6.ggpht.com/KM9X5WCSWfw32PlvYOAGOAroFc5bPlMWhUBFbHWXEJfREQmrrMDwjGNI5zobOp5t8win0b9xV1igWMiuOVQ=s0#w=330&h=330",
          "name": "Ian Wrigley"
        }
      ],
      "subtitle": "How to Process Big Data",
      "key": "ud617",
      "image": "https://lh5.ggpht.com/JJc55ckwLOPH2koySqtvwd8Hc4vzFodhg-x5JxcvFKth-dKW_iD8zy9Ax2W8oPvyR6iOYoeVPRvclIhVmdE=s0#w=1725&h=1060",
      "expected_learning": "- How Hadoop fits into the world (recognize the problems it solves)\n- Understand the concepts of HDFS and MapReduce (find out how it solves the problems)\n- Write MapReduce programs (see how we solve the problems)\n- Practice solving problems on your own",
      "featured": false,
      "project_name": "Implement MapReduce",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=44K_bzTL_SM"
      },
      "title": "Intro to Hadoop and MapReduce",
      "related_degree_keys": [

      ],
      "required_knowledge": "Lesson 1 does not have technical prerequisites and is a good overview of Hadoop and MapReduce for managers.\n\nTo get the most out of the class, however, you need basic programming skills in Python on a level provided by introductory courses like our <a target=\"_blank\" href=\"https://www.udacity.com/course/cs101\">Introduction to Computer Science</a> course.\n\nTo learn more about Hadoop, you can also check out the book <a href=\"http://www.amazon.com/gp/product/1449311520/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=1449311520&linkCode=as2&tag=udacity-20\" target=\"_blank\">Hadoop: The Definitive Guide</a>.",
      "syllabus": "### Lesson 1\nWhat is \"Big Data\"? The dimensions of Big Data. Scaling problems.  HDFS and the Hadoop ecosystem.\n\n### Lesson 2\nThe basics of HDFS, MapReduce and Hadoop cluster.\n\n### Lesson 3\nWriting MapReduce programs to answer questions about data.\n\n### Lesson 4\nMapReduce design patterns.\n\n### Final Project\nAnswering questions about big sales data and analyzing  large website logs.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-hadoop-and-mapreduce--ud617?utm_medium=referral&utm_campaign=api",
      "project_description": "Use MapReduce to reveal surprising trends in Udacity forum data.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nm2pwAgDaPrJlaXa0CDW4vPhm4ixgz7tYSB3DtjCAQ9Dk9GQCisyguBRqE4A7i-S5ZS2Am6z89q9qt5fFMNG=s0#w=130&h=60",
          "name": "Cloudera"
        }
      ],
      "tracks": [
        "Data Science",
        "Software Engineering"
      ],
      "banner_image": "https://lh4.ggpht.com/05Dcr-kT6tfnSS2NEkyUCbKrCQPKDCUUG3p1FA2Kd-Qu72BkOBnTk-d5naoIzHxFOvSiog5Q9w_r3i0-uuY=s0#w=4680&h=968",
      "short_summary": "In this short course, learn the fundamentals of MapReduce and Apache Hadoop to start making sense of Big Data in the real world!",
      "slug": "intro-to-hadoop-and-mapreduce--ud617",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "The Apache? Hadoop? project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Karthik is the engineering manager and technical lead of Storm, the real-time analytics  engine@Twitter. He has two decades of experience working in parallel databases, big data  infrastructure and networking. He co-founded Locomatix, a company that specializes in real  time streaming processing on Hadoop and Cassandra using SQL that was acquired by Twitter.  Prior to Locomatix, Karthik was at Juniper Networks and Greenplum. At the University of Wisconsin, he worked extensively in parallel database systems, query processing, scale out technologies, storage engine and online analytical systems.  Several of these research were spun as a company later acquired by Teradata. He is the author of several publications, patents and one of the best selling book \"Network Routing: Algorithms,  Protocols and Architectures\". He has a Ph.D. in Computer Science from University of Wisconsin,  Madison.",
          "image": "https://lh6.ggpht.com/XKbP05Z7qqy3gMVLcXOT3Xn1CybmY0nsf7s3-_SL4kJMAQB7ojfw9se_QrWSK24dNXQOqF8eqsAUKpbwRhDG=s0#w=1000&h=1000",
          "name": "Karthik Ramasamy"
        }
      ],
      "subtitle": "The \"Hadoop of Real-Time\"",
      "key": "ud381",
      "image": "https://lh6.ggpht.com/UfMbnNAjbz9gpWVzFhmYyOJg-5paoozIIkVhKWHAGNLpfaptKrysZxyuiQlqVkYiCHhyBBlJiowyxzHStn0P=s0#w=1748&h=1075",
      "expected_learning": "Learn by doing! The world is going real time.  Batch processing, popularized by Hadoop, has latency exceeding required real-time demands of modern mobile, connected, always-on users.  Stream processing with seconds-required response time is necessary to meet this demand. Twitter is a world leader in real-time processing at scale.  Learn the future from the company defining it.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Real-Time Analytics with Apache Storm",
      "related_degree_keys": [

      ],
      "required_knowledge": "Programming language required: Java\n\nTo be successful, you'll need intermediate knowledge of Java. Specifically, this is defined by experience and comfort with Java syntax, compile & run-time error diagnostics and debugging, ability to use javadocs as needed, and intermediate data structures including Arrays, HashMaps, and LinkedLists.  If you need to build these skills, a good starting point is Udacity?s <a href=\"https://www.udacity.com/course/cs046\">Introduction to Java</a> with additional comfortability needed identifying and debugging compile & run-time errors.\n\nNo prior experience is assumed in Ubuntu, git, Maven, Redis, Flask (Python) or d3 (Javascript).  Python is useful, but optional.  A basic course such as CS101 or OO in Python would be helpful.",
      "syllabus": "###Lesson 1\nJoin instructor Karthik Ramasamy and the first Udacity-Twitter Storm Hackathon to cover the motivation and practice of real-time, distributed, fault-tolerant data processing.  Dive into basic Storm Topologies by linking to a real-time d3 Word Cloud Visualization using Redis, Flask, and d3. \n\n###Lesson 2\nExplore Storm basics by programming Bolts, linking Spouts, and finally connecting to the live Twitter API to process real-time tweets.  Explore open source components by connecting a Rolling Count Bolt to your topology to visualize Rolling Top Tweeted Words.\n\n###Lesson 3\nGo beyond Storm basics by exploring multi-language capabilities to download and parse real-time Tweeted URLs in Python using Beautiful Soup.  Integrate complex open source bolts to calculate Top-N words to visualize real-time Top-N Hashtags.  Finally, use stream grouping concepts to easily create streaming join to connect and dynamically process multiple streams.\n\n###Lesson 4\nWork on your final project and we cover additional questions and topics brought up by Hackathon participants.  Explore Vagrant, VirtualBox, Redis, Flask, and d3 further if you are interested!\n\n###Final Project: Construct a Storm Topology\nDesign a Storm Topology and new bolt that uses streaming joins to dynamically calculate Top-N Hashtags and display real-time tweets that contain trending Top Hashtags.  Post your visualization to the forum and tweet them to your Twitter followers.\n\n###Project Extensions\nUse additional features of the real-time Twitter sample stream or use any data source to drive your real-time d3 visualization.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/real-time-analytics-with-apache-storm--ud381?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/D1Lxkd2F-dSW06wEaALD4LnYUkAt3wMEDxZ8Hc6YWtOs_H3cRyZ3wX81YZNXoo35oKYJH6bgyMceYsTf2Gls=s0#w=520&h=240",
          "name": "Twitter"
        }
      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh5.ggpht.com/nTmzg9gnSSpQ9nO1vuyErMxcZFYZtcUn9JMi4e31DyRR8gLYS8ynTTElKwJfEDik9sWFUQAaHmOa_cibkLI=s0#w=1170&h=242",
      "short_summary": "The world is trending in real time! Learn Apache Storm, taught by Twitter, to scalably analyze real-time tweets and drive d3 visualizations. Storm is free, open and fun!",
      "slug": "real-time-analytics-with-apache-storm--ud381",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "The world is trending in real time!  Learn from Twitter to scalably process tweets, or any big data stream, in real-time to drive d3 visualizations using Apache Storm, the ?Hadoop of Real Time.?  Storm is free, open source, and fun to use!  Learn from Karthik Ramasamy, Technical Lead of Storm@Twitter, about the distributed, fault-tolerant, and flexible technology used to power Twitter?s real-time data flow pipeline.  Twitter open sourced Storm in 2011, and it graduated to a top-level Apache project in September, 2014.  \n\nStarting from basic distributed concepts presented during our first Udacity-Twitter Storm Hackathon, link Storm concepts to Storm syntax to scalably drive Word Cloud visualizations with Vagrant, Ubuntu, Maven, Flask, Redis, and d3.  Link to the public Twitter gardenhose stream to process live tweets, parse embedded URLs, and calculate Top worldwide hashtags.  Extend beyond Storm basics by exploring multi-language capabilities in Python, integrate open source components, and implement real-time streaming joins.\n\nIn your final project, follow real-time trending topics by implementing the data pipeline to visualize only tweets that contain Top worldwide hashtags.  Extend your project by exploring the Twitter API, or any data source, alongside Hackathon participants as they design their own ideas, receive feedback from Karthik, and open source a final project calculating real-time tweet sentiment and geolocation to drive a U.S. Map.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Before joining Udacity, Caroline worked as a Software Engineer at Quixey, a startup building a search engine for apps.  While receiving her undergraduate degree from Carnegie Mellon, she was a TA for six different courses, and that same love for teaching later led her to join Udacity. Outside of work, she likes reading fiction, playing board games, and drinking bubble tea.",
          "image": "https://lh4.ggpht.com/BguyLDX-W3dEJFcXQaQZ4xLVvxpjKrwzC6CJyDbAGOm_BtIxgKNk94sq4Wxuhb4621aV6d5XFQYYOc8Jrck=s0#w=1476&h=1476",
          "name": "Caroline Buckey"
        }
      ],
      "subtitle": "Data Analysis Using NumPy and Pandas",
      "key": "ud170",
      "image": "https://lh3.googleusercontent.com/oN7SxjOKxWSTnGr965xejpQxz7PDyojhhCDON_7-O0CIYTSCWkehbB4H6fni7rtbGW5K-EZ80aVz50Os6ck=s0#w=1553&h=954",
      "expected_learning": "This course is a good first step towards understanding the data analysis process as a whole. Before delving into each individual phase, it is important to learn the difference between all phases of the process and how they relate to each other. After taking this course, you will be better positioned to succeed in other courses in the [Data Analyst Nanodegree program](https://www.udacity.com/course/data-analyst-nanodegree--nd002). For example, a student who started with [Data Analysis with R](https://www.udacity.com/course/data-analysis-with-r--ud651), which covers the exploratory data analysis phase, might not understand at that point the difference between data exploration and data wrangling. By taking this course first, you will learn what each phase accomplishes and how it fits into the larger process.\n\nThis course also covers the Python libraries NumPy, Pandas, and Matplotlib, which are indispensable tools for doing data analysis in Python. Their many convenient functions and high performance make writing data analysis code a lot easier!",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to Data Analysis",
      "related_degree_keys": [

      ],
      "required_knowledge": "To take this course, you need to be comfortable programming in Python.\n\n* You should be familiar with if statements, loops, functions, lists, sets, and dictionaries. To learn about any of these topics, take the course [Intro to Computer Science](https://www.udacity.com/course/intro-to-computer-science--cs101).\n* You should also be familiar with classes, objects, and modules. To learn about these topics, take the course [Programming Foundations with Python](https://www.udacity.com/course/programming-foundations-with-python--ud036).",
      "syllabus": "### Lesson 1: Data Analysis Process\n\nIn this lesson, you will learn about the data analysis process, which includes posing a question, wrangling and exploring your data, drawing conclusions and/or making predictions, and communicating your findings. You will complete an analysis of Udacity student data using pure Python, with minimal reliance on additional libraries.\n\n### Lesson 2: NumPy and Pandas for 1D Data\n\nIn this lesson, you will start learning to use NumPy and Pandas to make the data analysis process easier. This lesson focuses on features that apply to one-dimensional data. You'll learn to use NumPy arrays, Pandas Series, and vectorized operations.\n\n### Lesson 3: NumPy and Pandas for 2D Data\n\nIn this lesson, you'll continue learning about NumPy and Pandas, this time focusing on two-dimensional data. You'll learn to use two-dimensional NumPy arrays and Pandas DataFrames. You'll also learn to group your data and to combine data from multiple files.\n\n### Final Project: Investigate a Dataset\n\nIn the project, you will use NumPy and Pandas to go through the data analysis process on one of a list of recommended datasets.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-data-analysis--ud170?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh3.googleusercontent.com/kL2AB-KAvzx_AnWG6ImK-nKrYBYBE2ZrHxzTbixnxs59jWnXD-tXdplXztt8HXj9azLXigm0azNnP2SeTJ4=s0#w=4672&h=968",
      "short_summary": "Explore a variety of datasets, posing and answering your own questions about each. You'll be using the Python libraries NumPy, Pandas, and Matplotlib.",
      "slug": "intro-to-data-analysis--ud170",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "This course will introduce you to the world of data analysis. You'll learn how to go through the entire data analysis process, which includes:\n\n* Posing a question\n* Wrangling your data into a format you can use and fixing any problems with it\n* Exploring the data, finding patterns in it, and building your intuition about it\n* Drawing conclusions and/or making predictions\n* Communicating your findings\n\nYou'll also learn how to use the Python libraries NumPy, Pandas, and Matplotlib to write code that's cleaner, more concise, and runs faster.\n\nThis course is part of the [Data Analyst Nanodegree](https://www.udacity.com/course/data-analyst-nanodegree--nd002).",
      "expected_duration": 6
    },
    {
      "instructors": [
        {
          "bio": "Dave Holtz is currently a data scientist at Airbnb. Before Airbnb, he was formerly a data science engineer at Yub, the world's first online-to-offline affiliate network, and he also worked as a product manager and data scientist at TrialPay. Dave holds an M.A. in physics and astronomy from the Johns Hopkins University and a B.A. in physics from Princeton University. In addition to data science, Dave is passionate about cosmology, smart cities, music, theater, and improv comedy.",
          "image": "https://lh5.ggpht.com/qGIzE-bB0uLo9HZOSl6tkitVnI1ffvgg6xb_81-MrynyStg0_hwnpcwYKqPyZBcF8_JCQUxgiVsQfRYb6Ro=s0#w=383&h=383",
          "name": "Dave Holtz"
        }
      ],
      "subtitle": "Learn What It Takes to Become a Data Scientist",
      "key": "ud359",
      "image": "https://lh3.ggpht.com/PGzMw8H7sLoOMDvdpLVdg3rMH7xCnGtC6w5j47_ezPLh61QGgi0pzZoC-vrVUqpXmOggNgJGBcDd-NWC0Og=s0#w=1724&h=1060",
      "expected_learning": "You will have an opportunity to work through a data science project end to end, from analyzing a dataset to visualizing and communicating your data analysis.\n\nThrough working on the class project, you will be exposed to and understand the skills that are needed to become a data scientist yourself.",
      "featured": false,
      "project_name": "Investigate New York Subway Data",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=ZB38GB4EF7s"
      },
      "title": "Intro to Data Science",
      "related_degree_keys": [

      ],
      "required_knowledge": "The ideal students for this class are prepared individuals who have:\n\n*   Strong interest in data science\n*   Background in intro level statistics\n*   Python programming experience\n*   Or understanding of programming concepts such as variables, functions, loops, and basic python data structures like lists and dictionaries\n\nIf you need to brush up on your programming, we highly recommend [Introduction to Computer Science: Building a Search Engine](https://www.udacity.com/course/cs101). If you need a refresher on statistics, enroll in [Intro to Descriptive Statistics](https://www.udacity.com/course/ud827) and [Intro to Inferential Statisitics](https://www.udacity.com/course/ud201). All three are on Udacity!",
      "syllabus": "### Lesson 1: Introduction to Data Science\n\n- Introduction to Data Science\n- What is a Data Scientist\n- Pi-Chaun (Data Scientist @ Google): What is Data Science?\n- Gabor (Data Scientist @ Twitter): What is Data Science?\n- Problems Solved by Data Science \n- Pandas\n- Dataframes\n- Create a New Dataframe\n\n### Lesson 2: Data Wrangling \n\n- What is Data Wrangling?\n- Acquiring Data\n- Common Data Formats\n- What are Relational Databases?\n- Aadhaar Data \n- Aadhaar Data and Relational Databases\n- Introduction to Databases Schemas\n- API?s\n- Data in JSON Format\n- How to Access an API efficiently \n- Missing Values\n- Easy Imputation\n- Impute using Linear Regression\n- Tip of the Imputation Iceberg\n\n### Lesson 3: Data Analysis\n\n- Statistical Rigor\n- Kurt (Data Scientist @ Twitter) - Why is Stats Useful?\n- Introduction to Normal Distribution\n- T Test\n- Welch T Test\n- Non-Parametric Tests\n- Non-Normal Data\n- Stats vs. Machine Learning\n- Different Types of Machine Learning\n- Prediction with Regression \n- Cost Function\n- How to Minimize Cost Function\n- Coefficients of Determination\n\n### Lesson 4: Data Visualization\n\n- Effective Information Visualization\n- Napoleon's March on Russia\n- Don (Principal Data Scientist @ AT&T): Communicating Findings\n- Rishiraj (Principal Data Scientist @ AT&T): Communicating Findings Well\n- Visual Encodings\n- Perception of Visual Cues\n- Plotting in Python\n- Data Scales\n- Visualizing Time Series Data\n\n### Lesson 5: MapReduce\n\n- Big Data and MapReduce\n- Basics of MapReduce\n- Mapper\n- Reducer\n- MapReduce with Aadhaar Data\n- MapReduce with Subway Data",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-data-science--ud359?utm_medium=referral&utm_campaign=api",
      "project_description": "Use statistical analysis, machine learning, and MapReduce to discover interesting patterns and trends about the New York Subway.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh5.ggpht.com/BeeZTWQPl18GIaxjjjfOM7X2hoGqIj_c-wlovtGe-PF4KBEiqFkOjGHfHqUcO-PtZ0KQ6loO3y5bJXrQOJI=s0#w=1170&h=242",
      "short_summary": "What does a data scientist do? In this course, we will survey the main topics in data science so you can understand the skills that are needed to become a data scientist!",
      "slug": "intro-to-data-science--ud359",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "The Introduction to Data Science class will survey the foundational topics in data science, namely:\n\n*   Data Manipulation\n*   Data Analysis with Statistics and Machine Learning\n*   Data Communication with Information Visualization\n*   Data at Scale -- Working with Big Data  \n\nThe class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science.\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd002\">Data Analyst</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Steve Huffman co-founded the social news site <a href=\"http://reddit.com\" target=\"_blank\">reddit.com</a> in 2005 with his college roommate. reddit.com has since grown into one of the largest communities online. In 2010, he co-founded <a href=\"https://www.hipmunk.com\" target=\"_blank\">Hipmunk</a>, a company to take the agony out of searching for plane and hotel tickets. Steve was named to Inc. Magazine's 30 under 30 list in 2011. He studied Computer Science at the University of Virginia.",
          "image": "https://lh3.ggpht.com/8U2ky8BOagj01omsrbrCcaEwruAvqMAidZQvq7IxFfall9m85tkh5VIKBhqTLoCzQLuy5YhEeOcrKIEh=s0#w=200&h=200",
          "name": "Steve Huffman"
        }
      ],
      "subtitle": "How to Build a Blog",
      "key": "cs253",
      "image": "https://lh4.ggpht.com/FraZoWIlsBTNmgBjNwvDshsBj84aycbTS5wxWU1KocDigABnbxTbIo7DyYs_QKoC8xM00kxLGln0ckL5Huo=s0#w=436&h=268",
      "expected_learning": "By taking this course, you will embark on a digital adventure to build your very own application live on the web. Valuable lessons often come from experience, and it?s from this experience that Steve brings a fresh perspective to the classroom to show you how to approach building your web application in a way that assuages the potential challenges you may face. \nIn this course, you will learn by doing. Once you dive into the course experience, you will work on awesome projects: \n\n- Have you ever thought about what it takes to build a blog from the ground up? Over the course of six lessons, you will build a blog together with Steve that will be fully functional, online, for anybody to read by the end of the course. \n\n- Have you ever wondered how a  <a href=\"http://en.wikipedia.org/wiki/Wiki\" target=\"_blank\">wiki</a> works? As a final project for this course, you will be able to take all of your newly gained knowledge and apply it to build a complete wiki. \n\nThis course concentrates on back-end development, but regardless if you are interested in front-end development, back-end development, or anywhere in between the stack, this course will teach you the fundamental knowledge you need break into the web development world. Are you ready to dive in?",
      "featured": false,
      "project_name": "Build Your Own Wiki",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=4z37fUbpJ3s"
      },
      "title": "Web Development",
      "related_degree_keys": [

      ],
      "required_knowledge": "In order to take the full advantage of this course, we want you to be well prepared for it. This course assumes an intermediate proficiency programming with Python, as well as a solid knowledge on the following topics: \n\n- Basic computer science concepts such as procedures, decision statements, and loops. \n- Basic data structures such as lists, dictionaries, and hash tables. \n- Object-oriented programming. \n\nPlease feel free to peek at the <a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Intro to Computer Science</a> and <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Foundations with Python</a> courses to make sure you are comfortable with these required concepts for the course.",
      "syllabus": "###Lesson 1: How the Web Works (2.5 hours)\nIn this first lesson, you will learn basic concepts regarding the internet, browsers, HTML, and how all those elements fit together. You?ll start using HTML (HyperText Markup Language) to format content for webpages. Then you?ll get to see the mechanics of how the web works: HyperText Transfer Protocol (HTTP) via GET and POST requests. In the first problem set, you will get a simple website up and running with the Google App Engine platform. \n\n###Lesson 2: Forms and Input (4 hours)\nIn this second lesson you will learn about forms, a very common way to obtain input from users. You will learn how to get and process user input from webpages using Google App Engine to get a live form up and running. By the end of this lesson, you will know how to validate user input and securely obtain data from users.\n\n\n###Lesson 3: Databases (6 hours)\nYou learned about getting all sorts of information from users in the previous lesson, but what do you do with it once it?s in your hands? You store it! In this third lesson, Steve will dive in and teach you what you need to know about databases, the final piece you need to start setting your blog in motion! You will learn about various database technologies, SQL, and the Google App Engine Datastore.\n\n###Lesson 4: User Accounts and Security (6 hours)\nIn this fourth lesson, you will learn the fundamentals of authentication and security, which are very relevant topics in almost any web application built today. We?ll start by examining how websites use cookies to authenticate users and how we can manage cookies from the backend of a web application. You will implement a login system for your blog and learn how to use hashing to securely read and transmit user passwords.\n\n###Lesson 5: APIs (4.5 hours)\nUp until now, your programs have generated HTML that a browser can use to render a web page for the user. In the digital world, however, applications and websites communicate not only with people, but also with other applications and websites. By the end of this lesson, your blog will communicate with humans as well as with other computers. Your web application can generate data in formats such as XML and JSON that other computers can access through an API, or application programming interface. Those computers, in turn, can build websites or services that interact with your data. You?ll first learn how to use APIs, and then build web applications as services so that other computers can glean data from your application. We will look at both XML and JSON by investigating how to read them, how to interpret them, and how to manipulate them. \n\n###Lesson 6: Caching (3.5 hours)\nIn this lesson, we will explore how to prepare your applications to run at a large scale. So far, we've written 'toy' applications for just one or two users. If we want to start writing apps for thousands or, perhaps, even millions of users, then obviously we'll need to think about scaling. When we talk about scaling, this may mean running your application on multiple machines, storing huge amounts of data, or consuming large amounts of bandwidth. In particular, we will learn about caching, including the uses of caching, why you might want to cache, and specific caching implementations such as Memcached. \n\n###Lesson 7: Scaling Up (2.5 hours)\nIn this last lesson of the course, Steve has prepared a relaxing, story-time segment. You will hear web development anecdotes from people who have been through it all. You will enjoy interviews with engineer Neil Williams from Reddit, and engineer Chris Chew from Udacity. They will share their experiences on working with web applications, and you will see how all that you?ve learned in this course comes into the big picture.\n\n###Final Project (8 hours)\nFor the final project, you will build a fully functional wiki - a website that allows any page to be edited. The wiki you will be able to build by the end of the course will feature the following: \n\n- Easily create new pages of the site by using the wiki edit capabilities. You should be able to enter a non-existent URL, redirect to an edit page, and create a new page from there. \n- Have user accounts so that logged-in users only will have edit privileges. \n- Use caching functionality.\n- Have a history section which displays the different wiki versions that have existed.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/web-development--cs253?utm_medium=referral&utm_campaign=api",
      "project_description": "Make a webpage that anyone can add to and edit.",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh4.ggpht.com/584I4_QVgpXdMLhWszZFCz3f0z0Vhvc3x4m3eglC0xInNCyMGoszlnPlwIrtRks3-MM5k1_DnSTIjp7ch7A=s0#w=4680&h=968",
      "short_summary": "Starting from the basics of how the web works, you will learn everything you need to know to build your own blog and scale it to support large numbers of users.",
      "slug": "web-development--cs253",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. ?Where should I even begin? How long is this going to take me? Am I making any mistakes along the way?? The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. \n\nIn this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building <a href=\"http://www.reddit.com/\" target=\"_blank\">Reddit</a> and, more recently, <a href=\"http://www.hipmunk.com/\" target=\"_blank\">Hipmunk</a>, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Marcus Phillips works as Dean & CTO at Hack Reactor's 12 week immersive coding school, now offered onsite or online. He has worked professionally with the full stack, but is focused on JavaScript and fine-tuning his \"rapid-iteration teaching\" approach to education. Most recently he provided technical editing to the latest edition of Eloquent JS, and also runs training tracks for JSConf and HTML5 DevConf. Prior to co-founding Hack Reactor, Marcus led several technical training initiatives and worked on the JavaScript framework internals at Twitter.",
          "image": "https://lh5.ggpht.com/dXyQPw1_zcyT9Wx-wV8MYQ_hX-H1IsrjnIjXxuX16WauPMJ8PPbJ2xbw_0zkEJTo9WDYyWzxXiGlUwv87ng=s0#w=522&h=522",
          "name": "Marcus Phillips"
        }
      ],
      "subtitle": "Writing Reusable and Maintainable Code",
      "key": "ud015",
      "image": "https://lh3.ggpht.com/RQ6qVahymlxJnOFi2Fn6p6iLNwMQmchGjyJcJuqDUyhNBHkfmrxHYvDhApGA2rptOzmsSA_XZ8V-VV9uEQ=s0#w=1724&h=1067",
      "expected_learning": "As a <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a>, JavaScript is one of the most important languages in your toolbox. A strong foundation in the language?s features empowers you to write efficient and performant web applications. In this course you?ll explore a variety of ways to write object-oriented code in JavaScript.\n\nYou?ll build a variety of JavaScript objects and explore how their different inheritance models affect your code?s execution and in-memory model. You?ll use these features to write memory efficient code and seek simplicity and modularity in your own code.",
      "featured": false,
      "project_name": "Classic Arcade Game Clone",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Object-Oriented JavaScript",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course is for beginner to intermediate web developers with an understanding of JavaScript syntax. Specifically, you should know how to write control structures, how to write simple functions, and recognize the different variable types in JavaScript. As well as be able to read existing JavaScript code with these features and predict its outcome. If you need a refresher on these prerequisites, check out our <a href=\"https://www.udacity.com/course/ud804\" target=\"_blank\">JavaScript Basics</a> course!",
      "syllabus": "### Lesson 1: Scopes and Closures\nWe?ll start by discussing JavaScript?s functional variable scoping features, including lexical scopes (variable availability as you write your code) and dynamics scopes (variable availability as your code actively runs). We?ll then discuss closures, an often misunderstood but incredibly useful feature available in only a handful of languages, including JavaScript.\n\n### Lesson 2: The Keyword ?this?\nYou?ll start your dive into JavaScript object-oriented features by first discovering the parameter ?this?. You?ll learn how the value of ?this? is determined within various code structures and why it might be a lot easier to think of ?this? as a parameter rather than a keyword.\n\n### Lesson 3: Prototype Delegation\nYou?re probably using one of JavaScript?s inheritance models already: prototype delegation! In this lesson you?ll learn more about this unique feature of JavaScript, how JavaScript uses this feature internally and how you can take advantage of it to maximize your application?s memory footprint.\n\n### Lesson 4: Code Reuse\nThere are numerous ways to write concise, maintainable and reusable code in JavaScript and you?ll practice a number of them in this lesson. We?ll start writing a library using basic functions and learn the decorator pattern. Then, we?ll refactor this library into the functional, prototypal and pseudoclassical inheritance models. Finally, we?ll explore sub-classing -- coding objects that directly inherit from objects we?ve previously defined.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/object-oriented-javascript--ud015?utm_medium=referral&utm_campaign=api",
      "project_description": "Use your object-oriented JavaScript skills to develop a performant, organized and easily maintainable version of the classic arcade game, Frogger.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh5.ggpht.com/MSwsMHYEHEnF4_3bak3dDEdW8DyY5Q1-jgLUqTFDT4Qp5kFYTQrHTrsHTaDUI1X7q8QLC9a1yyG5JcriFg=s0#w=130&h=60",
          "name": "Hack Reactor"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh4.ggpht.com/QIOjpBdsW61aLEl4KiJXWqaWB0QTNRkIAMNccA95DZoy7-b2aHMOYgBlcKuKHuvyPepy8SfACQ3vSEggB3s=s0#w=4680&h=968",
      "short_summary": "Build a variety of JavaScript objects and explore how their inheritance models affect your app's in-memory model. Gain simplicity and modularity in your own code.",
      "slug": "object-oriented-javascript--ud015",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "Have you been dabbling with JavaScript but find your files keep turning into a mess of spaghetti code? Do you find yourself copying and pasting lines of code over and over throughout your application? Surely there?s a better way, right? \n\nYes, there is a better way -- object-oriented programming will allow you to build websites using reusable blocks of code known as libraries, similar to using bricks to build a house. This course is designed to teach web developers how to utilize the various object-oriented programming features within JavaScript, and more importantly, how to write reusable and maintainable libraries that will make your life easier.",
      "expected_duration": 5
    },
    {
      "instructors": [
        {
          "bio": "James Williams first fell in love with teaching while working as an instructor at a computer camp. He runs obstacle course/adventure races in his spare time and is the author of HTML5 Game Programming, which has been translated into Chinese and Korean. He holds degrees in Computer Science (BA, MS) and French (BA).",
          "image": "https://lh3.ggpht.com/XG9jWlrbNqQXp9OJjfasItFVPEVTXV0AMYOsNcydhnLHJw3CKByD4kqHOiJJIv4hBDodwry36kEKkWVkbqg=s0#w=442&h=442",
          "name": "James Williams"
        },
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "From Pixels to Animation!",
      "key": "ud292",
      "image": "https://lh4.ggpht.com/eypKKAxmyK2LpMKULiQy76aAkS5M5-da0k9eUNP2HeK4bk7_ZgjAV65pAwSu-hjWM-sSwdUJkNeZAG8Wx8o=s0#w=1724&h=1060",
      "expected_learning": "You should take this course if you want to move beyond static HTML tag content and build on your JavaScript skills to make interactive and engaging experiences. Maybe you want to start on the journey of creating a game or complex animations, maybe you want to create visually compelling compositions like infographs, or maybe you just want to make memes. Canvas to the rescue.\n\n*This is a recommended course for the <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> nanodegree, and will help you complete the Frogger project.*",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "HTML5 Canvas",
      "related_degree_keys": [

      ],
      "required_knowledge": "To succeed in this course, we expect you to have some HTML and JavaScript experience. You should at minimum understand loops, functions, and conditional statements(if/else). \n\nUdacity?s [JavaScript Basics course](https://www.udacity.com/course/ud804) and [HTML/CSS course](https://www.udacity.com/course/ud304) are good preparation for this course.",
      "syllabus": "You?ll learn how the Canvas 2D API works and how to use it to create interesting applications. Each sample project will expose you to different aspects of HTML5 Canvas that you can use to make your own applications.\n\n### Lesson 1: HTML5 Canvas Basics\n\nIn this lesson, we?ll discuss what the Canvas is, how it affects graphics in the browser and what makes it truly awesome. We?ll make compositions with text and images (e.g. memes) as we learn the API.\n\n### Lesson 2: From Pixels to Animation\n\nIn this lesson, we?ll learn about how images are stored by the Canvas2D context, how to modify them on a pixel level by applying various effects and filters, and how to create animations.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/html5-canvas--ud292?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh6.ggpht.com/I-TN7O_c6sPrp1USRyDMPcBohqlguELOAxhLJXt9QB94IJxaxiPK0x9E7mpgidNSmQS7PeD8b7ZawUc7PJ4p=s0#w=4680&h=968",
      "short_summary": "Learn how you can use HTML5 Canvas to create and modify images or even interactive animations.",
      "slug": "html5-canvas--ud292",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "Canvas is an HTML5 element which gives you drawable surface inside your web pages you can control with JavaScript. Powerful enough to use for compositing images and even creating games.\n\nIn this course, through several sample projects, you?ll learn how to use the canvas; how to make compositions using shapes, images, and text; how to create effects and filters on images and how to create animations.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "Manipulating Websites with Ease",
      "key": "ud245",
      "image": "https://lh3.ggpht.com/lB5iRpDRGX9DbDvxXD1yyJO_ogqX2_XX1zgeAV9tOovVPc6VLgTb77YglQ_CkILg7KQGoFGys04UYOk-C3Pf=s0#w=1753&h=1078",
      "expected_learning": "Due to jQuery?s popularity and ease of use, learning jQuery is a must for all front-end web developers. jQuery makes selecting DOM elements and manipulating them simple by providing a consistent API that works across all browsers.\n\nProficiency in using jQuery is an important skill that can speed up your development time and opens up a world of useful plugins.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to jQuery",
      "related_degree_keys": [

      ],
      "required_knowledge": "To succeed in this course, we expect you to have some HTML and JavaScript experience. You should at minimum understand loops, functions, and conditional statements (if/else). \n\nUdacity?s [JavaScript Basics course](https://www.udacity.com/course/ud804) and [HTML/CSS course](https://www.udacity.com/course/ud304) are good preparation for this course.",
      "syllabus": "In this course, you will learn how to use jQuery to select and navigate to DOM elements within your page, how to manipulate DOM elements by altering attributes, how to dynamically change content and how to add/remove DOM elements.\n\nMost importantly, you'll practice making sense of jQuery's documentation so that you'll be able to go beyond what you learn here and take advantage of jQuery's full suite of features!\n\n### Lesson 1: the DOM, $ and Selectors\n\n* The jQuery Object ($)\n* Basic DOM Structure\n* Selectors\n* Filters\n\n### Lesson 2: DOM Manipulation\n\n* Reading jQuery Documentation\n* Accessing HTML Attributes and Content\n* Modifying HTML Attributes and Content\n* Adding and Removing DOM Elements\n* Iterating with .each()\n* Using jQuery to run on DOM ready",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-jquery--ud245?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.ggpht.com/WEFejImzckqQTV8y6O9CRlpaA0EJZ4XO3NzcZRLeO8EumzobN63TRDI0IojjugodhS3HdsROf5y0bVQTqTm8=s0#w=4680&h=968",
      "short_summary": "Learn how to access and modify the DOM with ease using jQuery!",
      "slug": "intro-to-jquery--ud245",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "days",
      "summary": "jQuery is the most popular JavaScript library today, in use by over 60% of the top 100,000 most visited websites. This course will teach you how to use jQuery?s core features - DOM element selections, traversal and manipulation.\n\nYou'll also learn how to read and make sense of jQuery's documentation, making it easy for you to go beyond the methods taught in this class and take advantage of jQuery's full array of features!\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "Making Asynchronous Requests with jQuery",
      "key": "ud110",
      "image": "https://lh3.ggpht.com/VM0Wo-7nMo9PvvjHoUW1Wzey41PSKlVafZUt6-n9bnZAsyhT0J1eCvBFViRDCUoolBQTHAAaJs2E_A-mod8=s0#w=1724&h=1060",
      "expected_learning": "User experience is vital to the success of your website or web app. It?s important that the user?s experience be smooth and free of jank, yet the application will have to do things that take a long time to complete. AJAX allows app developers to interact with server-side APIs without pausing script execution or forcing the page to reload.\n\nPlus, learning how to query data APIs will open you to a tremendous amount of free data that?s freely accessible. Want to build a flight tracking app? How about a photo gallery with image search? Or what about a tweet viewer? Just find an API that provides the data you need, read the documentation and sample code, and query away!\n\nIf you want to build solid and fast web applications, knowing how to query servers using AJAX is a must.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to AJAX",
      "related_degree_keys": [

      ],
      "required_knowledge": "* Intermediate proficiency with JavaScript (equivalent to having finished JavaScript Basics).\n* Familiarity with HTML/CSS.",
      "syllabus": "###Inspiration\n\n* What is AJAX?\n* Why use an API?\n* How can you identify AJAX requests in existing websites?\n\n###Perspiration\n\n* Clone the Move Planner repository\n* Implement the Google Streetview API\n* Implement the NY Times API\n* Error handling normal AJAX requests\n* Implement the Wikipedia API\n* Error handling JSON-P requests\n\n###Meditation\n\n* What did you learn?\n* How else can you apply AJAX to make speedy page loads?\n* Go customize!",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-ajax--ud110?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.ggpht.com/Lc3FZ8DcGgnxDDdTuIajlUZHk01EOePRk1TD8zMt_Lx5-jO5cbr3QAUwmB6u7yodn66IKqtJoI8Ln5QMwqs=s0#w=4680&h=968",
      "short_summary": "Learn how to perform asynchronous requests as you build a web app with data from Google Street View, the New York Times and Wikipedia!",
      "slug": "intro-to-ajax--ud110",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "In this course you will learn how to make asynchronous requests with JavaScript (using jQuery?s AJAX functionality), and gain a better understanding of what?s actually happening when you do so. You will also learn how to use data APIs so you can take advantage of freely accessible data in your applications, including photo results, news articles and up-to-date data about the world around us.\n\nAs part of the course, you?ll be building a web app that will help people learn about a place where they want to move! Your app will query the Google Streetview, Wikipedia and New York Times APIs!\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Peter Norvig is Director of Research at Google Inc. He is also a Fellow of the American Association for Artificial Intelligence and the Association for Computing Machinery. Norvig is co-author of the popular textbook Artificial Intelligence: A Modern Approach. Prior to joining Google he was the head of the Computation Sciences Division at NASA Ames Research Center.",
          "image": "https://lh3.ggpht.com/Zvo2V0Xfae4jg2m3kMd221NocS56nliQwvXD38f9RredHSaS7QcoaOXL4wDQIcYeI32ISsIPZwur2JY_=s0#w=266&h=266",
          "name": "Peter Norvig"
        },
        {
          "bio": "Sebastian Thrun is a Research Professor of Computer Science at Stanford University, a Google Fellow, a member of the National Academy of Engineering and the German Academy of Sciences. Thrun is best known for his research in robotics and machine learning, specifically his work with self-driving cars.",
          "image": "https://lh4.ggpht.com/DG-7wffxjR7WqOHdXavbgsNlJ7ZKL2nuhY7hDiSijK7xISk3mCTgdM-9_JUGRjI-qfTk1iJCL5axjZEZDQ=s0#w=200&h=200",
          "name": "Sebastian Thrun"
        }
      ],
      "subtitle": "Learn the Fundamentals of AI",
      "key": "cs271",
      "image": "https://lh3.ggpht.com/DlphLMafw8ni4x7O98V2LyrnKDxsFJpEuuC-kuLyGbYHLYmdwnpu490a8isnp6j_vh-Y_sKCX8N_NUi1wM8=s0#w=436&h=268",
      "expected_learning": "Artificial Intelligence (AI) technology is increasingly prevalent in our everyday lives. It has uses in a variety of industries from gaming, journalism/media, to finance, as well as in the state-of-the-art research fields from robotics, medical diagnosis, and quantum science. In this course you?ll learn the basics and applications of AI, including: machine learning, probabilistic reasoning, robotics, computer vision, and natural language processing.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=VfnXzwduq6U"
      },
      "title": "Intro to Artificial Intelligence",
      "related_degree_keys": [

      ],
      "required_knowledge": "Some of the topics in Introduction to Artificial Intelligence will build on probability theory and linear algebra. You should have understanding of probability theory comparable to that covered in our <a href=\"https://www.udacity.com/course/st101\">Intro to Statistics</a> course.",
      "syllabus": "### Part I: Fundamentals of AI  \n- Overview of AI\n- Statistics, Uncertainty, and Bayes networks\n- Machine Learning\n- Logic and Planning\n- Markov Decision Processes and Reinforcement Learning\n- Hidden Markov Models and Filters\n- Adversarial and Advanced Planning\n\n### Part II: Applications of AI  \n- Image Processing and Computer Vision\n- Robotics and robot motion planning\n- Natural Language Processing and Information Retrieval",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-artificial-intelligence--cs271?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [

      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh4.ggpht.com/4LdIV9ZQk3F0DfxNa1pBqEH4gKlIk0mhVr_sIZ0XsQOOWcVDb75lKIiNsUrMPcztUitqStBimMkw4-T8Qr8=s0#w=4680&h=968",
      "short_summary": "This course will introduce you to the basics of AI. Topics include machine learning, probabilistic reasoning, robotics, computer vision, and natural language processing.",
      "slug": "intro-to-artificial-intelligence--cs271",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Artificial Intelligence (AI) is a field that has a long history but is still constantly and actively growing and changing. In this course, you?ll learn the basics of modern AI as well as some of the representative applications of AI. Along the way, we also hope to excite you about the numerous applications and huge possibilities in the field of AI, which continues to expand human capability beyond our imagination.\n\n***Note: Parts of this course are featured in the <a href=\"https://www.udacity.com/course/machine-learning-engineer-nanodegree--nd009\">Machine Learning Engineer Nanodegree</a> and the <a href=\"https://www.udacity.com/course/data-analyst-nanodegree--nd002\">Data Analyst Nanodegree</a> programs. If you are interested in AI, be sure to check out those programs as well!***",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "<a href=\"http://www.deaneckles.com/\" target=\"_blank\">Dean Eckles</a> is a social scientist, statistician, and member of the Data Science team at Facebook. His primary focus is how interactive technologies affect human behavior by mediating, amplifying, and directing social influence ? and the statistical methods to study these processes. Dean holds degrees from Stanford University in philosophy (BA), cognitive science (BS, MS), and statistics (MS), and communication (PhD).",
          "image": "https://lh4.ggpht.com/DFxWJGS9KNZa_rUAGZSty9eMc5B04VSWopqMozU3jFIdpg4iesxiuOClln9aJgtiOM--nrzT8A1mMyttKA=s0#w=403&h=403",
          "name": "Dean Eckles"
        },
        {
          "bio": "Moira Burke is a Data Scientist at Facebook, where she combines her social psychology and data munging chops to understand how people perceive their audience online and how various uses of the site improve psychological well-being. She received her Ph.D. in Human-Computer Interaction from Carnegie Mellon University, and a B.A. in Computer Science from the University of Oregon. When not coaxing data into pretty plots, she sings a cappella. Badly.",
          "image": "https://lh4.ggpht.com/3pyQrNZ4SQNCVqFtx9zHMOP8bJE6-KkgFg8rluxdDcCACLbQRn3ulm5xq-qar_PzCeRcWnMYIu8u14wC1dM=s0#w=2751&h=2721",
          "name": "Moira Burke"
        },
        {
          "bio": "After graduating from Emory in 2008, Chris dabbled in college admissions for a year, which led him to teach high school mathematics in Oakland. He radiates a love for learning and believes everyone deserves a great education. In 2012, Chris joined Udacity to reach thousands of students and share his joy of problem solving with the world.",
          "image": "https://lh5.ggpht.com/3FcHpj6lxOjg0wm-u8mbnLWSSHUq5aXd8wJtSP9CBCd5MM7X6DMcVYVdJMtuFCoZGuEJnUQSlkd8aNBY8Q4b=s0#w=2000&h=2000",
          "name": "Chris Saden"
        },
        {
          "bio": "<a href=\"http://solomonmessing.wordpress.com/\" target=\"_blank\">Solomon Messing</a> is a political scientist with Facebook's Data Science Team.  His research and teaching focus on political advertising and campaigns, social influence, and design and analysis of experiments.  His work has appeared in the American Political Science Review, Public Opinion Quarterly, and Communication Research.  Solomon completed his Ph.D. in political communication and M.S. in Statistics at Stanford.",
          "image": "https://lh5.ggpht.com/Ll25JZLdAZ2wYwU5Z6Hyz8s3YeWQJvz_GYgM4tASMInR6-FlPgv9c5R8a8d5N4Ruw9bZzTOGonw1pHBAWg=s0#w=2658&h=2658",
          "name": "Solomon Messing"
        }
      ],
      "subtitle": "Visually Analyze and Summarize Data Sets",
      "key": "ud651",
      "image": "https://lh3.ggpht.com/lmdonpHvisppe4bgIF9a5UaEcM_78F0s6egR2hmVw5HnQGLuornNJCfpsNhBuGVokCpfn0WasYsqytT52elY=s0#w=1725&h=1060",
      "expected_learning": "You will...\n\n*   Understand data analysis via EDA as a journey and a way to explore data\n*   Explore data at multiple levels using appropriate visualizations\n*   Acquire statistical knowledge for summarizing data\n*   Demonstrate curiosity and skepticism when performing data analysis\n*   Develop intuition around a data set and understand how the data was generated.",
      "featured": false,
      "project_name": "Explore a Data Set",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Data Analysis with R",
      "related_degree_keys": [

      ],
      "required_knowledge": "A background in statistics is helpful but not required. Consider taking [Intro to Descriptive Statistics](https://www.udacity.com/course/ud827) and [Intro to Inferential Statistics](https://www.udacity.com/course/ud201) prior to taking this course. Relevant topics include:  \n\n*   Mean, median, mode\n*   Normal, uniform, and skewed distributions\n*   Histograms and box plots\n\n<br />\nFamiliarity with the following CS and Math topics will help students:  \n\n*   Variable assignment\n*   Comparison and logical operators ( <, >, <=, >=, ==, &, | )\n*   If else statements\n*   Square roots, logarithms, and exponentials",
      "syllabus": "### Lesson 1: What is EDA? (1 hour)\nWe'll start by learn about what exploratory data analysis (EDA) is and why it is important. You'll meet the amazing instructors for the course and find out about the course structure and final project.\n\n### Lesson 2: R Basics (3 hours)\nEDA, which comes before formal hypothesis testing and modeling, makes use of visual methods to analyze and summarize data sets. R will be our tool for generating those visuals and conducting analyses. In this lesson, we will install RStudio and packages, learn the layout and basic commands of R, practice writing basic R scripts, and inspect data sets.\n\n### Lesson 3: Explore One Variable (4 hours)\nWe perform EDA to understand the distribution of a variable and to check for anomalies and outliers. Learn how to quantify and visualize individual variables within a data set as we begin to make sense of a pseudo-data set of Facebook users. While the data set does not contain real user data, it does contain a wealth of information. Through the lesson, we will create histograms and boxplots, transform variables, and examine tradeoffs in visualizations.\n\n### Problem Set 3 (2 hours)\n\n### Lesson 4: Explore Two Variables (4 hours)\nEDA allows us to identify the most important variables and relationships within a data set before building predictive models. In this lesson, we will learn techniques for exploring the relationship between any two variables in a data set. We'll create scatter plots, calculate correlations, and investigate conditional means.\n\n### Problem Set 4 (2 hours)\n\n### Lesson 5: Explore Many Variables (4 hours)\nData sets can be complex. In this lesson, we will learn powerful methods and visualizations for examining relationships among multiple variables. We'll learn how to reshape data frames and how to use aesthetics like color and shape to uncover more information. Extending our knowledge of previous plots, we'll continue to build intuition around the Facebook data set and explore some new data sets as well.\n\n### Problem Set 5 (2 hours)\n\n### Lesson 6: Diamonds and Price Predictions (2 hours)\nInvestigate the diamonds data set alongside Facebook Data Scientist, Solomon Messing. He'll recap many of the strategies covered in the course and show how predictive modeling can allow us to determine a good price for a diamond. As a final project, you will create your own exploratory data analysis on a data set of your choice.\n\n### Final Project (10+ hours)\nYou've explored simulated Facebook user data and the diamonds data set. Now, it's your turn to conduct your own exploratory data analysis. Choose one data set to explore (one provided by Udacity or your own) and create a RMD file that uncovers the patterns, anomalies and relationships of the data set.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/data-analysis-with-r--ud651?utm_medium=referral&utm_campaign=api",
      "project_description": "Jump into a new dataset. Explore, create plots, and summarize the fascinating things you find.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh5.ggpht.com/fBUnCweTMmEe0VId4I2F6QW0FS_kA4dXi0BOYim7ZpRBy-9YhxDEFy9ue3eHht3EpLSRjIrWXMyG_hjwig=s0#w=130&h=60",
          "name": "Facebook"
        }
      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh6.ggpht.com/ZxfMGgj7Xy2O_rEiPTuynKoobC01ZiVEDYyz3QnRblsG7IQhtKakV1h2olgRWcXSw03pF0ofRSOljLgzHIw=s0#w=1170&h=242",
      "short_summary": "Data is everywhere and so much of it is unexplored. Learn how to investigate and summarize data sets using R and eventually create your own analysis.",
      "slug": "data-analysis-with-r--ud651",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Exploratory data analysis is an approach for summarizing and visualizing the important characteristics of a data set. Promoted by [John Tukey](http://en.wikipedia.org/wiki/John_Tukey), exploratory data analysis focuses on exploring data to understand the data?s underlying structure and variables, to develop intuition about the data set, to consider how that data set came into existence, and to decide how it can be investigated with more formal statistical methods.\n\nIf you're interested in supplemental reading material for the course check out the <a href=\"http://www.amazon.com/gp/product/0201076160/ref=as_li_ss_il?ie=UTF8&camp=1789&creative=390957&creativeASIN=0201076160&linkCode=as2&tag=udacity-20\">Exploratory Data Analysis</a> book. (Not Required)\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd002\">Data Analyst</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Nazmul Idris is a Developer Advocate at Google. He is a developer and designer focused on creating awesome user experiences powered by Android and Cloud technologies. He created the UXD for Developers show on the Android Developers Channel on YouTube, and started the UXD for Developers G+ community. In addition to UX design and engineering, he's passionate about mobile and cloud computing, startups, and innovation.",
          "image": "https://lh5.ggpht.com/hqp4TmDfgqq_VgDiT-Nn280-Vmh3HDPCnJT_Y1LWS03N_hbRH0M2RR1FMmWIMYlNfI5i3WHSkFLiEUaKzyQ=s0#w=320&h=320",
          "name": "Nazmul Idris"
        },
        {
          "bio": "Izabel Grey is an Android Interaction Designer and Prototyper at Udacity. Previously, she cofounded a mobile startup, serving as the Chief Experience Officer. Izabel is dedicated to improving UX Design of mobile apps through education, advocacy, meetups and workshops. When she's not busy designing the next generation of mobile software, you can find her doing Ashtanga yoga or driving at the racetrack.",
          "image": "https://lh4.ggpht.com/2LmWowmKf7KnSlEaen4ljaK5vqJG6TGCAyErfWr2L388W1GSRcnggChUAoRBj1w0KbwxYhkZ_lFSnasn2w1Y=s0#w=170&h=170",
          "name": "Izabel Grey"
        }
      ],
      "subtitle": "Learn to Design a 5-Star Android App",
      "key": "ud849",
      "image": "https://lh3.googleusercontent.com/fjvDI57Yr-cJGSVWpLP2y9vYt_KmkI2wPYttsLfspVZBSB-y_0Jho2Q63v82FiiDgF8918gzwLt-8CJx5h8=s0#w=1724&h=1060",
      "expected_learning": "UX (User Experience) is a big deal. Though the term is often confused with User Interface, UI is only only a tiny subset of UX (we?ll talk about the difference in Lesson 1).\n\nYou should take this course because well-designed apps are just as important as well-built apps.\n\nThe goal of this course is to help you understand the most important and immediately useful techniques and approaches used by great mobile UX designers. This course won?t turn you into a designer, but it will help you incorporate design elements into the products you build.",
      "featured": false,
      "project_name": "Blueprint Your Own Android App",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=9gyvr2VET8M"
      },
      "title": "UX Design for Mobile Developers",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course is optimized for the developer who is looking to efficiently learn the most important design techniques that will help them make better apps (with a focus on mobile/Android).\n\nThat said, programming experience is not required to benefit from the design principles and best practices we teach in this course.",
      "syllabus": "### Overview\nThe goal of this course is to help you build better apps by helping you become a design-minded developer. In Lessons 1 and 2, you will learn widely applicable design principles and techniques like high-level UX planning and user-centered design.\n\nIn Lessons 3 and 4, you will focus on design ideas specific to mobile/Android development. Mobile platforms all come with a unique set of constraints and opportunities and this lesson will help you respect those constraints while taking advantage of the opportunities. \n\n### Lessons\n\n#### Lesson 1: What is User Experience?\nIn this lesson you will think about User Experience from the highest level. You will break down complex apps into a small number of simple steps and think about their big picture flow (including ones that you have worked on in the past or are currently working on). \n\n*Topics covered:*\n\n* What is UX?\n* UI vs. UX\n* High-level planning\n* Low-fi wireframing and prototyping\n* Two concrete app improvements to implement now\n\n#### Lesson 2: User-Centered Design\nIn this lesson you will learn how to design apps that your users will love. You will learn the importance of user-centered design, what happens when you design for everyone/no one (spoiler alert: it?s generally bad), and how to effectively use tools like personas and use cases to ensure a baseline level of quality for anything you build. You will also learn a bit about how to use cheap and easy user research techniques to make well-informed design decisions. \n\n*Topics covered:*\n\n* The perils of ignoring your user\n* How to create effective personas and use cases\n* Low cost user research\n* How to use personas and use cases to inform feature lists\n\n#### Lesson 3: Designing for Mobile Constraints\n\nMobile design and development come with constraints and opportunities. This lesson is about the constraints. You will learn what constraints are inherent to mobile development and how to use design tools and techniques to ensure your app actually respects those constraints. \n\n*Topics covered:*\n\n* The 5 big constraints: limited data, finite battery, hand-held usage, divided user attention, and small screens.\n* The implications of these constraints and what happens when you get them wrong.\n* Advanced wireframing\n\n#### Lesson 4: Designing for Android Delight\n\nAt this point, you will already know how to make a solid mobile app that users like. But like isn?t enough! In order to be really successful, your app needs to be *loved*. In this lesson, you?ll learn how to leverage the power of Android by using device sensors and Google APIs to understand your user?s context.\n\n*Topics covered:*\n\n* Android sensors\n* The importance of contextual apps\n* The ?components? of context\n* Android APIs (Google Play Services)\n\n### Final Project\nIn your final project, you will create high/mid-level design specifications for your own incredible Android app. You'll begin work on this project in the Assignments for Lesson 2, and continue working on it until the end of the course. \n\nWhen it's finished, you will have the blueprint for an app that will:\n\n* Be designed for a specific target user.\n* Have an almost-perfect high level flow.\n* Avoid all major mobile pitfalls.\n* Use Android sensors and APIs to understand your user's context and deliver context-aware moments of amazement that they will love.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ux-design-for-mobile-developers--ud849?utm_medium=referral&utm_campaign=api",
      "project_description": "Design and blueprint your own incredible Android app!",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Android"
      ],
      "banner_image": "https://lh6.ggpht.com/BTyvQ0dWSZvWg2gikHDH8oFxx285J-iBSWvV0isCF1nQVC0OP_L9AEv7Yux0TOp0Ad0S_W6e96DUJYvnQg=s0#w=4680&h=968",
      "short_summary": "This is a design course made for developers. You'll learn UX design skills which will help you make 5-star mobile apps that your users will love.",
      "slug": "ux-design-for-mobile-developers--ud849",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "This course is optimized for the developer who is looking to efficiently learn the most important design techniques that will help them make better apps (with a focus on mobile/Android). \n\nThis is a UX design course built for current (and aspiring) mobile developers. In this short course, you'll step back from your IDE and dive into the techniques that great designers use to plan and prototype amazing apps before any code is written.\n\n####[Download Udacity's Android app](https://play.google.com/store/apps/details?id=com.udacity.android) to keep learning wherever you go!",
      "expected_duration": 6
    },
    {
      "instructors": [
        {
          "bio": "Samantha Ready is a Developer Evangelist at salesforce.com. She has been with Salesforce for three years, and prior to evangelism was part of an internal development team building prototypes and apps on the platform. She graduated from UC Santa Cruz with a degree in computer engineering and a concentration in robotics and embedded systems, but as of late has focused on front end and mobile development. When she?s not sharing her love for Salesforce, you can find Sam scuba diving, scaling mountains, or searching for the world?s best hot sauce while listening to good music.",
          "image": "https://lh6.ggpht.com/B28dPOgssVkHszemBb41K8BrVjTqTkf_Q9ojQxEex7silXoMUPJ13AIIqbElNnPr0t0ltuKIM3PBqcyinXw=s0#w=404&h=404",
          "name": "Samantha Ready"
        },
        {
          "bio": "Mario Korf is a Developer Programs Manager at salesforce.com, who specializes in designing learning paths and documentation for new developers. During his six years at Salesforce, he has won several technical writing awards on subjects from application lifecycle management to mobile development. He created the popular Workbook series of tutorials, and is passionate about new and innovative ways for learning. Mario's excited to help with this project because it provides an alternative to traditional instructor-lead training, with a social, self-paced, and enjoyable experience out of the box. In his spare time, Mario is racing, building, or chasing something. He?s typically on or under the water.",
          "image": "https://lh3.ggpht.com/PZO5gtYT6Imv3A-OM9BXUq_KYkWmU4jmMHOiY6cDytwaHY3Suia4ZTmhMP84cRoCIMXfHjYae0GR6yvykQI=s0#w=337&h=337",
          "name": "Mario Korf"
        },
        {
          "bio": "Andy Brown is a Lead Instructor at Udacity. He has a degree in physics from MIT, and has devoted his time after graduating to teaching and learning. Since joining Udacity in 2012, Andy has helped design dozens of classes. He loves exploring this new educational medium by creating innovative and engaging courses. When he?s not figuring out the best ways to transform minds, you can find Andy on his bike or in his car, exploring the amazing experiences that his new California home has to offer.",
          "image": "https://lh6.ggpht.com/gzcZTQuXefPLSSaKithiGKzP5vcc_Gs-CbJjmuCTIn-YLsjzjvyWyBwnDXa-dVOf9EbOX03va4jFTdD4_w=s0#w=1800&h=1800",
          "name": "Andy Brown"
        }
      ],
      "subtitle": "Think It. Build It.",
      "key": "ud162",
      "image": "https://lh5.ggpht.com/kI0ik4ILo3V22AmxDwyaAYaTFH__6PXBFyIYqmmNei3qhTGJIyT-jLLmpooYEqMyM8BehSTQEGmlnvIJWrs7=s0#w=1757&h=1080",
      "expected_learning": "After completing this course you will have built your own web and mobile app. You will become familiar with the concept of abstraction and how to think about concrete problems in their most general sense -- a concept critical for all developers. In addition, you will learn how to map out a data model, create data visualizations, and automate manual processes after analyzing your abstractions.\n\nWhat kind of apps can you build? Well, Facebook uses a Salesforce app to manage their entire hire-to-retire process: collecting resumes, sharing feedback, making job offers, and developing talent. And the Obama 2012 campaign built apps to mobilize their vast volunteer network and visualize the pulse of the nation in real-time. What will you build?",
      "featured": false,
      "project_name": "Create Your Own Salesforce App",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=nB-OjiwuOTk"
      },
      "title": "Intro to Point & Click App Development",
      "related_degree_keys": [

      ],
      "required_knowledge": "Good news! You don't need any programming experience and you don't need to know anything about Salesforce. You'll learn the ins and outs of point-and-click development, so all you need now is an interest in building an app.\n\nOne thing you should know: the skills you learn in this course are in high demand and will help further your career.",
      "syllabus": "### Overview\nIn this class you?ll learn the basics of building apps with Force.com, a part of Salesforce Platform. These apps are typically business apps: they solve organizational and logistical problems. You probably wouldn?t use Salesforce to build a computer game (though you could!).\n\nThere are two ways to build apps in Force.com: with or without code. This class will only cover the non-coding, point-and-click app building interface. But don?t be fooled! Building powerful apps does not require writing code. \n\nThis class contains an introductory lesson, five primary lessons where you'll be building and learning (each of which has an accompanying problem set to practice your skills), and a final project where you'll put everything together.\n\n### Lesson 0: What is Salesforce (15 mins)\nWhat **is** Salesforce Platform? What does it do? Why should I learn about it? What kind of jobs can I get after I learn how to use it?\n\nIn this lesson, you?ll meet the instructors, get to know the class, and learn a bit about Salesforce in general. \n\n### Lesson 1: Creating your First App (90 minutes)\nIn this lesson you?ll get acquainted with Force.com and actually build the beginnings of your first app. You?ll get some experience taking a big problem (in this case, managing a music festival), breaking it into smaller parts, and representing those parts in Salesforce. As you do this, you?ll learn about the basic components of a Salesforce app and add some simple (but powerful) functionality to your app. More concretely, you?ll learn about:\n\n* **Salesforce Data**: Salesforce represents data as objects, fields, and records. You?ll learn what these terms mean and build them into your app. \n* **Relationships**: When the pieces of your app start communicating, interesting things can happen. In this lesson you?ll learn the basics of Salesforce relationship fields. \n* **Validation Rules**: If you?ve ever incorrectly entered your credit card number into a website, you already know about validation rules. In this lesson, you?ll learn how to build them into your app. \n* **Formulas and Summaries**: These tools let you easily keep track of quantifiable things like money spent, customers contacted, or tickets sold. In this lesson you?ll learn how to build these automated calculations into your app.  \n\n### Lesson 2: Building out your Data Model (90 mins)\nBehind every powerful business app is a well-planned data model (also known as a schema). In this lesson you?ll learn how to decompose a complex problem into its component pieces and then connect those pieces together with the appropriate relationship fields. The data model you build will serve as the schematic skeleton onto which you?ll build dynamic functionality in later lessons. The specific topics covered are: \n\n* **One-to-Many Relationships**: These relationships let the pieces of your app talk to each other. In this lesson you?ll learn how and when (and why) to use master-detail and lookup relationships in the apps you build. \n* **Many-to-Many Relationships**: You?ll learn how to use a junction object to add flexibility into your data model. \n* **Customizing the User Interface**: Good apps should be easy to use! In this lesson you?ll learn how to configure the layout of your app to make sure the UI is simple and intuitive.\n* **Schema Builder**: There are many ways to get things done in Salesforce. In this lesson you?ll start using the schema builder to understand how your app works.\n* **Data Loading**: This is a convenient way to get lots of data onto your app at once.\n\n### Lesson 3: Visualizing your Data (45 mins) \nNo matter what kind of app you?re building, you?ve probably got some data that you want other people in your organization to understand quickly and easily. In this lesson you?ll learn how quickly communicate information with  real-time data visualizations. Specifically, you?ll learn how to make:\n\n* **Reports**: These let you gather related information into one place.  These let you gather data according to specific criteria and display it in neat rows and columns. \n* **Charts**: These let you graphically summarize the information in a report.\n* **Dashboards**: Different people want access to different information. A dashboard is a collection of charts that give specific people in your organization exactly the information that they need in real-time.\n* **Views**: Data is good, but sometimes you have too much. Views let you selectively and quickly display only the data you care about.\n\n### Lesson 4: Adding Automation (45 mins)\nIn this lesson you?ll think about how to use your app to automate manual tasks. You?ll learn how to use two important Salesforce tools: \n\n* **Workflows**: There are situations where a series of steps need to happen in sequence: first do this, then do that. Workflows let you automate processes like these, such as sending an email, assigning a task, or updating a field.\n* **Approval Processes**: You don?t want every job to be completely automated. Sometimes you need someone to step in and say ?this looks good.? Approval processes add a human element to your automated tasks.\n\n### Lesson 5: Make it Social. Make it Mobile. (45 mins)\nThis is it. With a few clicks of the mouse you?ll make your app social and mobile. The tools you?ll use are:\n\n* **Chatter**: This will let your users collaborate on the projects and records they work on together.  \n* **Salesforce1**: That web app you?ve been building this whole time? It?s actually a mobile app too. You?ll even learn how to quickly customize your mobile interface and add functionality for mobile productivity. \n\n### Final Project: Build your own App (2-4 hours)\nBy the time you get here, you will have already built a music festival management app. Now it?s time to take your own idea and turn it into a functional web and mobile app.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-point-click-app-development--ud162?utm_medium=referral&utm_campaign=api",
      "project_description": "Design and build your own mobile-friendly Salesforce app.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/ep44q8coJ4PnTRDDS-VrohCW056ts0kxfmzoY_XleHvhU7_AhE8Z368FJXk7FMrnRgt1zwyNw0a7TxyYKLc=s0#w=1040&h=480",
          "name": "Salesforce"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh5.ggpht.com/NaWEGnVTrwLQwzIzNM7m0uQCu1hv0nJL3Y12-F_Ml8iOUxA4Y1ozHrYnokYsPhLq9fCSwuoO3h9hUoqm00I=s0#w=4680&h=968",
      "short_summary": "In this short class you'll build powerful apps without writing code. Great if you're an aspiring developer or someone who wants to learn what programmers do.",
      "slug": "intro-to-point-click-app-development--ud162",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "This class teaches you how to build powerful web and mobile apps and host them in the cloud, without writing a line of code.\n\nBy the end of this short course, you'll use the skills you've developed to conceptualize and create your own app. To get you there, your instructors Samantha and Andy will first help you build an app that could be used to manage logistics at a music festival. Though this is a very specific app use case, the skills you learn will be applicable to just about any business app you?d want to develop.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Magnus Hyttsten works as a Developer Advocate at Google. He is an uncompromising software technologist and product marketing fanatic who likes to work in fast-paced environments. Prior to joining Google, he worked for a company in the Telecommunications Industry that he co-founded and worked as CTO for since 2000. He enjoys the datacenter, statically-typed programming languages, evangelizing about technology, and doing things that have not been tried before. Right now, he is extremely passionate about connecting mobile devices with the Cloud.",
          "image": "https://lh3.ggpht.com/0ZA4ew0P_mOqjWMYIZVr2pcLnmDsYTXBXfkHDFmdot33SsUQH0iKqwrLCgIDPjIrgXUMYJZuAxeetB2SyfqS=s0#w=256&h=256",
          "name": "Magnus Hyttsten"
        },
        {
          "bio": "Jocelyn Becker wrote the developer documentation for the very first external Google API, the Adwords API, back in 2004, and she's been documenting Google APIs and training developers to use them ever since. For the past couple of years she's been developing and delivering training courses for Google Cloud products, and she wants to help others learn just how easy it is to get your web apps running when you use App Engine.",
          "image": "https://lh5.ggpht.com/rC9lz-jE8dNIqXaNJyRaDwfXfySDHSEuNvvRr8WrJihaPGKZNo-y8vuYqi3NlFI_H3pkKxo2pEjT11AIyDEI=s0#w=1021&h=1021",
          "name": "Jocelyn Becker"
        }
      ],
      "subtitle": "with Google App Engine",
      "key": "ud859",
      "image": "https://lh4.ggpht.com/8Cb3zFphgqikhWUZKSUoKs9iRUmQ-BNGjGDNVjmDFwUZvyrNyqntiqS2T1I2iSQIKB05NKvJ4ZYp4Fa_hgk=s0#w=1724&h=1060",
      "expected_learning": "Cloud computing is one of the fastest growing fields right now. And no wonder - it provides an easy and affordable way to run your applications. However, the traditional way of hosting and scaling applications on Virtual Machines in the Cloud comes with a cost - even if the infrastructure is virtual, you still have to manage it - do load balancing, bring instances up and down, take care of patching your software and in general spend a lot of your time and resources on just the infrastructure. \n\nGoogle is one of the pioneers in the business of scaling, and now you can use their infrastructure, and let them do all the scaling work so that you can focus on the unique features your app provides.\n\nAre you a Python developer? If so, maybe you'd like to check out our <a href=\"https://www.udacity.com/course/ud858\" target=\"_blank\">Developing Scalable Apps in Python</a> course.\n\nProject\n-------------\nThere will be an overarching project throughout the course, starting from Lesson 2. You will develop an application for organizing conferences, similar to sites like meetup.com or eventbrite.com. We have provided the frontend of the app, and all your effort will go into making the backend.\n\nAnd because you will be using Cloud Endpoints, it?s really easy to hook up your backend with a native mobile app. We have created an Android app that uses the same backend as the web frontend. You will able to recompile it against your backend, if you so wish!\n\nAt the end of the course you will do a final project, where you will have to expand the functionality of the same app.",
      "featured": false,
      "project_name": "Build Conference Central app",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=zdHgI3hOsHo"
      },
      "title": "Developing Scalable Apps in Java",
      "related_degree_keys": [

      ],
      "required_knowledge": "You should be fairly comfortable programming in Java, preferably with some experience developing web applications and working with databases for at least a year. You will be developing the backend of a sample app, so you don?t have to worry about HTML or JavaScript.\n\nYou should have sufficient permissions to install new software on your computer, and comfortable configuring it, including setting up system variables.\n\nWe will be using Maven and Eclipse for this course, and we strongly suggest that you use them as well.",
      "syllabus": "###Overview\nThis course consists of 6 lessons. First one is an overview of cloud computing and the benefits of Platform as a Service. Lessons 2-5 will cover important theoretical concepts of Google App Engine and also plenty of hands-on exercises implementing what you have learned. Lesson 6 will be a short intro on an easy way to create native mobile apps that talk to your backend.\n\n###Lesson 1: Scalability Basics\nDo you know how and why server racks were invented years ago? Have you realized all of the problems that you have to solve if you will try to scale your app by yourself? Learn about a better way.\n\n###Lesson 2: Getting Started\nSet up your first App Engine project and learn how to define Cloud Endpoints. \n\nStart the course project app - Conference Central and add authentication and user profiles.\n\n###Lesson 3: Storing and Retrieving Data\nOne of the most important things you want to do in your app is storing data. In this lesson you will learn what is Google App Engine Datastore, how is it different from RDBMS and how you can use it in your applications.\n\nAdd the ability to store and retrieve user profiles and conferences to the course project app.\n\n###Lesson 4: Advanced Datastore Concepts\nLearn more about how Datastore works, including queries, filters, indexes and transactions. \n\nAdd different ways to query conferences.\n\n###Lesson 5: Advanced App Engine Topics\nThere are a lot of things you might want your application to do in background, without making the user wait, or even initiate the process. Learn about task queues and cron jobs and how you can use them to add advanced functionality to your app. You will also learn about Memcache, and get an overview of topics like Edge Caching, AppStats and other methods of optimising your apps performance.\n\nAdd a push queue, cron job and a customised Memcache entry to your app.\n\n###Lesson 6: App Engine and Mobile Apps\nYou have been using Cloud Endpoints in the app, and now it?s time to see how you can use them in a mobile app. Learn how to generate native libraries for Android and iOS that can talk to your backend. You can even recompile the Android app we provide with our course, to work against your own project. How cool is that?\n\nGenerate mobile client libraries for your app.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/developing-scalable-apps-in-java--ud859?utm_medium=referral&utm_campaign=api",
      "project_description": "You will work on the Conference Central app throughout the course, with every lesson adding more functionality, and harnessing more of the power of Cloud App Engine.",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.googleusercontent.com/vcKw3Ke-8SZ_-P06FUYzNw5YrVLBLA89-m2ohWqF-enpYBLXH3rgqbLOTp1KockjSzHafO1c6yHmvfzTBdze=s0#w=1000&h=329",
          "name": "Google"
        }
      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh4.ggpht.com/Kb0P_aGrh1VkUYUAFqF_wUjsFOeMW52VHYYb7cg_wnDRhURTsKYizWZgWky4XByh9p5MisARsmusGdt8jDI=s0#w=4680&h=968",
      "short_summary": "You will learn about challenges of building applications that can serve hundreds of thousands of users, and how you can prepare for them as a developer.",
      "slug": "developing-scalable-apps-in-java--ud859",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "You will learn about challenges of building applications that can serve hundreds of thousands of users, and how you can prepare for them as a developer. And more importantly - you will learn how to harness the power of **App Engine** - Platform as a Service, run by Google, so you can focus on your application's features, not on managing infrastructure that runs your app. Let Google run and scale the infrastructure and do what you do best - write code! \n\nHowever, to use App Engine effectively, you have to learn how it works, and this is exactly what this course will teach! You will also learn the best practices of using <a href=\"https://cloud.google.com/products/cloud-endpoints/\" target=\"_blank\">Cloud Endpoints</a> that allow you to easily create RESTful services and make them accessible to iOS, Android and Javascript clients. They allow you to automatically generate client libraries to make wiring up the frontend easy. And there are some nifty built-in features, like denial-of-service protection and OAuth 2.0 support.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "David Luebke helped found NVIDIA Research in 2006 after eight years teaching computer science on the faculty of the University of Virginia. Dave's research on real-time 3D computer graphics led to an early interest in GPU computing when that field was still in its infancy. Today Dave is senior director of graphics research and a NVIDIA Distinguished Inventor. Dave lives in central Virginia with his wife and three boys, plays racquetball and ultimate frisbee, and prefers college hoops to the NBA. Find him at his <a href=\"http://luebke.us\">website</a> and <a href=\"http://twitter.com/davedotluebke\">@davedotluebke</a> on Twitter.",
          "image": "https://lh6.ggpht.com/aHwZ_Xn1it4MEIAIyCs94_TazutSUnOwnuIUquT7h38nL_bHEI8iRgkOew0Z99rrdkXaDJyYt17cI2JN-L0=s0#w=250&h=250",
          "name": "David Luebke"
        },
        {
          "bio": "John Owens is an associate professor of electrical and computer engineering at the University of California, Davis, where he leads a research group in parallel computing. He joined the faculty at UC Davis after many happy years as a student at Stanford (graduate) and Berkeley (undergraduate), and lives in Berkeley with his wife and daughter. In his free time, he enjoys puzzles, water polo, and pursuing a finite Erd?s-Bacon number. John has a <a href=\"http://www.ece.ucdavis.edu/~jowens/\" target=\"_blank\">web page</a> and (after his recent sabbatical at Twitter) is learning how to tweet at <a href=\"https://twitter.com/jowens\" target=\"_blank\">@jowens</a>.",
          "image": "https://lh5.ggpht.com/ggLVCtDhEDZbVR-b2ZGA7eaeTroVSPVw2n3qJCarJCauZvDRFWUzpEZNH_zUqaZZFkn0PZ24-k8QWuTK45Jv=s0#w=405&h=405",
          "name": "John Owens"
        }
      ],
      "subtitle": "Using CUDA to Harness the Power of GPUs",
      "key": "cs344",
      "image": "https://lh5.ggpht.com/lkq5D-G-UMgnK574HjI50bKwklgwoSqb37YRFYQnh6jQFravvrDPpxYUFbQFeJRkGLs-TkEBLF43omuUEfw=s0#w=436&h=268",
      "expected_learning": "You'll master the fundamentals of massively parallel computing by using CUDA C/C++ to program modern GPUs. You'll learn the GPU programming model and architecture, key algorithms and parallel programming patterns, and optimization techniques. Your assignments will illustrate these concepts through image processing applications, but this is a parallel computing course and what you learn will translate to any application domain. Most of all we hope you'll learn how to think in parallel.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": "https://www.youtube.com/watch?v=zb49vDrOxgA"
      },
      "title": "Intro to Parallel Programming",
      "related_degree_keys": [

      ],
      "required_knowledge": "We expect students to have a solid experience with the C programming language and basic knowledge of data structures and algorithms.",
      "syllabus": "### Lesson 1: GPU Programming Model\n\nProject 1: Greyscale Conversion (for that classy touch!)\n\n### Lesson 2: GPU Hardware and Parallel Communication\n\nProject 2: Smart Blurring (miracle product for removing wrinkles!)\n\n### Lesson 3: Fundamental Parallel Algorithms\n\nProject 3: HDR Tonemapping (when 1000:1 contrast is not enough!)\n\n### Lesson 4: Using Sort and Scan\n\nProject 4: Red Eye Removal (soothing relief for bright red eyes)\n\n### Lesson 5: Optimizing GPU Programs\n\nProject 5: Accelerating Histograms (when fast isn't fast enough)\n\n### Lesson 6: Parallel Computing Patterns\n\nProject 6: Seamless Image Compositing (polar bear in the swimming pool)\n\n### Lesson 7: The Frontiers and Future of GPU Computing",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-parallel-programming--cs344?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It?s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the ?Class Summary,? ?What Should I Know,? and ?What Will I Learn? sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you?re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It?s completely free! If you?re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I?m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/YgIpYQCMiQK4xwsqT1YA3up7cRTEUmucB9-jEhhymXFHusDvtM8WmYaQHIrjPFBxAcGyqJP1x9gscbq4ww0R=s0#w=130&h=60",
          "name": "Nvidia"
        }
      ],
      "tracks": [
        "Software Engineering"
      ],
      "banner_image": "https://lh4.ggpht.com/kjZiTQC-NBbbia18Obt4avt34hXd2Hce3nrEmj441ZDWk2p78LxXu95mxxcGNDqR0aVo86zlWpFPd2SvcKVI=s0#w=4680&h=968",
      "short_summary": "Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment by coding a series of image processing algorithms. #filters, #cuda.",
      "slug": "intro-to-parallel-programming--cs344",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself.  \n\n**Why It?s Important to Think Parallel**  \n\n[Third Pillar of Science][1]  \nLearn how scientific discovery can be accelerated by combining theory and experimentation with computing to fight cancer, prevent heart attacks, and spur new advances in robotic surgery.\n\n[1]: http://www.youtube.com/watch?v=3DbAB2ChDBw",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Sean Laraway has taught at San Jose State University since 2004. He completed a post-doctoral fellowship in Psychopharmacology. He has taught statistics at the undergraduate and graduate levels since 1998. He earned his MA and PhD in Behavior Analysis from Western Michigan University in 2003.",
          "image": "https://lh3.ggpht.com/vpVtxkUbh11TqF95VGfsG-DFlLlOjtfXv35xxCWbgHYY_MiaYVjt2X-AT3acMrqGH06cfGHNfnGprkNb3Qw=s0#w=320&h=320",
          "name": "Sean Laraway"
        },
        {
          "bio": "Ron Rogers has been a professor of psychology at San Jose State University since 1999. Dr. Rogers has developed and taught statistics and research methods courses at both the undergraduate and graduate level. He earned his M.A. and Ph.D. in Behavioral Neuroscience from Rutgers University in 1995.",
          "image": "https://lh3.ggpht.com/MaYFvovpA4cVUkUkxCpWDvCAO7bOIiy_tMWaafFc4ckcj3KtvaVyGdCUM0gD4qPaqKi28l_8v_IYtI7Yxg=s0#w=441&h=441",
          "name": "Ronald Rogers"
        }
      ],
      "subtitle": "Mathematics for Understanding Data",
      "key": "ud827",
      "image": "https://lh5.ggpht.com/nARp_CeSO3ILiHej7K63IJmbN2pzBNlz5A_btbgWiZTOMA9A03__DgsdO2ltcKk8ocEXjclUCmlI3aOkuBcu=s0#w=436&h=268",
      "expected_learning": "This course will teach you the basic terms and concepts in statistics as well as guide you through introductory probability. \n<br> <br>\nYou will learn how to....\n\n- Use statistical research methods.\n- Compute and interpret values like: Mean, Median, Mode, Sample, Population, and Standard Deviation.\n- Compute simple probabilities. \n- Explore data through the use of bar graphs, histograms, box plots, and other common visualizations.\n- Investigate distributions and understand a distributions properties.\n- Manipulate distributions to make probabilistic predictions on data.",
      "featured": false,
      "project_name": "Descriptive Statistics with Cards",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to Descriptive Statistics",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course assumes understanding of basic algebra and arithmetic.",
      "syllabus": "### Lesson 1 : Intro to Research Methods\nYou will be introduced to several statistical study methods and learn the positives and negatives of each. \n### Lesson 2 : Visualizing Data\nYou will learn how to take your data and display it to the world. You will learn to create and interpret histograms, bar charts, and frequency plots.\n### Lesson 3 : Central Tendency\nIn this lesson you will learn to compute and interpret the 3 measures of center for distributions: the mean, median, and mode.\n### Lesson 4 : Variability\nYou will learn how to quantify the spread of data using the range and standard deviation. You will also learn how to identify outliers in data sets using the concept of the interquartile range. \n### Lesson 5 : Standardizing\nYou will learn how to convert distributions into the standard normal distribution using the Z-score. You will also learn how to compute proportions using standardized distributions. \n### Lesson 6 : Normal Distribution\nYou will learn how to use normalized distributions to compute probabilities. You will also learn how to use the Z-table to look up the proportions of observations above, below, or in between values.  \n### Lesson 7 : Sampling Distributions\nYou will learn how to apply the concepts of probability and normalization to sample data sets.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-descriptive-statistics--ud827?utm_medium=referral&utm_campaign=api",
      "project_description": "Demonstrate what you have learned in this course by conducting an experiment by drawing from a deck of playing cards",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh3.ggpht.com/Y0z3c78ak_cooz9fomEdLeFN83jGp-mOJk82p8PFVJTbkrCVGkEIdAeitEIEeeOXTmrdl9HCHgJLBSWIq_wX=s0#w=4680&h=968",
      "short_summary": "Intro to Descriptive Statistics will teach you the basic concepts of statistics that can be used to extract information from data.",
      "slug": "intro-to-descriptive-statistics--ud827",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Statistics is an important field of math that is used to analyze, interpret, and predict outcomes from data. Descriptive statistics will teach you the basic concepts used to describe data. This is a great beginner course for those interested in Data Science, Economics, Psychology, Machine Learning, Sports analytics and just about any other field.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Sean Laraway has taught at San Jose State University since 2004. He completed a post-doctoral fellowship in Psychopharmacology. He has taught statistics at the undergraduate and graduate levels since 1998. He earned his MA and PhD in Behavior Analysis from Western Michigan University in 2003.",
          "image": "https://lh3.ggpht.com/vpVtxkUbh11TqF95VGfsG-DFlLlOjtfXv35xxCWbgHYY_MiaYVjt2X-AT3acMrqGH06cfGHNfnGprkNb3Qw=s0#w=320&h=320",
          "name": "Sean Laraway"
        },
        {
          "bio": "Ron Rogers has been a professor of psychology at San Jose State University since 1999. Dr. Rogers has developed and taught statistics and research methods courses at both the undergraduate and graduate level. He earned his M.A. and Ph.D. in Behavioral Neuroscience from Rutgers University in 1995.",
          "image": "https://lh3.ggpht.com/MaYFvovpA4cVUkUkxCpWDvCAO7bOIiy_tMWaafFc4ckcj3KtvaVyGdCUM0gD4qPaqKi28l_8v_IYtI7Yxg=s0#w=441&h=441",
          "name": "Ronald Rogers"
        }
      ],
      "subtitle": "Making Predictions from Data",
      "key": "ud201",
      "image": "https://lh5.ggpht.com/OD60sILjGeSrUb2O7nPqio4ym7qsZo7z_7M4vkxTeW4T_sj_mUosbK_omXfdDfyjK5oIv_XZGH1bOis8aMk=s0#w=1724&h=1060",
      "expected_learning": "This course will guide you through some of the basic tools of inferential statistics. \n<br> <br>\nThis course will cover:\n\n- estimating parameters of a population using sample statistics\n- hypothesis testing and confidence intervals\n- t-tests and ANOVA\n- correlation and regression\n- chi-squared test",
      "featured": false,
      "project_name": "Analyzing Your Own Dataset",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to Inferential Statistics",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course assumes basic understanding of Descriptive Statistics, specifically the following:\n\n- calculating the mean and standard deviation of a data set\n- central limit theorem\n- interpreting probability and probability distributions\n- normal distributions and sampling distributions\n- normalizing observations\n\nIf you need a refresher, check out our [Descriptive Statistics course](https://www.udacity.com/course/ud827)! The course also utilizes Google Spreadsheets as a tool.",
      "syllabus": "Inferential Statistics is a continuation of the material covered in [Descriptive Statistics](https://www.udacity.com/course/ud827), and so lesson numbers follow from that course:\n\n### Lesson 8: Estimation\nYou will learn how to estimate population parameters from sample statistics using confidence intervals and estimating the effect of a treatment.\n### Lesson 9: Hypothesis Testing \nYou will learn how to use critical values to make decisions on whether or not a treatment has changed the value of a population parameter.\n### Lesson 10,11: t-tests\nYou will learn how to test the effect of a treatment or compare the difference in means for two groups when we have small sample sizes.\n### Lesson 12,13: ANOVA\nYou will learn how to test whether or not there are differences between three or more groups.\n### Lesson 14: Correlation\nYou will learn how to describe and test the strength of a relationship between two variables.\n### Lesson 15: Regression \nYou will learn how to describe the way in which changes in one variable are related to changes in a second variable.\n### Lesson 16: Chi-squared Tests\nYou will learn how to compare and test frequencies for categorical data. \n### Final Project \nYou will use the methods you have learned in this course to perform an analysis on a dataset and report your findings. You will describe the data, calculate statistics, perform inference, and make conclusions.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-inferential-statistics--ud201?utm_medium=referral&utm_campaign=api",
      "project_description": "Perform an analysis on the dataset of your choice and write a complete and comprehensive writeup about your findings",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh5.ggpht.com/F8moDNQh-uVmQJgECq8EESBy3MX-pMfXbWmaqRGK17HRpReckB3dJXLFNVviOYky2vOkNQIywhVPLcs7jw=s0#w=4680&h=968",
      "short_summary": "Intro to Inferential Statistics will teach you how to test your hypotheses and begin to make predictions based on statistical results drawn from data!",
      "slug": "intro-to-inferential-statistics--ud201",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Inferential statistics allows us to draw conclusions from data that might not be immediately obvious. This course focuses on enhancing your ability to develop hypotheses and use common tests such as t-tests, ANOVA tests, and regression to validate your claims.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Ada is a senior research faculty at the College of Computing and the Center for Experimental Research in Computer Systems (CERCS) at Georgia Tech. Her interests include conducting experimental systems research, specifically addressing high-performance applications on distributed heterogeneous platforms, and focusing on topics that range from operating and distributed systems, to virtualization, to programmable network devices and communication accelerators, to active and adaptive middleware and I/O.",
          "image": "https://lh6.ggpht.com/sfGd_ElNmYGe8DX7DhoPtCBxOpqalEFEPOAZlG130yypnqS3_M5ZVes886weHWODqruZFDWOthjcC-cSjz4=s0#w=750&h=750",
          "name": "Ada Gavrilovska"
        }
      ],
      "subtitle": "Offered at Georgia Tech as CS 8803",
      "key": "ud923",
      "image": "https://lh5.ggpht.com/wzdXuj_K5LRvUF3lRjFcOzNsDkqjSsFOw-hXO2jC4fS0cETu0FUmzNmaCqP1B295nEhOFTewBml-GX8RF68=s0#w=1728&h=1062",
      "expected_learning": "The goals of this course are three-fold.\n\n1. Students will understand the rationale behind the current design and implementation decisions in modern OS?s (like Linux) by considering the historic evolution of various OS constructs\n2. Students will be exposed to theoretical knowledge regarding operating systems principles and implementation\n3. Students will gain knowledge via experimenting and evaluating various OS aspects in a practical manner",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Introduction to Operating Systems",
      "related_degree_keys": [

      ],
      "required_knowledge": "To undertake this course, you should have taken an undergraduate level course on, or be otherwise familiar with, basic hardware and software aspects of computer systems organization. Prior programming experience with C is recommended, as C is required for the practical component of this course.\n\nFor other requirements, see [Udacity's Technology Requirements](https://www.udacity.com/tech-requirements).",
      "syllabus": "The [Course Wiki](https://www.udacity.com/wiki/ud923) serves as the syllabus for Introduction to Operating Systems. But, for a high-level view of the course, we have listed the lessons:\n\n### Part 1: Introduction\n\n- Lesson 1: Course Overview\n- Lesson 2: Introduction to Operating Systems\n\n### Part 2: Process and Thread Management\n\n- Lesson 1: Processes and Process Management\n- Lesson 2: Threads and Concurrency\n- Lesson 3: Threads Case Study: PThreads\n- Lesson 4: Thread Implementation Considerations\n- Lesson 5: Thread Performance Considerations\n\n### Part 3: Resource Management and Communication\n\n- Lesson 1: Scheduling\n- Lesson 2: Memory Management\n- Lesson 3: Inter-Process Communication\n- Lesson 4: Synchronization Constructs\n- Lesson 5: I/O Management\n- Lesson 6: Resource Virtualization\n\n### Part 4: Distributed Systems\n\n- Lesson 1: Remote Services\n- Lesson 2: Distributed File Systems\n- Lesson 3: Distributed Shared Memory\n- Lesson 4: Data Center Technologies",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/introduction-to-operating-systems--ud923?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh4.ggpht.com/Ptr9GbZsWt_lB39b4MpOQGfjVKwNVrCxN0hzqlU6wzTPY1DXgvCmWQ5zpS_wpKjiG0j0woALntNWjhCE7Q3Z=s0#w=2340&h=484",
      "short_summary": "Introduction to Operating Systems teaches the basic operating system abstractions, mechanisms, and their implementations.",
      "slug": "introduction-to-operating-systems--ud923",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Introduction to Operating Systems is a graduate-level introductory course in operating systems. This course teaches the basic operating system abstractions, mechanisms, and their implementations. The core of the course contains concurrent programming (threads and synchronization), inter process communication, and an introduction to distributed operating systems. The course is split into four sections: (1) Introduction, (2) Process and Thread Management, (3) Resource Management and Communication, and (4) Distributed Systems.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Wenke Lee, Ph.D., is co-director of the new Institute for Information Security & Privacy (IISP) and responsible for continuing Georgia Tech's international leadership in cyber security research and education. Additionally, he is a professor of Computer Science in the College of Computing at Georgia Tech where he has taught since 2001 and served as director of the Georgia Tech Information Security Center (GTISC) research lab from 2012 to 2015.\n\nLee is one of the most prolific and influential security researchers in the world. He has published several dozen, oft-cited research papers at top academic conferences, including the ACM Conference on Computer and Communications Security, USENIX Security, IEEE Security & Privacy (\"Oakland\"), and the Network & Distributed System Security (NDSS) Symposium.",
          "image": "https://lh3.googleusercontent.com/wATMb2TU_FOGl71J_tI_DmhbKj14OsdnQSadamePR3kWu9gbh2PkDLB7Q20DqFgtCpe6xs6gCEWqulH3PBs=s0#w=753&h=791",
          "name": "Wenke Lee"
        },
        {
          "bio": "Professor Mustaque Ahamad, Ph.D., teaches in the College of Computing at Georiga Tech and is associate director of educational programs for the Institute for Information Security & Privacy. He has been associated with the Georgia Tech Information Security Center since 1998, including serving as its director from 2004 to 2012. GTIISP seeks to proactively work on understanding challenges associated with workforce development in cyber security. With oversight of formal degree programs and continuing education for working professionals, he is an advocate for greater cybersecurity education and training in order to meet the collective needs of industry and government.\n\nProfessor Ahamad's research interests are in the areas of converged communications security and security of healthcare systems. As smart phone like devices enable ubiquitous access to web and voice channels, the convergence of telephony with the Internet gives rise to new cross-channel threats that can combine online and voice attacks. For example, voice phishing with caller-id spoofing has been reported for stealing online banking credentials. His data-driven research approach for exploring cross-channel threats has resulted in better understanding of these threats and more effective ways to combat them. In the healthcare security area, he has worked on monitoring for detection of abuse and fraud.",
          "image": "https://lh3.googleusercontent.com/O-t4q4GN_9jStM19fbhnD0yHY0B_3dEbGJxaVX6K9rtKxiDaWX0Q-Ta_8J_R-AQPvY5akkODKrRF5PdPn34=s0#w=200&h=250",
          "name": "Mustaque Ahamad"
        }
      ],
      "subtitle": "Offered at Georgia Tech as CS 6035",
      "key": "ud459",
      "image": "https://lh3.googleusercontent.com/Pb0nWySWyAWnotDDcetjlldoMvh7YurzS-ERshfEDtb1VYiahpCbtWufyZVUqNb9_DJiYyGreU-FG1nnKfQ=s0#w=1389&h=788",
      "expected_learning": "",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to Information Security",
      "related_degree_keys": [

      ],
      "required_knowledge": "",
      "syllabus": "The course will be organized around a few broad themes:\n\n? Foundations: security mindset, essential concepts (policy, CIA, etc.)\n\n? Software security: vulnerabilities and protections, malware, program analysis\n\n? Practical cryptography: encryption, authentication, hashing, symmetric and asymmetric crypto\n\n? Networks: wired and wireless networks, protocols, attacks and countermeasures\n? Applications and special topics: databases, web apps, privacy and anonymity, voting, public policy\n\nThe course is divided into three parts:\nPart 1: \nPart 2:\nPart 3:",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-information-security--ud459?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "",
      "short_summary": "",
      "slug": "intro-to-information-security--ud459",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "",
      "summary": "This course provides a one-semester overview of information security. It is designed to help students with\nprior computer and programming knowledge ? both undergraduate and graduate ? understand this important\npriority in society today. The technical content of the course gives a broad overview of essential concepts and\nmethods for providing and evaluating security in information processing systems (operating systems and\napplications, networks, protocols, and so on). \n\nIn addition to its technical content, the course touches on the\nimportance of management and administration, the place information security holds in overall business risk,\nsocial issues such as individual privacy, and the role of public policy.",
      "expected_duration": 0
    }
  ],
  "tracks": [
    {
      "courses": [
        "ud730",
        "ud170",
        "cs101",
        "ud257",
        "ud120",
        "ud507",
        "ud617",
        "ud381",
        "ud651",
        "ud827",
        "ud201",
        "ud032",
        "ud919",
        "st101",
        "ud359",
        "ud262",
        "ud600"
      ],
      "name": "Data Science",
      "description": "Learn data science from industry experts at Facebook, Cloudera, MongoDB, Georgia Tech, and more. We offer courses in data science where you?ll learn to solve data-rich problems and apply this knowledge to your big data needs. Whether you?re new to the field or looking for additional training, we have introductory, advanced, and industry-specific courses to meet your learning goals."
    },
    {
      "courses": [
        "ud894",
        "ud890",
        "ud899",
        "ud898",
        "ud892",
        "ud898",
        "ud304",
        "ud804",
        "ud893",
        "ud388",
        "ud595",
        "ud882",
        "ud860",
        "ud858",
        "ud015",
        "ud197",
        "ud088",
        "ud330",
        "ud299",
        "ud775",
        "cs101",
        "ud989",
        "ud990",
        "ud549",
        "ud859",
        "ud036",
        "cs253",
        "ud110",
        "ud292",
        "ud245",
        "ud162",
        "ud436",
        "ud884",
        "cs256",
        "cs255"
      ],
      "name": "Web Development",
      "description": "Udacity web development courses are built with industry tech leaders such as Google, Salesforce, and others. These classes are designed to help you gain skills through web application development. You?ll learn the skills required to become a Front-End Engineer, Back-End Engineer, or a Full-Stack Engineer. Whether you?re trying to build your first website or you're trying to advance your skills we?ll teach you what you need to become a web developer."
    },
    {
      "courses": [
        "ud775",
        "cs101",
        "cs046",
        "ud036",
        "ud617",
        "ud805",
        "cs373",
        "ud032",
        "cs344",
        "cs271",
        "cs291",
        "cs258",
        "cs212",
        "cs215",
        "cs262",
        "cs387",
        "cs259",
        "cs313",
        "ud256"
      ],
      "name": "Software Engineering",
      "description": "Learn the skills you need to become or advance your skills as a Software Engineer. We offer a range of online courses that teach you the fundamentals of programming to advanced topics in computing such as parallel programming and software debugging. Start learning from industry experts from NVIDIA, Cadence, Autodesk and more!"
    },
    {
      "courses": [
        "ud837",
        "ud853",
        "ud825",
        "ud855",
        "ud009",
        "ud862",
        "ud875A",
        "ud875B",
        "ud875C",
        "ud875B",
        "ud867",
        "ud876-1",
        "ud876-2",
        "ud876-3",
        "ud876-4",
        "ud802",
        "cs046",
        "ud849"
      ],
      "name": "Android",
      "description": "Learn how to design and develop great Android apps through courses built by industry experts at Google."
    },
    {
      "courses": [
        "ud902",
        "ud585",
        "ud788",
        "ud421",
        "ud576",
        "ud325",
        "ud774",
        "ud607"
      ],
      "name": "iOS",
      "description": "In Udacity's iOS courses, you'll bridge the gap between the physical and the virtual. You'll learn to leverage common hardware features on iPhone and iPad, including the camera, microphone, GPS, gyroscope, and accelerometer to create engaging and interactive user experiences. Whether you want to build the app of your dreams or land a job as an iOS developer, you'll be developing for platforms used by hundreds of millions of people every day. And that's pretty rad."
    },
    {
      "courses": [
        "cs373",
        "ud810",
        "ud459",
        "ud955",
        "ud923",
        "ud189",
        "ud262",
        "ud600",
        "ud501",
        "ud915",
        "ud409",
        "ud805",
        "ud821",
        "ud007",
        "ud281",
        "ud436",
        "ud809",
        "ud061",
        "ud953",
        "ud098"
      ],
      "name": "Georgia Tech Masters in CS",
      "description": "In partnership with Georgia Tech and AT&T, Udacity offers access to individual Georgia Tech Online Masters in Computer Science courses. These advanced courses are taught in the full degree program from Georgia Tech and cover topics such as Artificial Intelligence and Machine Learning."
    },
    {
      "courses": [
        "ep245",
        "ud509",
        "ud518",
        "ud723",
        "ud719",
        "ud806",
        "design101",
        "ma004",
        "ma008",
        "ma006",
        "cs222",
        "ph100",
        "bio110",
        "ps001"
      ],
      "name": "Non-Tech",
      "description": "Udacity offers a range of online courses from Entrepreneurship, Design and Math to Physics and Genomics. These online courses are taught by subject matter experts in an engaging and interactive online experience. Check out the range of courses we have to offer."
    }
  ],
  "degrees": [
    {
      "instructors": [

      ],
      "subtitle": "Make Predictive Models",
      "key": "nd009",
      "image": "https://lh3.googleusercontent.com/PWyeYz9cpqhGoEFx47X2VKlSk6btXVUuuu1GUd86FdGzySI4_rUkinUGJuLe-VlultTKZkI0fr4oJitYQew=s0#w=1724&h=1060",
      "expected_learning": "The **Machine Learning Engineer Nanodegree program** will equip students with key skills, including data analysis and artificial intelligence, which will prepare them to fill roles with companies seeking machine learning experts (or to introduce machine learning techniques to their organizations). Many experts in this field go on to create new businesses as well, leveraging the vast capabilities of machine learning.\n\nProgram graduates will be able to:\n\n- Analyze the class and complexity of a given problem, and identify an appropriate algorithm and/or tools to apply towards solving it (e.g. gesture recognition, robot control).\n- Design an intelligent system that can act on the basis of input data towards optimizing some desired goal metric, with minimal supervision from a human.\n- Analyze the performance of an intelligent algorithm / system and present key metrics (such as accuracy, recall, computing time, etc. as appropriate) in an easy-to-understand and visually appealing form\nHandle the entire machine learning pipeline, from data to system:\n - Gather, clean, and process large data sets to prepare them for analysis\n - Develop multiple models to describe the data in those sets, validate those models, and compare those models according to standard metrics\n - Convert the data model into a live system that can process and reach conclusions on real data\n - Optimize the system based on real-world constraints, such as desired accuracy, efficiency, resource availability, and real-time responsiveness\n - Deploy the system in a live environment, such as an autonomous car, a recommender system, or a personal assistant",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Machine Learning Engineer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "Prior to entering the Machine Learning Engineer Nanodegree program, the student should have the following knowledge:\n\n- **Intermediate programming knowledge**, of the sort gained through the <a href=\"https://www.udacity.com/course/intro-to-programming-nanodegree--nd000\">Introduction to Programming Nanodegree</a>, other introductory programming courses or programs, or additional real-world software development experience. Including:\n - Strings, numbers, and variables\n - Statements, operators, and expressions\n - Lists, tuples, and dictionaries\n - Conditions, loops\n - Procedures, objects, modules, and libraries\n - Troubleshooting and debugging\n - Research & documentation\n - Problem solving\n - Algorithms and data structures\n<br>\n<br>\n- **Intermediate statistical knowledge**, of the sort gained through any of <a href=\"https://www.udacity.com/courses/data-science\">Udacity?s introductory statistics courses</a>. Including:\n - Populations, samples\n - Mean, median, mode\n - Standard error\n - Variation, standard deviations\n - Normal distribution\n - Precision and accuracy\n<br>\n<br>\n- **Intermediate calculus and linear algebra mastery**, addressed in the <a href=\"https://www.udacity.com/course/linear-algebra-refresher-course--ud953\">Linear Algebra Refresher Course</a>, including:\n - Derivatives\n - Integrals\n - Series expansions\n - Matrix operations through eigenvectors and eigenvalues\n\n<b>Take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-5714838578\" target=\"_blank\">Readiness Assessment</a> to find out if you're ready to get started.</b>\n\n***We have compiled additional resources for preparation <a href=\"https://www.udacity.com/wiki/nd009?nocache#!#preliminary-resources\">here</a>.***",
      "syllabus": "As a student in the Machine Learning Nanodegree program, you will build the  projects listed below. Each project has a **supporting course**. Reviewers will provide feedback on your projects and guidance on how to take your project to the next level.\n\n*Note: Unless otherwise mentioned in the individual project descriptions, you will need to implement your projects in **Python 2.7**. Familiarity with numerical and scientific computing libraries like **NumPy** and **SciPy** will be very helpful.*\n\n###Project 0: Titanic Survival Exploration (Optional)\nIn this project, you will create decision functions that attempt to predict survival outcomes from the 1912 Titanic disaster based on each passenger?s features, such as sex and age. You will start with a simple algorithm and increase its complexity until you are able to accurately predict the outcomes for at least 80% of the passengers in the provided data. This project will introduce you to some of the concepts of machine learning as you start the Nanodegree program.\n\n***The supporting course covers:*** Introduction to Artificial Intelligence and Machine Learning.\n\n###Project 1: Predicting Boston Housing Prices\nYou want to be the best real estate agent out there. In order to compete with other agents in your area, you decide to use machine learning. You are going to use various statistical analysis tools to build the best model to predict the value of a given house. Your task is to find the best price your client can sell their house at. The best guess from a model is one that best generalizes the data.\n\n***The supporting course covers:***  Statistics Review & Supporting Libraries, Evaluating Model Performance, Model Evaluation & Validation, and Model Optimization.\n\n###Project 2: Building a Student Intervention System\nAs education has grown to rely more and more on technology, more and more data is available for examination and prediction. Logs of student activities, grades, interactions with teachers and fellow students, and more are now available in real time. Educators are after new ways to predict success and failure early enough to stage effective interventions, as well as to identify the effectiveness of different interventions. Toward that end, your goal is to model the factors that predict how likely a student is to pass their high school final exam.\n\n***The supporting course covers:***  Supervised Learning Intro, Decision Trees, Regression, Neural Networks, Kernel Methods, Instance Based Learning, Bayesian Learning, Ensemble Learning.\n\n###Project 3: Creating Customer Segments\nMost of the data one collects doesn?t necessarily fit into nice, labeled categories. Many times not only is data not labeled, but categories are unknown! In this project we will take unstructured data, and then attempt to understand the patterns and natural categories that the data fits into. First you?ll learn about methods that are useful for dealing with data without labels, then you?ll apply this to a dataset of your choice, learning what natural categories sit inside it.\n\n***The supporting course covers:***   Clustering, Feature Scaling, Feature Selection, Feature Transformation, Semi-Supervised Learning.\n\n###Project 4: Train a Smartcab to Drive\nA smartcab is a self-driving car from the not-so-distant future that ferries people from one arbitrary location to another. In this project, you will use reinforcement learning to train a smartcab how to drive.\n\n***The supporting course covers:***  Markov Decision Processes, Reinforcement Learning, and Game Theory.\n\n###Project 5: Capstone Project\nIn this capstone project, you will leverage what you?ve learned throughout the Nanodegree program to solve a problem of your choice by applying machine learning algorithms and techniques. You will first **define** the problem you want to solve and investigate potential solutions and performance metrics. Next, you will **analyze** the problem through visualizations and data exploration to have a better understanding of what algorithms and features are appropriate for solving it. You will then **implement** your algorithms and metrics of choice, documenting the preprocessing, refinement, and postprocessing steps along the way. Afterwards, you will collect **results** about the performance of the models used, visualize significant quantities, and validate/justify these values. Finally, you will construct **conclusions** about your results, and discuss whether your implementation adequately solves the problem. Suggested application areas include:\n\n- Deep Learning\n- Robot Motion Planning\n- Healthcare\n- Education\n- Computer Vision\n- Investment and Trading\n\n##Want a preview?\nWe have selected and compiled content for this program from the following free courses:\n\n**General:**\n\n- <a href=\"https://www.udacity.com/course/intro-to-machine-learning--ud120\" target=\"_blank\">Udacity's Introduction to Machine Learning</a>\n-  <a href=\"https://www.udacity.com/course/knowledge-based-ai-cognitive-systems--ud409\" target=\"_blank\">Georgia Tech's Knowledge-based AI</a>\n- <a href=\"https://www.udacity.com/course/intro-to-data-analysis--ud170\">Udacity's Introduction to Data Analysis</a>\n-  <a href=\"https://www.udacity.com/course/machine-learning--ud262\" target=\"_blank\">Georgia Tech's Machine Learning</a>\n\n**Specific to Project 1:**\n\n-  <a href=\"https://www.udacity.com/course/intro-to-data-science--ud359\" target=\"_blank\">Udacity's Introduction to Data Science</a>\n-  <a href=\"https://www.udacity.com/course/intro-to-descriptive-statistics--ud827\" target=\"_blank\">Udacity's Descriptive Statistics</a>\n\n**Specific to Project 4:**\n\n-  <a href=\"https://www.udacity.com/course/reinforcement-learning--ud600\" target=\"_blank\">Georgia Tech's Reinforcement Learning</a>\n\n\n<em>Our free content maintains the same high level of quality as our Nanodegree course material. However, it is only through enrollment in a Nanodegree program that you receive direct mentoring, benefit from our best-in-class personal code review system, have the opportunity to submit your work for review, and earn industry-designed and recognized certification.</em>",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/machine-learning-engineer-nanodegree--nd009?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "",
      "short_summary": "Become a machine learning engineer and apply predictive models to massive data sets in fields like education, finance, healthcare or robotics.",
      "slug": "machine-learning-engineer-nanodegree--nd009",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "<b>Take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-5714838578\" target=\"_blank\">Readiness Assessment</a> to find out if you're ready to get started.</b>\n\nMachine learning represents a key evolution in the fields of computer science, data analysis, software engineering, and artificial intelligence. It has quickly become industry's preferred way to make sense of the staggering volume of data our modern world produces. Machine learning engineers build programs that dynamically perform the analyses that data scientists used to perform manually. These programs can ?learn? based on millions of experiences, all rigorously and numerically defined. \n\nMachine learning is literally everywhere, and is often at work even when we don?t realize it. Google Translate, Siri, and Facebook News Feeds are just a few popular examples of machine learning?s omnipresence. Machine learning is impacting so many critical industries, including healthcare, education, finance, robotics, artificial intelligence, astronomy, and more. The ability to develop machines and systems that automatically improve,  puts machine learning at the absolute forefront of virtually any field that relies on data.\n\n- Machine learning is at the forefront of incredible new innovations in several fields.\nHealthcare, education, astronomy, finance, robotics, and more are all being influenced by new developments in machine learning.\n- The goal of this Nanodegree program is to provide students the foundation required to start participating in this exciting new field.\n- Throughout this program, students will learn and ultimately master the same tools and technologies that experts in the field are currently using.",
      "expected_duration": 10
    },
    {
      "instructors": [

      ],
      "subtitle": "Improve the Software Lifecycle",
      "key": "nd012",
      "image": "https://lh3.googleusercontent.com/KW8kb13zRH6h2uCggdzUpUb5OZ93c9YKPLF7dWBD8geOj6-kvCeuVB4aK5ckYgd15bHpoxsxUOPu9jDL2L1Z=s0#w=277&h=170",
      "expected_learning": "Whether you?re seeking to **lead a DevOps adaptation process** in your current organization or pursuing a **new DevOps role**, you?re going to be very in-demand after graduating from this Nanodegree program. A recent study by WIRED and CA Technologies estimates that 80% of Fortune 1000 companies will adopt DevOps by 2019, and current statistics show an increase of over 60% for new DevOps job openings.\n\nYour fluency with the core DevOps principles?pervasive automation of processes, the use of metrics to gauge the effectiveness of processes, and a culture of collaboration across organizational units?will be both valued and valuable as you advance your career!",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "DevOps Engineer Nanodegree BETA*",
      "related_degree_keys": [

      ],
      "required_knowledge": "Students of the DevOps Nanodegree program should have a working knowledge of:\n\n - Unix type operating systems\n - At least one scripting language (shell, Python, or Ruby)\n - Version control systems\n\nFor students who do not meet these requirements we offer the following free introductory courses:\n\n - <a href=\"https://www.udacity.com/course/linux-command-line-basics--ud595\">Linux Command Line Basics</a>\n - <a href=\"https://www.udacity.com/course/configuring-linux-web-servers--ud299\">Configuring Linux Web Servers</a>\n - <a href=\"https://www.udacity.com/course/how-to-use-git-and-github--ud775\">How to Use Git and GitHub</a>",
      "syllabus": "**P0: Investigate a Product Workflow**\n\nIn this project, you will create a document that describes the current situation in a company as seen from the perspective of either a software developer or a member of the IT operations team. The document should capture the typical processes by which software is built, tested, and put into production. The document should reflect both what processes are going well and what processes could be improved.\n\n**P1: Design DevOps Implementation Plan**\n\n**P2: Write a Chef Cookbook**\n\n**P3: Configure and Test CI Solution**\n\n**P4: Containerize an application**",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/devops-engineer-nanodegree-beta--nd012?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [

      ],
      "banner_image": "",
      "short_summary": "Students will build on existing skills to prepare for critical roles like DevOps Engineer, DevOps Automation Specialist, and more.",
      "slug": "devops-engineer-nanodegree-beta--nd012",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "DevOps is a set of guiding principles that promote excellence throughout the software development life cycle. This program will teach you how to master and implement these principles.\n\nStudents from System Administration, Software Engineering, or Operations backgrounds will build on existing skills to prepare for critical roles like DevOps Engineer, DevOps Automation Specialist, and more.\n\n****This Nanodegree program is in a beta period. Content will be rolled out in phases, and project review times will vary. Your tuition costs are reduced by 25% if you enroll during beta. Your feedback through this phase is greatly appreciated, and will help us provide you with the best educational experience possible.***",
      "expected_duration": 6
    },
    {
      "instructors": [

      ],
      "subtitle": "Start Your Journey in iOS Development",
      "key": "nd006",
      "image": "https://lh3.googleusercontent.com/7aGXJZE4f0M-kIJw0_HZKSOOoanE42dyEz6agRS0ZVkpK-ALftVYRnaEdA9wGp0tUx5S5LPwTJIWCMRjfg=s0#w=1724&h=1060",
      "expected_learning": "If you are an individual with no programming experience, but are interested in developing apps for iPhone and iPad, this program provides the basic understanding and skills to get you started. Developing apps may seem like a specialized career, but fortunately, it?s not an exclusive one. All those amazing apps out there (and there are some amazing ones!) were built by real people, who learned real skills, and then applied them to real products. You can do it too, and your journey starts right here!\n\nYou?ll also get some some really valuable real-world experience, because as you build your Swift knowledge, you'll also be challenged to solve problems in code that iOS developers face every day. Best of all, you'll be working in Xcode the whole time, which is the same environment used to write apps.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Beginning iOS App Development Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "General Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n\nHardware Requirements:\n\n* Macintosh computer running OS X 10.10.4 or later \n\nBasic Computer Skills:\n\n* You can find the location of a file on your computer\n* You can rename a file on your computer \n* You can attach a file to an email\n* You can compress (.zip) and uncompress a file on your computer\n* You can download and install programs from the internet",
      "syllabus": "##What You'll Learn\nAs you progress through this program, you'll learn fundamental programming skills in 45-60 minute sessions. Along the way, we'll challenge you to implement specific functionality into three iOS apps:\n###Robot Maze\nSafely navigate your robot through a maze, while gaining experience with core object-oriented programming principles.\n###Pirate Fleet\nChallenge the computer to a Battleship-esque game, while learning about data structures in Swift.\n###Alien Adventure\nIn this simple side scrolling game, you'll ensure your exploratory robot presents the proper gifts of greetings to newly-encountered extraterrestrials. You'll mostly practice loops, classes, and design patterns in this app.\n###Silly Songs\nLaugh along with funny songs built entirely by you??from idea to app. Banana-fana fo-fana!",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/beginning-ios-app-development-nanodegree--nd006?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh3.googleusercontent.com/OfB1_wL8KcTEZOVNyP4-lTXmngpZnLuVQND5Ock2vSG0XxE2zIdg9bY0e4V96muDthELddJUzkuj3fZW7JIn=s0#w=4680&h=968",
      "short_summary": "For individuals with no programming experience, this program teaches core skills necessary to start developing apps for iPhone and iPad.",
      "slug": "beginning-ios-app-development-nanodegree--nd006",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Do you want to build apps for iPhone and iPad? Great!  Never written a line of code in your life? No problem. You?ve just got a few things to learn first, because in order to succeed as an iOS developer, you need a strong foundation in programming. The good news is, this Nanodegree program will provide that for you.\n\nTo that end, we?ve developed three iOS apps that you?ll make functional with your own code. While contributing to these apps, you?ll learn basic programming skills, and specifically, how to program in Swift 2.0, Apple?s custom programming language designed specifically for building iOS and OS X apps. Once you've completed this program, you'll have a strong foundation in solving key problems with code. Plus, you?ll be fully prepared to succeed in the <a href=\"https://www.udacity.com/course/ios-developer-nanodegree--nd003\" target=\"_blank\">iOS Developer Nanodegree</a>, which is the ultimate stepping stone to a career in iOS development!",
      "expected_duration": 3
    },
    {
      "instructors": [

      ],
      "subtitle": "Build Progressive Web Applications",
      "key": "nd802",
      "image": "https://lh3.googleusercontent.com/z5MheenPrJC0Um0F6j4-B9CYPLkVBoV_wqGhk-nlMb6lQw7od_YToUjwcQGyodKzygulwqhtibbUO-tTlLs=s0#w=1724&h=1060",
      "expected_learning": "Developing a great user experience begins with selecting the best tools, frameworks, and technologies for the applications you?re going to build. One of the key attributes of a Senior Web Developer is the ability to analyze available toolkits and make informed decisions. As you progress through the coursework and build your projects, you?ll refine and perfect these critical abilities.\n\nOur outcome-based approach means you?re consistently building real projects throughout your studies. You receive personalized coaching, enjoy access to moderated forums, and benefit from rigorous and timely project review. Your completed projects become a part of your unique student profile, and are made available to hiring partners when you're ready to showcase your accomplishments.\n\nThe expertise of our course developers and instructors, and vital contributions from an incredible roster of talent from Google, combine to ensure that students graduate from the Senior Web Developer Nanodegree program uniquely prepared to succeed in a very competitive and highly lucrative field.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Senior Web Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "* You have access to a computer with a broadband connection, on which you?ll install a professional code/text editor (ie. Sublime Text or Atom).\n* You have intermediate-level experience with HTML, including use of semantic markup.\n* You have intermediate-level experience with JavaScript, including object-oriented programming.\n* Students that have completed our [Front-End Web Developer Nanodegree program](https://www.udacity.com/course/front-end-web-developer-nanodegree--nd001), or have an equivalent skillset, meet the prerequisites for this program.",
      "syllabus": "In this Nanodegree program, you?ll build 5 portfolio-worthy projects. We have designed these projects to accommodate a range of skill levels. Each project is linked to a supporting course (or courses) for those students who need to add a particular skill or skills in order to successfully complete the project.\n\n\n### Meet-Up Event Planner\nYou will build a responsive web application that allows the user to establish a meet-up event. The goal is to create an app that is a joy to use on both desktop and mobile. The application must allow someone to name their event, search for a host location (using a location API like Foursquare), set the capacity of the event, the start and end times, and input a description of the event.\n\nPrepare for this project with: [Building High Conversion Web Forms](https://www.udacity.com/course/building-high-conversion-web-forms--ud890) and [Web Tooling and Automation](https://www.udacity.com/course/web-tooling-automation--ud892).\n\n### Public Transportation App\nYou will build an application that allows users to select a departure and arrival train station, and see a list of trains, times, and durations. A default train schedule will be provided that should be used when the application is offline. If a network connection exists, the application will query an endpoint that provides status updates on a trains arrival and departure times. \n\nPrepare for this project with: [JavaScript Promises](https://www.udacity.com/course/javascript-promises--ud898) and [Building Offline-First Web Apps](https://www.udacity.com/course/offline-web-applications--ud899) \n\n### Restaurant Reviewer\nYou will develop a restaurant review application with a focus on accessibility. You will remotely access JSON files containing restaurant information (including name, a photograph, address, cuisine type and operating hours) as well as JSON files containing review information for each restaurant (name of reviewer, date of review, 5-star rating and comments). The reviews application must include an application header, and a menu providing multiple ways to filter the restaurants (by cuisine, by location, etc). When viewing a specific restaurant, current reviews must be displayed along with a form for the user to submit their own review.\n\nPrepare for this project with: Accessible Web Applications ***COMING SOON!***\n\n### Corporate Dashboard\nYou will develop a corporate dashboard application in a component-oriented manner. The dashboard application must contain a header (with the currently selected dashboard?s name), and a menu, allowing the user to navigate between dashboards. You will be provided data endpoints to develop the following dashboards in which all components must be declaratively configurable (colors, titles, etc.):\n\n* A geospatial view, identifying the number of employees at various company locations\n* A ?key metrics? view, containing components displaying: the number of open issues, a line chart reflecting number of paying customers over a period of time, and a bar chart reflecting number of reported issues over a period of time\n* A ?data view,? providing a spreadsheet-style view of all issues that is sortable and filterable. An issue contains: submission timestamp, customer name, customer email address, description, open/closed status, closed timestamp, employee name.\n\nPrepare for this project with: Component-Oriented Development with Polymer ***COMING SOON!***\n\n### Capstone\nIn this capstone project, students will build their own application using signature native application features such as device sensor access, offline-first, and more.\n\nPrepare for this project with: Front-End Frameworks, Client-Server Communications, and Intro to Progressive Web Apps ***COMING SOON!***",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/senior-web-developer-nanodegree--nd802?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "",
      "short_summary": "For intermediate front-end developers, this program helps you work efficiently to apply modern tools, frameworks, and techniques to write robust web applications.",
      "slug": "senior-web-developer-nanodegree--nd802",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Leaping off from where our Front-End Web Developer Nanodegree program culminates, this program is expressly designed to afford intermediate developers the opportunity to build on existing front-end skills and master the newest and most innovative technologies available. If you?re a developer with experience in HTML, CSS and JavaScript?or a graduate of our Front-End Developer program!?and are focused on securing a Senior Web Developer position, this curriculum path will ensure you?re supremely well-prepared to achieve your career objectives.\n\nBuilt in close partnership with Google, the Senior Web Developer Nanodegree program emphasizes teaching the frameworks, techniques, and tools that make the development of progressive web applications possible. Your projects will be focused on using some of the newest features available, such as Promises, Service Worker, and device-level access APIs designed to develop Progressive Web Applications. Ultimately, graduates will emerge ready not only to fill important roles, but to drive innovation and lead technology strategy.",
      "expected_duration": 9
    },
    {
      "instructors": [

      ],
      "subtitle": "Learn to Build Web Applications",
      "key": "nd010",
      "image": "https://lh3.googleusercontent.com/hP9RWw7xqhLQH41NtRcjx1WapKgWrRSsatwMLzIw9Mu2EQYZ5phSadsYgwpcb2oL4odqXjCHjQ5kNj_Yu8oZ=s0#w=1724&h=1060",
      "expected_learning": "According to Indeed, there are currently over 19,000 unfilled Ruby on Rails developer positions, making Ruby an in-demand language for startups around the world. To be a successful Ruby on Rails developer, you?ll need to first understand the principles of programming with Ruby. We've partnered with industry leaders to craft a curriculum expressly designed to set you up for success in this exciting field. You?ll gain exclusive insights from industry leaders, including Yukihiro ?Matz? Matsumoto, the creator of Ruby.\n\nIn this Nanodegree program, you?ll complete a number of projects focused on developing a strong foundation in the Ruby language and the tools you?ll actually use on the job, such as Sublime Text, the command line, version control, and GitHub. Upon graduating from the program, you will have built a strong portfolio that will showcase your Ruby programming skills. You will also be prepared to move on to Ruby on Rails development.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Ruby Programming Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "* You have access to a computer with a broadband connection, on which you?ll install a professional code/text editor (e.g. Sublime Text or Atom).",
      "syllabus": "As you progress through this program you'll learn core skills in 45-60 minute sessions. You'll have the opportunity to apply these skills to three portfolio-worthy projects that will both challenge and reward you.\n\n###ToyCity Report Generator\nAnalyze complex inventory data and generate human-readable reports. You?ll hook up to an external API to provide a steady stream of new data.\n\n### Udacitask\nCreate a task manager built to run on the command line to help you keep track of everything you?ll be learning.\n\n###Survivr\nBuild a program that simulates the game mechanics of the hit new show, Survivr.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ruby-programming-nanodegree--nd010?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "",
      "short_summary": "Learning Ruby?a programming language ideal for beginners?is the first step to mastering Ruby on Rails, the framework that powers sites like GitHub, Groupon, and Twitter.",
      "slug": "ruby-programming-nanodegree--nd010",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "**This is the first within a series of three Nanodegree programs designed to take you from no programming experience to a senior-level position. Check out the entire series of Nanodegree programs:**\n\n1. Ruby Programming Nanodegree Program\n2. [Ruby on Rails Developer Nanodegree Program](https://www.udacity.com/course/ruby-on-rails-developer--nd020)\n3. [Senior Ruby on Rails Developer Nanodegree Program](https://www.udacity.com/course/senior-ruby-on-rails-developer--nd030)\n\nDo you want to build applications for the web? Great! Are you new to programming? No problem. You?ve just got a few things to learn first, because in order to succeed as a web developer, you need a strong foundation in programming. The good news is, this Nanodegree program will provide that for you.\n\nIn this program, you?ll be learning Ruby, a modern programming language that reads almost like English, making it perfect for beginners! This will prepare you to learn Ruby on Rails, a powerful framework which uses Ruby and powers websites like GitHub, Groupon, and Twitter. Throughout the Nanodegree program, you?ll hear from major voices in the industry, including the creator of the Ruby language himself!\n\nAt Udacity, we have an outcome-based approach. You will work on projects that showcase your progressive skills mastery, with an end goal of creating a diverse student portfolio that highlights your newfound skills as a Ruby developer. Over the course of the Nanodegree program, you'll develop a strong foundation in practical application development and object-oriented programming. These are critical skills for anyone interested in a career in web application development. You'll create a game simulator, analyze data and produce reports, and even build your own program.",
      "expected_duration": 2
    },
    {
      "instructors": [

      ],
      "subtitle": "Develop & Monetize 2D Games with libGDX",
      "key": "nd011",
      "image": "https://lh3.googleusercontent.com/qje6TeFI7jSfGrCFO9KgdKkQy-b0ZecIOirVQ3nNUP-Nt1YzgSF93klH8-YoMyqPBtCTTlj-iwMFQKaAGw=s0#w=1724&h=1060",
      "expected_learning": "If you want to turn your Java knowledge into cross-platform games, this is the Nanodegree for you. Throughout the program, you will learn the skills necessary to enter the gaming industry, or to publish your own apps.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Mobile Game Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "This course assumes basic proficiency with Java, including working with collections, implementing interfaces, and extending abstract classes. It is also assumed that you can read and understand documentation and source code.\n\nProficiency with Git and Android Studio is helpful, but not required.",
      "syllabus": "In this program, you'll learn the core skills needed to build great 2D games. Along the way, you'll build three different games, as well as develop a strategy for monetizing one of them. Specifically, we'll work on the following projects: \n\n##Project 1: Outbreak\nOutbreak is a block breaking game. Players control a paddle that can move along the bottom of the screen and send balls toward a field of blocks.  \n\nYou can be creative and use your own design ideas, for example, you might want to add power-ups or allow the game to get progressively more difficult. Make sure to read and review the project rubric before submitting, however.\n\nPrepare for this project with: <a href=\"https://udacity.com/course/ud405\" target=\"_blank\">2D Game Development with libGDX</a> \n\n##Project 2: Space Kerfuffle\n\nSpace Kerfuffle is a top down, starfighter combat game.  Players assume the role of an intrepid spacefighter pilot flying headlong into a swarm of aliens or robots or something else evil that wants to destroy humanity, probably.  Players control a spacecraft and fire projectiles at oncoming enemies who do the same.  Explosions happen. Numbers go up.\n\nSee our prototype of the game for inspiration.  Note that your game doesn?t have to function exactly like this!  You can be creative and use your own design ideas.  Make sure to read and review the project rubric before submitting, however.\n\nPrepare for this project with: <a href=\"https://udacity.com/course/ud406\" target=\"_blank\">How to Make a Platformer Using libGDX</a>.\n\n## Project 3: Monetization\nBuild a monetization and engagement plan to hook and retain users in your game. Choose from interstitial ads, freemium models, and in-app purchases - selecting the model that fits best with your game. You'll also set goals and devise a plan for monitoring the success of your monetization strategy, as well as identify potential tweaks should the strategy not perform to your liking.\n\nPrepare for this project with: <a href=\"https://udacity.com/course/ud407\" target=\"_blank\">Engagement & Monetization | Mobile Games</a>\n\n## Project 4: Artificial Intelligence and 2D Game Physics \nOne way you can make a good game great is to make the gameplay more engaging. \n\nHaving objects that move about the world in a realistic manner thanks to the the physics library Box2D is great way to do so. \n\nIntelligent enemies that can actively search and navigate a map, strategically attack players, and apply AI algorithms also ratchets up playability. \n\nIn this project, you will make your game more realistic and immersive by using physics and AI algorithms. \n\n*Course coming soon!*\n\n## Project 5: Capstone Project\n\nFor the capstone project, you will create a game of your own design incorporating libGDX, physics and artificial intelligence and monetization. The sky's the limit for what you can build. We encourage you to begin on paper and deeply consider how you might monetize your app as it may dictate how you might implement some features.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/mobile-game-developer-nanodegree--nd011?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [

      ],
      "banner_image": "",
      "short_summary": "Learn to build and monetize your own 2D games.",
      "slug": "mobile-game-developer-nanodegree--nd011",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Making and playing games is easily the most fun you can have with a computer, but there are real career opportunities here as well. Over the last decade, mobile gaming has grown into a huge market. Independent game developers are enjoying unparalleled success, and established gaming studios are hiring faster than ever.\n\n\nIf you want the skills to turn your game ideas into reality, or get ready to jump into professional game development, this is the Nanodegree for you. The core of this program is libGDX, a powerful cross platform game development framework, allowing you release your game on a variety of devices and operating systems.",
      "expected_duration": 9
    },
    {
      "instructors": [

      ],
      "subtitle": "Become an Android Developer",
      "key": "nd801",
      "image": "https://lh3.googleusercontent.com/l6sQx2UtDyXqYeSp8UjeDjywt3lSoxbZaUBfz8B6f-vT4JOR5r60w2c7Ta6eeGONAWEs34ZZZj2ejQ5K5eE=s0#w=1724&h=1060",
      "expected_learning": "With over 1 billion Android devices already activated, Android represents an incredible opportunity for developers. As Android continues to grow beyond smartphones, it will become the brains behind invisible, ubiquitous cloud-connected computing. The skills you learn in this Nanodegree will help you master the existing platform, and prepare you for the exciting opportunities in Android's future.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Android Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "This will be a challenging and rewarding journey that will take a novice programmer 9 months or longer to complete, spending an estimated 10 hours per week on the coursework. Do you have the dedication and mindset to sustain you through it? If you're not sure, please check out the courses and projects, listed under **Nanodegree Structure**, before making this commitment.\n\n### Programming Experience\n**This is not a \"Zero to Hero\" program.** Entering students are expected to have prior experience building applications (web or mobile) in Java or another object-oriented programming language. \n\n**You should have at least 1-2 years of experience** in Java or another object-oriented programming language prior to enrolling. \n\n**If you have no prior programming experience**, we recommend you take our <a href=\"https://www.udacity.com/course/android-development-for-beginners--ud837\" target=\"_blank\">Android Development for Beginners</a> course, also built with Google. You should also learn foundational Java programming concepts before enrolling in this Nanodegree. Our <a href=\"https://www.udacity.com/course/intro-to-java-programming--cs046\" target=\"_blank\">Intro to Java</a> course may be a good place to start. \n\n### Technical Skills and Requirements\n\nYou will submit your projects on GitHub, and must have a GitHub handle and know how to share code prior to enrolling. Take our course on <a href=\"https://www.udacity.com/course/how-to-use-git-and-github--ud775\" target=\"_blank\">How to Use Git and GitHub</a> if you need to learn how to do this. \n\nYou will build your apps in Android Studio, and will need to install it on your machine to complete your Nanodegree projects. If you don't have Android Studio installed, see our mini-course on <a href=\"https://www.udacity.com/course/how-to-install-android-studio--ud808\" target=\"_blank\">How to Install Android Studio</a> for instructions.\n\n### Dedication and Mindset \n\nIn addition to 1-2 years of prior programming experience and intermediate technical skills, students are expected to demonstrate the following characteristics:\n<li>**Resourcefulness**: Ability to search for and find solutions in documentation, backed by the belief that all problems in code are discoverable;\n<li> **Grit**: Ability to work through challenges and persevere when code breaks and tests fail.\n<li> **Growth Mindset**: Belief that intelligence is NOT a fixed entity, and can be boosted by hard work in the process of learning and practice.",
      "syllabus": "### Nanodegree Courses\n* <a href=\"https://www.udacity.com/course/developing-android-apps--ud853\" target=\"_blank\">Developing Android Apps: Android Fundamentals</a>\n* <a href=\"https://www.udacity.com/course/advanced-android-app-development--ud855\" target=\"_blank\">Advanced Android App Development: Productionize and Publish Your App</a>\n* Google Play Services \n * <a href=\"http://www.udacity.com/course/ud876-1\" target=\"_blank\">Google Play Services: Location and Context</a>\n * <a href=\"http://www.udacity.com/course/ud876-2\" target=\"_blank\">Google Play Services: Analytics</a>\n * <a href=\"http://www.udacity.com/course/ud876-3\" target=\"_blank\">Google Play Services: AdMob</a> \n * <a href=\"http://www.udacity.com/course/ud876-4\" target=\"_blank\">Google Play Services: Maps</a> \n * <a href=\"http://www.udacity.com/course/ud876-5\" target=\"_blank\">Google Play Services: Identity</a> \n* <a href=\"https://www.udacity.com/course/gradle-for-android-and-java--ud867\" target=\"_blank\">Gradle for Android and Java: Build Better Apps Through Automation</a>\n* <a href=\"https://www.udacity.com/course/material-design-for-android-developers--ud862\" target=\"_blank\">Material Design for Android Developers: Make Your Apps Material</a>\n* <a href=\"https://www.udacity.com/course/android-ubiquitous-computing--ud875\" target=\"_blank\">Android Ubiquitous Computing: Extend Apps to Wearables, TV and Auto</a> \n\n## Nanodegree Project Portfolio \n\n### Personal App Portfolio\nDesign and build an app that shows off the apps that you'll create as part of this Nanodegree.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud853/l-4353948561/m-4328734595\">Popular Movies, Stage 1</a>\nBuild an app to help users discover popular and recent movies. You will build a clean UI, sync to a server, and present information to the user.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud853/l-4339028539/m-4329556187\">Popular Movies, Stage 2</a>\nAdd onto your project from Stage 1 with a detail view for each movie, allowing users to 'favorite' movies, and adding a tablet layout.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud855/l-3993648704/m-4291808735\" target=\"_blank\">Super Duo: Productionize Two Apps</a>\n\nProductionize two apps, taking them from a functional state to a production-ready state. To do this, you will find and handle error cases, add accessibility features, allow for localization, add widgets, and add a library.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud867/l-4328489198/m-4382778568\" target=\"_blank\">Build It Bigger</a>\nUse Gradle to build a joke-telling app, factoring functionality into libraries and flavors to keep the build simple. You'll also configure a Google Cloud Endpoints development server to supply the jokes.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud855/l-4326960273/m-4329086234\" target=\"_blank\">Make Your App Material</a> \n\nImplement Android design concepts and transform a functional newsreader app using material design techniques. \n\n###<a href=\"https://www.udacity.com/course/viewer#!/c-ud875/l-4643648560/m-4634049761\" target=\"_blank\">Go Ubiquitous</a>\n\nLet users access the weather at a glance by building a Sunshine watch face for Android Wear.\n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud876-1/l-4330969190/m-4333036077\" target=\"_blank\">Capstone, Stage 1: Design, Scope and Plan Your App</a>\n\nCreate a detailed plan, including UI mocks and technical specifications, for building your own app. \n\n### <a href=\"https://www.udacity.com/course/viewer#!/c-ud876-1/l-4333029280/m-4376351203\" target=\"_blank\">Capstone, Stage 2: Build and Polish Your App for Production</a>\n\nThis is your chance to take the skills that you've learned across your Nanodegree journey and apply it to an app idea of your own.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/android-developer-nanodegree--nd801?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Android"
      ],
      "banner_image": "https://lh4.ggpht.com/9DtZEhUKeCua8DlRMLwtU21wYk6Tos4u-FJT1sxyXSGEWUPoibSkq5MwiajQeyvLr-P48e6X0v9hbVRzkDg=s0#w=4680&h=968",
      "short_summary": "For intermediate programmers pursuing Android mastery, this program teaches the tools, principles, and patterns that underlie all Android development.",
      "slug": "android-developer-nanodegree--nd801",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Learn to develop for Android and transform your career outlook! This Nanodegree will provide a guided, efficient path for an intermediate developer with little or no experience on mobile platforms to emerge as an Android Developer. \n\nBy the end of the Nanodegree, you'll have a diverse portfolio of projects to show employers, and will even publish your own app on the Google Play Store as part of the Capstone project.\n\n**This is an Intermediate Nanodegree**: Entering students are expected to have prior experience building applications (web or mobile) in Java or another object-oriented programming language.",
      "expected_duration": 6
    },
    {
      "instructors": [

      ],
      "subtitle": "Create Stunning User Experiences",
      "key": "nd001",
      "image": "https://lh3.googleusercontent.com/-VquyWBz-7gLOJNr8GhJoQp4Z1HNSSFrHG0k5AFVFI8KeyMb8nr06RQDbRqJ7gPHqODUgVPiH2uZrJZEGRTs=s0#w=1724&h=1060",
      "expected_learning": "This Nanodegree program will teach you the skills required to <a href=\"https://www.udacity.com/career-paths/front-end-web-developer\" target=\"_blank\">become a Front-End Web Developer</a>. We?ve designed this curriculum with expert web developers and hiring managers, allowing you to demonstrate your skills by completing a series of projects approved by leading employers as the critical indicators of job-readiness. Specifically, you?ll:\n\n* create a professional portfolio using HTML and the Bootstrap CSS framework\n* use the power of jQuery?s DOM manipulation to dynamically populate a resume with your own information\n* develop your very own arcade game in JavaScript with the HTML5 Canvas API\n* discover how to optimize your application?s perceived load time by taking the Critical Rendering Path into account\n* learn that frames per second isn?t just important for games and how to ensure a silky smooth experience in your applications by optimizing for 60 frames per second\n* explore best practices in application architecture and design patterns\n* build a complex mapping application using the Knockout framework and a variety of third-party API services\n* develop and maintain applications with the confidence test-driven development promotes, using the Jasmine testing framework",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Front-End Web Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "General Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting the deadlines set for your cohort and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* You are willing to contribute to the success of the program, including collaborating with fellow students and giving us feedback on how we can improve.\n\nFront-End Developer Nanodegree Specific Requirements:\n\n* You have access to a computer with a broadband connection, on which you?ll install a professional code/text editor (ie. <a href=\"http://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a> or <a href=\"https://atom.io/\" target=\"_blank\">Atom</a>).\n* You can independently solve and describe your solution to a math or programming problem \n* You are familiar with <a href=\"https://docs.webplatform.org/wiki/tutorials/Programming_-_the_real_basics\" target=\"_blank\">basic programming concepts</a> such as variables, conditions and loops.",
      "syllabus": "In the Nanodegree program, you?ll build six portfolio-worthy projects. Depending on your knowledge and skill level, you can either learn the necessary skills through our supporting courses, or jump into the projects directly. A summary of each of these projects, as well as links to their supporting courses are included in the sections below.\n\n### PROJECT Build a Portfolio Site\nYou will replicate a design mockup in HTML and CSS. You will develop a responsive website that will display images, descriptions and links to each of the portfolio projects you will complete throughout the course of the Front-End Web Developer Nanodegree.\n\nPrepare for this project with: [Intro to HTML and CSS](https://www.udacity.com/course/intro-to-html-and-css--ud304), [Responsive Web Design Fundamentals](https://www.udacity.com/course/responsive-web-design-fundamentals--ud893), and [Responsive Images](https://www.udacity.com/course/responsive-images--ud882)\n\n### PROJECT Interactive Resume\nYou will develop an interactive resume application that reads your resume content from a JSON file and dynamically displays that content within a provided template. You will use objects, functions, conditionals, and control structures to compose the content that will display on the resume.\n\nPrepare for this project with: [JavaScript Basics](https://www.udacity.com/course/javascript-basics--ud804) and [Intro to jQuery](https://www.udacity.com/course/intro-to-jquery--ud245)\n\n### PROJECT Classic Arcade Game Clone\nYou will be provided with visual assets and a game loop engine; using these tools you must add a number of entities to the game including the player characters and enemies to recreate the classic arcade game *Frogger*.\n\nPrepare for this project with: [Object-Oriented JavaScript](https://www.udacity.com/course/object-oriented-javascript--ud015) and [HTML5 Canvas](https://www.udacity.com/course/html5-canvas--ud292)\n\n### PROJECT Website Optimization \nYou will optimize a provided website with a number of optimization- and performance-related issues so that it achieves a target PageSpeed score and runs at 60 frames per second.\n\nPrepare for this project with: [Website Performance Optimization](https://www.udacity.com/course/website-performance-optimization--ud884) and [Browser Rendering Optimization](https://www.udacity.com/course/browser-rendering-optimization--ud860)\n\n### PROJECT Neighborhood Map\nYou will develop a single-page application featuring a map of your neighborhood or a neighborhood you would like to visit. You will then add additional functionality to this application, including: map markers to identify popular locations or places you?d like to visit, a search function to easily discover these locations, and a listview to support simple browsing of all locations. You will then research and implement third-party APIs that provide additional information about each of these locations (such as StreetView images, Wikipedia articles, Yelp reviews, etc).\n\nPrepare for this project with:  [Intro to AJAX](https://www.udacity.com/course/intro-to-ajax--ud110) and [JavaScript Design Patterns](https://www.udacity.com/course/javascript-design-patterns--ud989)\n\n### PROJECT Feed Reader Testing\nIn this project you are given a web-based application that reads RSS feeds. The original developer of this application clearly saw the value in testing, they've already included Jasmine and even started writing their first test suite! Unfortunately, they decided to move on to start their own company and we're now left with an application with an incomplete test suite. That's where you come in.\n\nPrepare for this project with: [JavaScript Testing](https://www.udacity.com/course/javascript-testing--ud549)\n\n<br>\nYou?ll host all your projects on GitHub and make regular commits. If you haven?t learned version control yet, use our latest course on the topic: [How to Use Git and GitHub](https://www.udacity.com/course/how-to-use-git-and-github--ud775)\n\n<br>\nWe will be periodically reviewing the Front-End Nanodegree curriculum - both courses and projects - and making adjustments based on student and industry feedback. We will notify active students working toward the Nanodegree about any effects updates may have on the degree requirements.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/front-end-web-developer-nanodegree--nd001?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh3.ggpht.com/WBJdFIscHSIhGiAu6KWNHRMkfYvI13sjRvvxiQ5z6W1W1lGfknbDPuC21i2el5QR2wHq5snHohyyCsr90eHh=s0#w=1170&h=422",
      "short_summary": "Become a Front-End Web Developer by completing a variety of projects for your portfolio - become an HTML, CSS and JavaScript pro!",
      "slug": "front-end-web-developer-nanodegree--nd001",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Learn the fundamentals of how the web works and gain a working knowledge of the three foundational languages that power each and every website: HTML, CSS and JavaScript. This Nanodegree will provide a guided, efficient path for you to learn to build beautiful, responsive websites optimized for security and performance. You?ll see the efforts of your work with each click of the browser?s refresh button!\n\nBy the end of the Nanodegree you'll have built a diverse portfolio of projects to show employers. You'll also have the opportunity to prepare for your new career with reviews of your online presence (resume, LinkedIn, portfolio), prepare for interviews, take part in workshops covering topics like networking and salary negotiation as well as take part in a new program facilitating job placement.",
      "expected_duration": 6
    },
    {
      "instructors": [

      ],
      "subtitle": "Build a Business Around Your App",
      "key": "nd007",
      "image": "https://lh3.googleusercontent.com/37tkBOmcpUV76cMKVWH-LROofCWz7wF0w_FRr8Db5Bw6-oEJJ-bU5oV3hdlJM7ucb3jFrPIhYjVWVSHUdAE=s0#w=1724&h=1060",
      "expected_learning": "Being a successful tech entrepreneur means having many tools at your disposal. You need to understand everything from design and monetization, to prototyping and marketing. Fortunately, these are learnable skills, and the Tech Entrepreneur Nanodegree program teaches them all. \n\nWhether students are focused on design, monetization, or marketing, or business, these skills form an important core of their learning cycle. The feedback and review students continually receive as they learn to communicate both technology and strategy encourages clarity and concision; skills relevant to virtually any career in technology, and are especially critical to entrepreneurial success.\n\nBy partnering with Google, and a shortlist of successful, innovative, and influential startups, we have ensured the curriculum focuses exactly on those skills you need to build your own successful business. \n\nSucceeding as an entrepreneur is often made to seem like winning the lottery, but the real story is always one of tenacity, focus and discipline, and the work is invariably done by individuals who bring real skills to the table. Skills exactly like what you?ll master in the Tech Entrepreneur Nanodegree program. The certification you receive at the completion of this program is testament to your readiness for the remarkable journey ahead!",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Tech Entrepreneur Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "General Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* Collaboration with peers and interactive feedback are critical to the success of the program. You must be a committed and contributing participant of the community.\n\nYou do not need to have any prior programming experience to enroll in this Nanodegree program.",
      "syllabus": "As a student in the Tech Entrepreneur Nanodegree, you will build the following projects. Reviewers will provide feedback on your projects and guidance on how to take your project to the next level.\n\n###Your First Six Weeks\nIn this survey course, you will get an overview of the content covered in the nanodegree. You will learn about all of the aspects involved in building your business: product design, prototyping, monetization, marketing, and more! At the end of each week, you will submit a mini-project that will allow you to get immediate feedback from our coaches. \n\n###Validated Product Design\nThis project will help you design a product people will love. By the end of this project, you will be able to summarize your product idea, build out wireframes or prototypes, articulate what you learned from user testing, and highlight metrics that will be important to measure for your product.\n\nPrepare for this project with <a href=\"https://www.udacity.com/course/product-design--ud509\" target=\"_blank\">Product Design</a>.\n\n###Monetization Plan\nThis project will help you figure out how your product will make money! With this project, you?ll identify how your product will generate revenue (your monetization strategy) and dig into the details of implementing that strategy and your rationale for choosing it.\n\nGet ready for this project with <a href=\"https://www.udacity.com/course/app-monetization--ud518\" target=\"_blank\">App Monetization</a>.\n\n###Interactive Prototype\nIn this project, you?ll go through the iterative prototyping process -- starting with a low fidelity prototype and using feedback to build a medium fidelity prototype. By the end, you?ll have an amazing prototype to share and a really insightful list of talking points for potential investors about the feedback from your UX research experiments.\n\nLearn prototyping skills with <a href=\"https://www.udacity.com/course/rapid-prototyping--ud723\" target=\"_blank\">Rapid Prototyping</a>. \n\n###Marketing & Distribution Plan\nWith this project, you?re going to come up with a plan to acquire users and grow! By the time you?re done, you will have a robust marketing plan, which will also give you a lot of material for your final capstone project. Including a slide deck with a description of your value to your customers, how you stack up against competitors, who your target audience is, and how you plan to get distribution.\n\nGet ready for this project with <a href=\"https://www.udacity.com/course/app-marketing--ud719\" target=\"_blank\">App Marketing</a>.\n\n###Your Story\nYou often only get one chance to tell someone (an investor, an accelerator, or a customer) about your business. This project will help you do that in a powerful, succinct way. This is the polished culmination of everything you?ve done and learned during the Tech Entrepreneur Nanodegree.  You?ll use this story to pitch your company to potential investors, incubators or accelerators, friends and family, and even new customers.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/tech-entrepreneur-nanodegree--nd007?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [

      ],
      "banner_image": "https://lh3.googleusercontent.com/820EjsjmEO5w_Yk54hAGZkebEHmR2s3g_RIr_k427-NP0UM5eTXFeNT1t3ju3NapjhlSpO7HiP_AA3mMX-s=s0#w=4680&h=968",
      "short_summary": "From ideation to marketing to monetization, this program teaches you how to transform ideas into market-ready products, and build sustainable businesses around them.",
      "slug": "tech-entrepreneur-nanodegree--nd007",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Our Tech Entrepreneur Nanodegree program teaches you the skills you need to build your very own business, from ideation to marketing to monetization. Creating a new product is an amazing first step, but how do you then transform it into a stable operation that attracts customers, employees, and investors? Successful Silicon Valley startups like Optimizely and Y Combinator know, because they?ve done it, and that?s why we interviewed them -- and many other significant authors, influencers and venture capitalists -- when we designed this curriculum. \n\nBuilt in close partnership with Google, the Tech Entrepreneur Nanodegree program mixes theory and practice to teach students how to transform their ideas into market-ready products and to how to build sustainable, revenue-generating businesses around those products. \n\nLearning to succeed means studying success, and through your coursework and projects you?ll:\n\n* Validate your ideas using Google?s Design Sprint process\n* Evaluate and implement the most effective monetization strategies\n* Apply design methodologies to build an interactive, data-backed prototype\n* Create a marketing plan unique to your value proposition\n* Develop a polished story for your business in a pitch deck, landing page, or video\n\n...And much more\n\nAs you progress through your Nanodegree program, you?ll learn from expert instructors, benefit from interactive peer discussions, and receive detailed feedback from reviewers every step of the way.\n\nIf you think starting your own business seems impossible, too difficult, or something only risk-taking, nothing-to-lose visionaries accomplish, think again. It?s all about learning real skills, building real projects, and gaining real experience. That?s how dreams are built, and it starts here.",
      "expected_duration": 4
    },
    {
      "instructors": [

      ],
      "subtitle": "Discover Insights from Data",
      "key": "nd002",
      "image": "https://lh3.googleusercontent.com/ANTA_jW9y_93zZC8qohYWQXqSfGHHIDy0xUZkersc0drruRkUWQDP4rhvccUpxITZ0Vw8Or4fesYkzEzoHU=s0#w=1724&h=1060",
      "expected_learning": "The Data Analyst Nanodegree is specifically designed to prepare you for a career in data science. As a Data Analyst, you will be responsible for obtaining, analyzing, and effectively reporting on data insights ranging from business metrics to user behavior and product performance. We have worked closely with leading industry partners to carefully design the ideal curriculum to prepare you for this role.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Data Analyst Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "Data Analyst nanodegree students...\n\n* are interested in data science.\n* have a strong grasp of descriptive and inferential statistics.\n* have programming experience (preferably in Python)\n* have a strong understanding of programming concepts such as variables, functions, loops, and basic data structures like lists and dictionaries.\n\n <b>Take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-2364518584\" target=\"_blank\">Readiness Assessment</a> to see if you're ready to get started.</b>\n  \n\nGeneral Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* You have access to a computer with a broadband connection, on which you?ll install a professional code/text editor (ie. Sublime Text or Atom) and programming languages like Python and R and associating data science libraries.\n* You will be a committed and contributing participant of the community.",
      "syllabus": "**7 Day Warm-Up: Find the Optimal Chopstick Length**<br>\n<em>An opportunity to get your feet wet and get some quick feedback about your progress. </em> \n\nSet up iPython notebook and commonly used data analysis libraries on your own computer. Use them to dig into the results of an experiment testing the optimal length of chopsticks and present your findings.\n\nPrepare for this project with: [Lesson 1 of Statistics](https://www.udacity.com/course/viewer#!/c-ud827/l-1293178557)\n\n**Test a Perceptual Phenomenon**\n\nUse descriptive statistics and a statistical test to analyze the Stroop effect, a classic result of experimental psychology. Give your readers a good intuition for the data and use statistical inference to draw a conclusion based on the results.\n\nPrepare for this project with: Statistics (available separately as [Inferential Statistics](https://www.udacity.com/course/viewer#!/c-ud201) and [Descriptive Statistics](https://www.udacity.com/course/viewer#!/c-ud827))\n\n**Investigate a Dataset**\n\nChoose one of Udacity's curated datasets and investigate it using NumPy and Pandas. Go through the entire data analysis process, starting by posing a question and finishing by sharing your findings.\n\nPrepare for this project with: [Intro to Data Analysis](https://www.udacity.com/course/viewer#!/c-ud170)\n\n**Wrangle OpenStreetMap Data**  \nChoose any area of the world in <a href=\"https://www.openstreetmap.org\" target=\"_blank\">OpenStreetMap </a> and use data munging techniques, such as assessing the quality of the data for validity, accuracy, completeness, consistency and uniformity, \nto clean the OpenStreetMap data for a part of the world that you care about. Choose between MongoDB or SQL as the data schema to complete your project. \n\n**Explore, Summarize, and Discover Interesting Insights from Datasets**  \nUse R to apply exploratory data analysis techniques. Practice understanding a single variable and relationships between multiple variables, and explore a selected data set for distributions, outliers, and anomalies.\n\nPrepare for this project with: [Data Analysis with R](https://www.udacity.com/course/viewer#!/c-ud651)\n\n\n**Identify Fraud from the Enron Email Dataset**  \nPlay detective and put your machine learning skills to use by building an algorithm to identify Enron Employees who may have committed fraud based on the public Enron financial and email dataset. \n\nPrepare for this project with:  [Intro to Machine Learning](https://www.udacity.com/course/viewer#!/c-ud120)\n\n**Tell Stories with Data Visualization**  \nCreate a data visualization from a data set that tells a story or highlights patterns in the data. Your work will be a reflection of the theory and best practices of data visualization.\n\nPrepare for this project with:  [Data Visualization](https://www.udacity.com/course/viewer#!/c-ud507)\n\n**Design and Analyze an A/B Test**\n\nMake design decisions for an A/B test, including which metrics to measure and how long the test should be run. Analyze the results of an A/B test that was run by Udacity and recommend whether or not to launch the change.\n\nPrepare for this project with: [A/B Testing](https://www.udacity.com/course/viewer#!/c-ud257) \n\n<br>\n<em>As with all our Nanodegree programs, we regularly audit and review our Data Analyst Nanodegree curriculum-- both courses and projects. We do so largely based on student and industry feedback, and we make adjustments wherever and whenever we identify opportunities for improvement. Any potential impacts on degree requirements are always communicated to students actively working towards the Nanodegree.</em>",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/data-analyst-nanodegree--nd002?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Data Science"
      ],
      "banner_image": "https://lh3.ggpht.com/QR1qKszE9uRVNuwafZgQOghcoZQ3VbcN89UAN3QE6HE1QULt2gkC47n1OAlYmQMyyxRSjJfrNxIeo3uaY-g=s0#w=4672&h=968",
      "short_summary": "Learn to clean up messy data, uncover patterns and insights, make predictions using machine learning, and clearly communicate your findings.",
      "slug": "data-analyst-nanodegree--nd002",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Best-in-class curriculum, personalized instruction, close mentoring, a peerless review model, and career guidance combine to equip students of this program with the skills necessary to obtain rewarding employment as a Data Analyst.\n \n<b>Take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-2364518584\" target=\"_blank\">Readiness Assessment</a> to find out if you're ready to get started.</b>\n\nLearn to:  \n\n* Wrangle, extract, transform, and load data from various databases, formats, and data sources  \n* Use exploratory data analysis techniques to identify meaningful relationships, patterns, or trends from complex data sets\n* Classify unlabeled data or predict into the future with applied statistics and machine learning algorithms   \n* Communicate data analysis and findings through effective data visualizations  \n\nWe have designed this program by working closely with expert data analysts and scientists at leading technology companies, and in partnership with their hiring managers to ensure you emerge from your degree program with the skills and talents these companies are seeking.",
      "expected_duration": 9
    },
    {
      "instructors": [

      ],
      "subtitle": "Build Complex Web Applications",
      "key": "nd004",
      "image": "https://lh3.googleusercontent.com/x43q1RlhL8QBYyQfj63Tv5Pqkx7v2VPFsqfuFnR36gKTWGjd2XvWW3odzbrKBZktFtq2J7_0-V9vOxsuhR0=s0#w=1724&h=1060",
      "expected_learning": "The Full Stack Web Developer Nanodegree is designed to prepare you for a career in web development. As a Full Stack Web Developer, you are the \"jack of all trades\" who companies rely on to build, support and maintain their web applications. With our industry partners, we've carefully crafted the most efficient set of projects and skills training to guide you along the way.\n\nIn this Nanodegree you will hone your understanding of how the web works, you'll develop complex relational databases used to store your applications' data, you'll secure and configure your own Linux-based servers, and you'll build complete web applications using HTML, CSS, JavaScript and Python.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Full Stack Web Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "Prerequisites:\n\nIn order to determine if the Full Stack Web Developer Nanodegree is a good fit for you, please take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3486749853\" target=\"_blank\">Readiness Assessment</a>. This will help you determine if you are ready to start.\n\nMinimum Requirements:\n\n1. Experience using HTML, CSS and JavaScript to build complex client-side applications. If you do not have experience in these languages, we encourage you to enroll in our <a href=\"https://www.udacity.com/course/front-end-web-developer-nanodegree--nd001\" target=\"_blank\">Front-End Web Developer Nanodegree</a>.\n2. Beginner-level experience in Python. If you do not have this experience, check out our <a href=\"https://www.udacity.com/course/introduction-to-programming-nanodegree--nd000\" target=\"_blank\">Intro to Programming Nanodegree</a> or the first three lessons of <a href=\"https://www.udacity.com/course/intro-to-computer-science--cs101\" target=\"_blank\">Intro to Computer Science</a>.\n3. Experience using Git for version control. If you do not have this experience, check out our <a href=\"https://www.udacity.com/course/how-to-use-git-and-github--ud775\" target=\"_blank\">How to Use Git and GitHub</a> course.\n4. You are self-driven and motivated to learn. Participation in this program requires consistently meeting the deadlines set for your cohort and devoting at least 10 hours per week to your work.\n5. You can communicate fluently and professionally in written and spoken English.\n6. You have access to a computer with a broadband connection, on which you'll install a professional code/text editor (ie. <a href=\"http://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a> or <a href=\"https://atom.io/\" target=\"_blank\">Atom</a>) as well as virtual machines (using <a href=\"https://www.virtualbox.org/\" target=\"_blank\">VirtualBox</a> and <a href=\"https://www.vagrantup.com/\" target=\"_blank\">Vagrant</a>).\n7. You are willing to contribute to the success of the program, including collaborating with fellow students and giving us feedback on how we can improve.\n\nDesirable Prior Experience:\n\n1. You've completed an online programming course.\n2. You've tried to build server-side applications in the past and want to learn how to do it like a pro.",
      "syllabus": "These are the projects you'll build and the classes that will prepare you to build each of the projects. You'll have access to all these in the Nanodegree:\n\n### PROJECT Movie Trailer Website\nYou will write server-side code to store a list of your favorite movies, including box art imagery and a movie trailer URL. You will then serve this data as a web page allowing visitors to review their movies and watch the trailers.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/programming-foundations-with-python--ud036\" target=\"_blank\">Programming Foundations with Python</a>\n\n### PROJECT Tournament Results\nYou will develop a database schema to store the game matches between players. You will then write code to query this data and determine the winners of various games.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/intro-to-relational-databases--ud197\" target=\"_blank\">Intro to Relational Databases</a>\n\n### PROJECT Item Catalog\nYou will develop an application that provides a list of items within a variety of categories as well as provide a user registration and authentication system. Registered users will have the ability to post, edit and delete their own items.\n\nPrepare for this project with:\n\n*  <a href=\"https://www.udacity.com/course/full-stack-foundations--ud088\" target=\"_blank\">Full Stack Foundations</a> <br>\n*  <a href=\"https://www.udacity.com/course/authentication-authorization-oauth--ud330\" target=\"_blank\">Authentication and Authorization</a> <br> \n\n### PROJECT Design a Game API\nIn this project you will use these skills to develop your own game! You will write an API with endpoints that will allow anyone to develop a front-end for your game.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/developing-scalable-apps-in-python--ud858\" target=\"_blank\">Developing Scalable Apps with Python</a>\n\n### PROJECT Linux-based Server Configuration\nYou will take a baseline installation of a Linux distribution on a virtual machine and prepare it to host your web applications, to include installing updates, securing it from a number of attack vectors and installing/configuring web and database servers.\n\nPrepare for this project with:\n\n*  <a href=\"https://www.udacity.com/course/configuring-linux-web-servers--ud299\" target=\"_blank\">Configuring Linux Web Servers</a> <br>\n*  <a href=\"https://www.udacity.com/course/linux-command-line-basics--ud595\" target=\"_blank\">Linux Command Line Basics</a> <br> \n\n### Additional Information\n\nWe will be periodically reviewing the Full Stack Nanodegree curriculum - both classes and projects - and making adjustments based on student and industry feedback. We will notify active students working toward the Nanodegree about effects this may have on the degree requirements.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/full-stack-web-developer-nanodegree--nd004?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "Web Development"
      ],
      "banner_image": "https://lh6.ggpht.com/rAMZ_i12gHuhfTpWC_Q4WLiTYMbHXhKmbIY88l0G_C8Y8sZJ5DAEwSon3DGOrsc4eGhXvm6dt1ODDXuwzF0=s0#w=4680&h=968",
      "short_summary": "Learn how to create server-side, data-driven web applications that support any front-end and can scale to support hundreds of thousands of users.",
      "slug": "full-stack-web-developer-nanodegree--nd004",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This Nanodegree program is the most efficient curriculum to prepare you for a job as a Full Stack Web Developer. Participants in the program will learn to build complex server-side web applications that make use of powerful relational databases to persistently store data. You'll then learn how to secure and configure your very own Linux-based server to host your applications. Finally, you'll explore the challenges in horizontally scaling an application to support thousands of users with a cloud-based application hosting provider.\n\nYou'll also have the opportunity to prepare for your new career with reviews of your online presence (resume, LinkedIn, portfolio), prepare for interviews, take part in workshops covering topics like networking and salary negotiation as well as take part in a new program facilitating job placement.",
      "expected_duration": 6
    },
    {
      "instructors": [

      ],
      "subtitle": "Learn to Code",
      "key": "nd000",
      "image": "https://lh3.googleusercontent.com/fa733-DxkXpEOz23x-xvZ_qX42HrOM2MOwqwKwjSs7v6ptZ6Emaf8R3HijCU3NGPfD4bv_EGwayuZ3iKv0A=s0#w=1724&h=1060",
      "expected_learning": "Programming can be hard. The language is often complex, and the skills are rarefied. For a novice, it can be difficult to know where to start. These challenges often stand in the way for many people. Our mission is to change this. We want to make the world of programming accessible, understandable, and beneficial. All successful programmers share a common body of knowledge. This degree will teach you those same skills.\n\nCompletion of this Nanodegree will empower you to make an informed choice about your future. You may decide to pursue a whole new careeer in tech. Your newfound technical literacy may open up promotional opportunities in your current role. You may embark on long-imagined personal project. Regardless of the direction you take, your programming knowledge will allow you to communicate effectively, build efficiently, and think creatively.",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "Intro to Programming Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "General Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n\nBasic Computer Skills:\n\n* You can find the location of a file on your computer\n* You can rename a file on your computer \n* You can attach a file to an email\n* You can compress (.zip) and uncompress a file on your computer\n* You can download and install programs from the internet",
      "syllabus": "## What You Will Build\n\nAs you progress through this Nanodegree you will document what you're learning in a web page that you'll build as you go. By the end you will have a fully-functioning web page and some cool programs that demonstrate what you've learned, like how to:\n\n### Look Professional\nBy using a \"styling\" language called CSS, you will be able to quickly and easily change the look and feel of your web page. While learning CSS, you'll also gain experience with one of the most important concepts in computer science: avoiding repetition through something called *abstraction*. \n\n### Display Videos\nIn addition to your own notes about what you're learning, you'll learn to write computer code in a language called Python that will embed your favorite videos (from Udacity or anywhere else) directly onto a web page. While learning  Python, you'll be developing a skill that's required for every programming project regardless of language: using procedural thinking to tell a computer exactly what you want it to do.\n\n\n### Be User-Friendly\nEven though *you* will have the skills to modify your web page by changing the code it's made from, the people you show it to may not. You'll add a form that allows visitors to add their own content to your page (if you let them of course). While you're learning what to do with information that someone submits to your web page, you'll also gain a deeper understanding for how the internet works and how computer programmers assemble complex programs by combining pieces of computer code that others have written before them. \n\n## How You Will Learn to Build it\n\nThis Nanodegree consists of a series of 5 stages. In each one, you will learn new broadly-applicable technical skills. After each stage, you will complete a project checkpoint, then submit your work for valuable feedback on your progress.  \n\n### Stage 1: Make Your Web Page\nYou will learn the basics of how the internet works and how documents written in a language called HTML form the backbone of the Web. In the **project checkpoint** at the end you'll *write HTML and CSS (another language) to make your web page look professional.*\n\n### Stage 2: Code Your Own Quiz\nThis is where you'll learn how to program. You'll learn a programming language called Python and you'll use it to write instructions that the computer can understand and execute. After this stage you will have incredible power: you will be able to automate almost any repetitive task that can be done on a computer. In the **project checkpoint** you will *write a program in Python to build a fill-in-the blanks type quiz.*\n\n### Stage 3: Create a Movie Website\nIn this stage, you will learn an entirely new approach to programming (and thinking) called Object Oriented Programming and how to use this approach to build impressive programs by simply reusing or modifying computer code that others have already written. In the **project checkpoint** you will create a simple movies webpage with images and trailers.*\n\n### Stage 4: Allow Comments\nUp to this point, you still haven't put your web page online: you've only seen it on your own computer. In this stage, you will gain a deeper understanding for how the internet works and will write code which tells computers called \"servers\" how to display web pages. In the **project checkpoint** you will *put your web page online and build what's called a \"back end\" which will allow people anywhere in the world to view and--if you let them--modify your site.*\n\n### Stage 5: Choose Your Next Steps\nAt this point, you will already have a solid understanding of most of the essential concepts and skills that programming requires. This stage will be a rapid sampling of some of the ideas that you haven't seen including:\n\n* **JavaScript**: the language of the web.\n* **APIs**: \"Application Programming Interfaces\" give programmers a way to easily incorporate data from all over the web into their applications.\n* **Recursion**: This may be the most mind-blowing idea in programming.\n* **Parallel Computing**: How to use many computers to solve really big problems more efficiently.\n* **How to Solve Big Problems**: You run into new challenges when you write large programs (or building substantial web pages). \n* **Responsive Web Design**: How to make your web page look good on a computer, tablet, or phone.\n\nIn the **project checkpoint** you will have the chance to *pursue one of these ideas even deeper by adding new functionality (you get to choose what) to your web page.*",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/intro-to-programming-nanodegree--nd000?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [

      ],
      "banner_image": "https://lh3.googleusercontent.com/XnIv9SDwxcAyryDVYxcvRnRP1GB__4rmyPWNa1fyINrfaZDlAFmptyFxMg0ITQiWHVP1qHrV44m1VeZ02gwD=s0#w=1170&h=242",
      "short_summary": "Welcome to the world of programming. Learn the foundational skills that all programmers use whether they program mobile apps, create web pages, or analyze data.",
      "slug": "intro-to-programming-nanodegree--nd000",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "If you have zero programming knowledge, completing this Nanodegree will give you the basic understanding and skills you need to get started in the world of programming. \n\nThis Nanodegree equips you with the foundational knowledge and skills that all programmers use whether they program mobile apps, create web pages, or analyze data. You won?t just learn to code, you will learn what it means to ?think like a programmer? and you'll have your own web page and a portfolio of programs you've built to prove it. \n\nSuccessful completion of this program will enhance your skills, broaden your opportunities, and lay the groundwork for a future in technology. It is not a career-track degree, but for beginners, it is a critical step forward",
      "expected_duration": 4
    },
    {
      "instructors": [

      ],
      "subtitle": "Program Apps for the iPhone and iPad",
      "key": "nd003",
      "image": "https://lh3.googleusercontent.com/MPVp_6l8qmqXtDUoSfBcoo5jxfpK17gGWSFOTkg5-rcJ_hG5ZO4-umI6xAtE74PB2c1fSP0NFKduSirMtBE=s0#w=1724&h=1060",
      "expected_learning": "Today about half the adult population owns a smartphone; by 2020, 80% will.<sup>1</sup> The average American smartphone user spends <a href=\"http://www.flurry.com/bid/109749/Apps-Solidify-Leadership-Six-Years-into-the-Mobile-Revolution#.VPYAJVPF8id\" target=\"_blank\">162 minutes per day</a> on their device. This presents enormous opportunities for companies seeking to become a part of people's daily lives. The smart device market is growing exponentially, with no end in sight. iOS developers are going to be very in-demand for a very long time. \n\nIn partnership with industry leaders, we've built a comprehensive set of projects and skills designed to launch your career as an iOS Developer. Specifically, you?ll learn:\n\n* MVC architecture and why it's important when developing apps\n* How to build sophisticated and polished user interfaces with UIKit components\n* How to implement common frameworks used by iOS developers\n* How to implement Core Data for local persistence of an object structure\n* How to use external APIs to make use of data from other companies\n\n***\n<sup>1</sup> ?Planet of Phones?, *The Economist*, http://www.economist.com/news/leaders/21645180-smartphone-ubiquitous-addictive-and-transformative-planet-phones",
      "featured": false,
      "project_name": "",
      "teaser_video": {
        "youtube_url": ""
      },
      "title": "iOS Developer Nanodegree",
      "related_degree_keys": [

      ],
      "required_knowledge": "In order to determine whether or not the iOS Developer Nanodegree is right for you, please take this <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3098108743\" target=\"_blank\">readiness assessment</a>. It will ask you a series of technical and time management questions to help you determine if now is the right time to start the program. General prerequisites are summarized below.\n\nGeneral Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting deadlines and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* Collaboration with peers and interactive feedback are critical to the success of the program. You must be a committed and contributing participant of the community.\n\niOS Developer Nanodegree Specific Requirements:\n\n* Access to a Mac computer running OS X 10.10.4 or later\n* Prior object-oriented programming experience, in any object-oriented language \n* Strong understanding of programming concepts like variables, if statements, and loops, as well as object-oriented programming concepts like functions and classes",
      "syllabus": "In the Nanodegree program, you?ll build five portfolio-worthy apps. Depending on your knowledge and skill level, you can either learn the necessary skills through our supporting courses, or jump into building the apps directly. A summary of each of these apps, as well as a link to their supporting course are included in the sections below.\n\n###Pitch Perfect\nBuild an app that records a message and plays the audio back through user-selected filters. \n\n<a href=\"https://itunes.apple.com/us/app/pitch-perfect-portfolio-app/id987684705?mt=8\" target=\"_blank\">Download</a> an example of what you'll create, then prepare for this project with <a href=\"https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585\" target=\"_blank\">Intro to iOS App Development with Swift</a>.\n\n###MemeMe\nTake a photo, and overlay text to meme-ify your friends. Then share on your favorite social channels!\n\n<a href=\"https://itunes.apple.com/us/app/mememe-portfolio-app/id994289240?mt=8\" target=\"_blank\">Download</a> an example of what you'll create, then prepare for this project with <a href=\"https://www.udacity.com/course/uikit-fundamentals--ud788\" target=\"_blank\">UIKit Fundamentals</a>.\n\n###On the Map\nAdd your current location to a map of locations for other nanodegree students. Also, post a link to your own blog post, project, or portfolio for others to see.\n\n<a href=\"https://itunes.apple.com/us/app/on-the-map-portfolio-app/id994619554?mt=8\" target=\"_blank\">Download</a> an example of what you'll create, then prepare for this project with: <a href=\"https://www.udacity.com/course/ios-networking-with-swift--ud421\" target=\"_blank\">iOS Networking with Swift</a>.\n\n###Virtual Tourist\nTour the world without leaving the comforts of your couch! This app allows you to drop pins on a map and pull up Flickr images associated with that location. You will store the locations and images using Core Data.\n\n<a href=\"https://itunes.apple.com/us/app/virtual-tourist-portfolio/id994696845?mt=8\" target=\"_blank\">Download</a> an example of what you'll create, then prepare for this project with: <a href=\"https://www.udacity.com/course/ios-persistence-and-core-data--ud325\" target=\"_blank\">iOS Persistence and Core Data</a>.\n\n### You Decide!\nLanding a job as an iOS Developer requires more than technical skills; it requires creativity and innovation. Drawing on everything you?ve learned so far in the Nanodegree, you'll now dream up, design, and code your own custom app.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/how-to-make-an-ios-app--ud607\" target=\"_blank\">How to Make an iOS App</a>",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ios-developer-nanodegree--nd003?utm_medium=referral&utm_campaign=api",
      "project_description": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [

      ],
      "tracks": [
        "iOS"
      ],
      "banner_image": "https://lh5.ggpht.com/RssNhhuFLl8FNeRwpNOSsK5ron6RNdi459PtAT5QFQiqQWqwsICsy9bcq043-3eqL7P7nngnkFnEt0CuiTo=s0#w=1170&h=422",
      "short_summary": "Master writing in Swift as you build five portfolio-worthy iOS apps to demonstrate your expertise as an iOS Developer.",
      "slug": "ios-developer-nanodegree--nd003",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Being an iOS Developer is a remarkable occupation. Creating new apps for the iPhone and iPad opens up worlds of opportunity, and allows you to leverage your creativity to connect users around the world in innovative, interesting, fun, and sometimes even world-changing ways. There is a reason why iOS developers are so in-demand, and why it?s such an enviable career. We?ve designed this Nanodegree program to teach you the skills required to become an entry-level iOS Developer.\n\nOver the course of your iOS Developer Nanodegree program you?ll build <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3101108604/m-3805928538\" target=\"_blank\">five portfolio-worthy iOS apps</a> that demonstrate your expertise as an iOS Developer. You?ll write these apps in Swift, Apple?s custom programming language designed specifically for building iOS and OS X apps. You?ll receive community and mentor support throughout, as well as benefit from the rigor and rapidity of our peerless code review system. Finally, you?ll receive career guidance as we review your resume, audit your online presence, provide you interview training, and more. You?ll even take part in a new program facilitating job placement.\n\nExcited? Ready to begin? Great! We just need you to take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3098108743\" target=\"_blank\">Readiness Assessment</a> first, to ensure you're prepared for the curriculum level. (We require past programming experience.)",
      "expected_duration": 6
    }
  ]
}